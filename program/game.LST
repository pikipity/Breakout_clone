C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN game.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE game.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "game.h"
   3          #include "lcd12864.h"
   4          
   5          //variables of game
   6          unsigned char game_status=4;//2: win  1: continue. 0: end  3: firest time show life 4: show title  5: wait
             -ing for start  6:show level
   7                                                                  //7: enter eat longer 8: eat clear 9: eat win  10:eat die
   8                                                                  //11: quit eat longer
   9          unsigned char life=5;
  10          unsigned char number_frame=0;
  11          unsigned char max_number_frame=0;
  12          bit frame_finish=0;
  13          bit frame_begin=0;
  14          unsigned char level=1;//total 3 level
  15          
  16          //win character
  17          unsigned char code win[]={
  18                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -W-
  19                  0x04,0xFC,0xFC,0x04,0x00,0x03,0xFF,0x80,
  20                  0x00,0xFC,0xFC,0x00,0x80,0xFF,0x03,0x00,
  21                  0x00,0x00,0x03,0x3F,0x3C,0x03,0x03,0x3C,
  22                  0x3F,0x03,0x00,0x00,
  23                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  24                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  25                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  26                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  27                  0x20,0x20,0x20,0x00,
  28                  0x04,0xFC,0xFC,0xE0,0x00,0x00,0x00,0x04,  // -N-
  29                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x01,
  30                  0x07,0x1C,0x70,0xC0,0xFF,0xFF,0x00,0x00,
  31                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x03,
  32                  0x0F,0x3F,0x00,0x00,
  33                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  34                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  35                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  36                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  37                  0x00,0x00,0x00,0x00};
  38          unsigned char code die[]={
  39                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -D-
  40                  0x70,0xE0,0x80,0x00,0x00,0xFF,0xFF,0x00,
  41                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  42                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x30,0x18,
  43                  0x0E,0x07,0x01,0x00,
  44                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  45                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  46                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  47                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  48                  0x20,0x20,0x20,0x00,
  49                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  50                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  51                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  52                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  53                  0x30,0x38,0x3E,0x00,
  54                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 2   

  55                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  56                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  57                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  58                  0x00,0x00,0x00,0x00};
  59          unsigned char code lifefont[]={
  60                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  61                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  62                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  64                  0x30,0x38,0x3E,0x00,
  65                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  66                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  67                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  68                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  69                  0x20,0x20,0x20,0x00,
  70                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -F-
  71                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  72                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  73                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x00,
  74                  0x00,0x00,0x00,0x00,
  75                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  76                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  77                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  78                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  79                  0x30,0x38,0x3E,0x00,
  80                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
  81                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
  82                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
  83                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84                  0x00,0x00,0x00,0x00};
  85          unsigned char code levelfont[]={
  86                  //level=
  87                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  88                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  89                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  90                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  91                  0x30,0x38,0x3E,0x00,
  92                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  93                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  94                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  95                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  96                  0x30,0x38,0x3E,0x00,
  97                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -V-
  98                  0xFC,0xFC,0x04,0x00,0x00,0x00,0x3F,0xFF,
  99                  0xC0,0x00,0xC0,0xFF,0x3F,0x00,0x00,0x00,
 100                  0x00,0x00,0x00,0x03,0x1F,0x3C,0x1F,0x03,
 101                  0x00,0x00,0x00,0x00,
 102                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 103                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 104                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 105                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 106                  0x30,0x38,0x3E,0x00,
 107                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
 108                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 109                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 110                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 111                  0x30,0x38,0x3E,0x00,
 112                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
 113                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
 114                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
 115                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116                  0x00,0x00,0x00,0x00};
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 3   

 117          unsigned char code number[]={
 118                  0x00,0xC0,0xF0,0x38,0x0C,0x04,0x0C,0x38,  // -0-
 119                  0xF0,0xC0,0x00,0x00,0xFF,0xFF,0x00,0x00,
 120                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 121                  0x00,0x03,0x0F,0x1C,0x30,0x20,0x30,0x1C,
 122                  0x0F,0x03,0x00,0x00,
 123                  0x00,0x10,0x10,0x18,0x18,0xFC,0xFC,0x00,  // -1-
 124                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 125                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 126                  0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,0x20,
 127                  0x20,0x20,0x00,0x00,
 128                  0x60,0xF0,0xF8,0x0C,0x04,0x04,0x04,0x0C,  // -2-
 129                  0x18,0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,
 130                  0xC0,0x60,0x30,0x18,0x0E,0x07,0x01,0x00,
 131                  0x38,0x3E,0x3F,0x33,0x30,0x30,0x30,0x30,
 132                  0x30,0x30,0x3C,0x00,
 133                  0x00,0x30,0x78,0x78,0x0C,0x04,0x04,0x0C,  // -3-
 134                  0x18,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,
 135                  0x08,0x08,0x1C,0x16,0x33,0xE1,0xC0,0x00,
 136                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 137                  0x18,0x1F,0x0F,0x00,
 138                  0x00,0x00,0x00,0x00,0x80,0xE0,0x38,0xFC,  // -4-
 139                  0xFC,0x00,0x00,0x00,0x80,0xE0,0x38,0x0E,
 140                  0x03,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,
 141                  0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x3F,
 142                  0x3F,0x21,0x21,0x01,
 143                  0x00,0xFC,0xFC,0x0C,0x0C,0x0C,0x0C,0x0C,  // -5-
 144                  0x0C,0x0C,0x00,0x00,0x00,0x1F,0x0F,0x08,
 145                  0x04,0x02,0x02,0x06,0x1C,0xF8,0xE0,0x00,
 146                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 147                  0x1C,0x0F,0x03,0x00};
 148          
 149          unsigned char code title[]={
 150          //Breakout
 151                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -B-
 152                  0xF0,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 153                  0x08,0x08,0x1C,0x16,0x73,0xE1,0x80,0x00,
 154                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x30,
 155                  0x1C,0x0F,0x03,0x00,
 156                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -R-
 157                  0xF8,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 158                  0x38,0xF8,0xCC,0x06,0x07,0x01,0x00,0x00,
 159                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x03,0x2F,
 160                  0x3C,0x30,0x20,0x00,
 161                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 162                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 163                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 164                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 165                  0x30,0x38,0x3E,0x00,
 166                  0x00,0x00,0x00,0x00,0xF0,0x0C,0x3C,0xF0,  // -A-
 167                  0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,
 168                  0x43,0x40,0x40,0x43,0xFF,0xF0,0x00,0x00,
 169                  0x20,0x3E,0x3F,0x20,0x00,0x00,0x00,0x00,
 170                  0x20,0x3F,0x3E,0x20,
 171                  0x04,0xFC,0xFC,0x04,0x00,0x80,0xE4,0x7C,  // -K-
 172                  0x1C,0x04,0x04,0x00,0x00,0xFF,0xFF,0x78,
 173                  0x1E,0x7F,0xE1,0x80,0x00,0x00,0x00,0x00,
 174                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x01,0x27,
 175                  0x3E,0x38,0x20,0x20,
 176                  0xE0,0xF0,0x18,0x0C,0x04,0x04,0x04,0x0C,  // -O-
 177                  0x18,0xF0,0xE0,0x00,0xFF,0xFF,0x00,0x00,
 178                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 4   

 179                  0x07,0x0F,0x18,0x30,0x20,0x20,0x20,0x30,
 180                  0x18,0x0F,0x07,0x00,
 181                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -U-
 182                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x00,
 183                  0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 184                  0x00,0x0F,0x1F,0x30,0x20,0x20,0x20,0x30,
 185                  0x1F,0x0F,0x00,0x00,
 186                  0x7C,0x1C,0x0C,0x04,0x04,0xFC,0xFC,0x04,  // -T-
 187                  0x04,0x0C,0x1C,0x7C,0x00,0x00,0x00,0x00,
 188                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 189                  0x00,0x00,0x00,0x20,0x20,0x3F,0x3F,0x20,
 190                  0x20,0x00,0x00,0x00,};
 191          unsigned char code clone[]={
 192                  0x00,0xFC,0x02,0x02,0x02,0x86,0x00,0x00,  // -C-
 193                  0x01,0x01,0x01,0x00,
 194                  0x00,0x02,0xFE,0x02,0x00,0xC0,0x00,0x01,  // -L-
 195                  0x01,0x01,0x01,0x01,
 196                  0x00,0xFC,0x02,0x02,0x02,0xFC,0x00,0x00,  // -O-
 197                  0x01,0x01,0x01,0x00,
 198                  0x02,0xFE,0x0E,0x70,0x82,0xFE,0x01,0x01,  // -N-
 199                  0x01,0x00,0x01,0x01,
 200                  0x02,0xFE,0x12,0x3A,0x02,0x86,0x01,0x01,  // -E-
 201                  0x01,0x01,0x01,0x01};
 202          unsigned char code press_start[]={
 203                  //press_start
 204                  0x00,0x02,0xFE,0x22,0x22,0x1C,0x00,0x01,  // -P-
 205                  0x01,0x01,0x00,0x00,
 206                  0x00,0x08,0xF8,0x10,0x08,0x08,0x00,0x01,  // -r-
 207                  0x01,0x01,0x01,0x01,
 208                  0x00,0xF0,0x28,0x28,0x28,0x30,0x00,0x00,  // -e-
 209                  0x01,0x01,0x01,0x01,
 210                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 211                  0x01,0x01,0x01,0x00,
 212                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 213                  0x01,0x01,0x01,0x00,
 214                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
 215                  0x00,0x00,0x00,0x00,
 216                  0x00,0x8C,0x92,0x12,0x14,0xE6,0x00,0x01,  // -S-
 217                  0x00,0x01,0x01,0x00,
 218                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 219                  0x01,0x01,0x01,0x00,
 220                  0x00,0xC0,0x7A,0x46,0x78,0xC0,0x01,0x01,  // -A-
 221                  0x01,0x00,0x01,0x01,
 222                  0x02,0xFE,0x22,0x22,0x62,0x9C,0x01,0x01,  // -R-
 223                  0x01,0x00,0x00,0x00,
 224                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 225                  0x01,0x01,0x01,0x00};
 226          
 227          unsigned char code prop[]={
 228          //make bar longer (L): 1
 229          0xFF,0x81,0x81,0xBF,0xBF,0xBF,0xBF,0xFF,
 230          //clear one area (C): 2
 231          0xFF,0xC3,0xBD,0xBD,0xBD,0xBD,0xDB,0xFF,
 232          //Win (W): 3
 233          0xFF,0xC1,0xBF,0xC3,0xC3,0xBF,0xC1,0xFF,
 234          //Die (D): 4
 235          0xFF,0x81,0x81,0xBD,0xBD,0xDB,0xE7,0xFF
 236          };
 237          
 238          unsigned char prop_exist=0;
 239          bit longer=0;
 240          unsigned char longer_time=0;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 5   

 241          unsigned char prop_x=0;
 242          unsigned char prop_y=0;
 243          
 244          unsigned char prop_frame=0;
 245          
 246          void random_prop(){
 247   1              unsigned char prop_num,x,y,i;
 248   1              bit x_change;
 249   1              if(longer){
 250   2                      if(longer_time<255){
 251   3                              longer_time++;
 252   3                      }else{
 253   3                              longer=0;
 254   3                              longer_time=0;
 255   3                              game_status=11;
 256   3                      }
 257   2              }
 258   1              if(prop_exist==0){
 259   2                      prop_num=255-TL0;
 260   2                      switch(prop_num){
 261   3                              case 1:
 262   3                                      prop_exist=1;
 263   3                                      y=TL0;
 264   3                                      x=255-y;
 265   3                                      y=(255-y)/5+33;
 266   3                                      prop_x=x;
 267   3                                      prop_y=y;
 268   3                                      y=y/8;
 269   3                                      for(i=0;i<8;i++){
 270   4                                              if(x+i<64){
 271   5                                                      choose_screen(1);
 272   5                                                      x_change=0;
 273   5                                              }else{
 274   5                                                      x-=64;
 275   5                                                      choose_screen(2);
 276   5                                                      x_change=1;
 277   5                                              }
 278   4                                              lcd_write_command(0x40|(x+i));
 279   4                                              lcd_write_command(0xb8|y);
 280   4                                              lcd_write_data(prop[i]);
 281   4                                              if(x_change){
 282   5                                                      x+=64;
 283   5                                              }
 284   4                                      }
 285   3                                      break;
 286   3                              case 50:
 287   3                                      prop_exist=2;
 288   3                                      y=TL0;
 289   3                                      x=255-y;
 290   3                                      y=(255-y)/5+33;
 291   3                                      prop_x=x;
 292   3                                      prop_y=y;
 293   3                                      y=y/8;
 294   3                                      for(i=0;i<8;i++){
 295   4                                              if(x+i<64){
 296   5                                                      choose_screen(1);
 297   5                                                      x_change=0;
 298   5                                              }else{
 299   5                                                      x-=64;
 300   5                                                      choose_screen(2);
 301   5                                                      x_change=1;
 302   5                                              }
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 6   

 303   4                                              lcd_write_command(0x40|(x+i));
 304   4                                              lcd_write_command(0xb8|y);
 305   4                                              lcd_write_data(prop[i+8]);
 306   4                                              if(x_change){
 307   5                                                      x+=64;
 308   5                                              }
 309   4                                      }
 310   3                                      break;
 311   3                              case 100:
 312   3                                      prop_exist=3;
 313   3                                      y=TL0;
 314   3                                      x=255-y;
 315   3                                      y=(255-y)/5+33;
 316   3                                      prop_x=x;
 317   3                                      prop_y=y;
 318   3                                      y=y/8;
 319   3                                      for(i=0;i<8;i++){
 320   4                                              if(x+i<64){
 321   5                                                      choose_screen(1);
 322   5                                                      x_change=0;
 323   5                                              }else{
 324   5                                                      x-=64;
 325   5                                                      choose_screen(2);
 326   5                                                      x_change=1;
 327   5                                              }
 328   4                                              lcd_write_command(0x40|(x+i));
 329   4                                              lcd_write_command(0xb8|y);
 330   4                                              lcd_write_data(prop[i+16]);
 331   4                                              if(x_change){
 332   5                                                      x+=64;
 333   5                                              }
 334   4                                      }
 335   3                                      break;
 336   3                              case 20:
 337   3                                      prop_exist=4;
 338   3                                      y=TL0;
 339   3                                      x=255-y;
 340   3                                      y=(255-y)/5+33;
 341   3                                      prop_x=x;
 342   3                                      prop_y=y;
 343   3                                      y=y/8;
 344   3                                      for(i=0;i<8;i++){
 345   4                                              if(x+i<64){
 346   5                                                      choose_screen(1);
 347   5                                                      x_change=0;
 348   5                                              }else{
 349   5                                                      x-=64;
 350   5                                                      choose_screen(2);
 351   5                                                      x_change=1;
 352   5                                              }
 353   4                                              lcd_write_command(0x40|(x+i));
 354   4                                              lcd_write_command(0xb8|y);
 355   4                                              lcd_write_data(prop[i+24]);
 356   4                                              if(x_change){
 357   5                                                      x+=64;
 358   5                                              }
 359   4                                      }
 360   3                                      break;
 361   3                              default:break;
 362   3                      }
 363   2              }else{
 364   2                      if(prop_frame>100){
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 7   

 365   3                              x=prop_x;
 366   3                              y=prop_y;
 367   3                              y=y/8;
 368   3                              for(i=0;i<8;i++){
 369   4                                              if(x+i<64){
 370   5                                                      choose_screen(1);
 371   5                                                      x_change=0;
 372   5                                              }else{
 373   5                                                      x-=64;
 374   5                                                      choose_screen(2);
 375   5                                                      x_change=1;
 376   5                                              }
 377   4                                              lcd_write_command(0x40|(x+i));
 378   4                                              lcd_write_command(0xb8|y);
 379   4                                              lcd_write_data(0x00);
 380   4                                              if(x_change){
 381   5                                                      x+=64;
 382   5                                              }
 383   4                              }
 384   3                              prop_frame=0;
 385   3                              prop_exist=0;
 386   3                      }else{
 387   3                              prop_frame++;
 388   3                      }
 389   2              }
 390   1      }
 391          
 392          void clear_low_screen(){
 393   1              unsigned char x,y;
 394   1              choose_screen(0);
 395   1              for(x=4;x<8;x++){
 396   2                      for(y=0;y<64;y++){
 397   3                              lcd_write_command(0xb8|x);
 398   3                              lcd_write_command(0x40|y);
 399   3                              lcd_write_data(0x00);
 400   3                      }
 401   2              }
 402   1      }
 403          void show_life(unsigned char life){
 404   1              unsigned char x,y,i;
 405   1              bit flag;
 406   1              clear_low_screen();
 407   1                      for(i=0;i<6;i++){
 408   2                              for(y=0;y<12;y++){
 409   3                                      for(x=0;x<3;x++){
 410   4                                              flag=0;
 411   4                                              y+=20+15*i;
 412   4                                              x+=4;
 413   4                                              if(y<64){
 414   5                                                      choose_screen(1);
 415   5                                              }else{
 416   5                                                      choose_screen(2);
 417   5                                                      y-=64;
 418   5                                                      flag=1;
 419   5                                              }
 420   4                                              lcd_write_command(0xb8|x);
 421   4                                              lcd_write_command(0x40|y);
 422   4                                              if(flag){
 423   5                                                      y+=64;
 424   5                                              }
 425   4                                              y-=20+15*i;
 426   4                                              x-=4;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 8   

 427   4                                              if(i<5){
 428   5                                                      lcd_write_data(lifefont[y+x*12+i*36]);
 429   5                                              }else{
 430   5                                                      lcd_write_data(number[y+12*x+life*36]);
 431   5                                              }
 432   4                                      }       
 433   3                              }
 434   2                      }       
 435   1      }
 436          void show_level(unsigned char level){
 437   1              unsigned char x,y,i;
 438   1              bit flag;
 439   1              clear_low_screen();
 440   1                      for(i=0;i<7;i++){
 441   2                              for(y=0;y<12;y++){
 442   3                                      for(x=0;x<3;x++){
 443   4                                              flag=0;
 444   4                                              y+=20+15*i;
 445   4                                              x+=4;
 446   4                                              if(y<64){
 447   5                                                      choose_screen(1);
 448   5                                              }else{
 449   5                                                      choose_screen(2);
 450   5                                                      y-=64;
 451   5                                                      flag=1;
 452   5                                              }
 453   4                                              lcd_write_command(0xb8|x);
 454   4                                              lcd_write_command(0x40|y);
 455   4                                              if(flag){
 456   5                                                      y+=64;
 457   5                                              }
 458   4                                              y-=20+15*i;
 459   4                                              x-=4;
 460   4                                              if(i<6){
 461   5                                                      lcd_write_data(levelfont[y+x*12+i*36]);
 462   5                                              }else{
 463   5                                                      lcd_write_data(number[y+12*x+level*36]);
 464   5                                              }
 465   4                                      }       
 466   3                              }
 467   2                      }       
 468   1      }
 469          
 470          
 471          //variables of block
 472          //block1 for level 1
 473          /*   for test of win 
 474          unsigned char code block1[]={
 475          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 476          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 477          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 480          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 481          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 482          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 484          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 485          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 488          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 9   

 489          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 490          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 491          };
 492          */
 493          ///*
 494          unsigned char code block1[]={
 495          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 496          0xFF,0xF7,0xEF,0xEF,0xDF,0xDF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 497          0xFF,0xFF,0xFF,0x7F,0x9F,0xE7,0xFB,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 498          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 499          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFD,0xFD,
 500          0x0D,0xED,0xED,0xED,0xED,0xED,0x6D,0x6D,0x2C,0x2D,0xED,0xED,0xED,0xED,0xED,0xED,
 501          0xED,0xED,0x2D,0x2C,0x6D,0x6D,0x6D,0xED,0xED,0xED,0xED,0xED,0x0D,0xFD,0xFD,0x01,
 502          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 503          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,
 504          0x80,0xBF,0xBF,0xBF,0xBC,0xBC,0xBE,0xBE,0xB3,0xAD,0xAF,0xB7,0xBB,0xB9,0xB7,0xAF,
 505          0xAF,0xB5,0xBB,0xBF,0xBE,0xBE,0xBE,0xBF,0xBF,0xBF,0xBF,0xBF,0x80,0xFF,0xFF,0x00,
 506          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 507          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFD,0xFD,
 508          0xFD,0xFD,0xCD,0xC1,0xF1,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
 509          0xFD,0xFD,0xFD,0xFD,0xF1,0xC1,0xCD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFC,
 510          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 511          };
 512          //*/
 513          //block2 for level 2
 514          /*   for test of win 
 515          unsigned char code block2[]={
 516          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 517          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 518          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 519          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 520          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 521          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 522          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 523          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 524          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 525          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 526          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 527          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 528          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 529          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 530          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 531          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 532          };
 533          */
 534          ///*
 535          unsigned char code block2[]={
 536          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 537          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,
 538          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 539          0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 540          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 541          0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,0x07,0x01,0x06,0x03,0x01,0x01,0x01,0x01,
 542          0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,
 543          0x07,0x01,0x06,0x03,0x01,0x01,0x71,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 544          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 545          0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,
 546          0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,
 547          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 548          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 549          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 550          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 10  

 551          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 552          };
 553          //*/
 554          //block3 for level 3
 555          /*   for test of win 
 556          unsigned char code block3[]={
 557          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 558          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 559          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 560          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 561          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 562          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 563          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 564          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 565          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 566          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 567          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 568          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 569          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 570          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 571          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 572          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 573          };
 574          */
 575          ///*
 576          unsigned char code block3[]={
 577          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 578          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 579          0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 580          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 581          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x1F,
 582          0x4F,0xE7,0xF3,0xFB,0xF9,0xFD,0xFD,0xFC,0xFE,0xBE,0x1E,0x0F,0x07,0x03,0x01,0x01,
 583          0x40,0xE0,0xF0,0xE0,0x41,0x01,0x03,0x07,0x0E,0x1E,0xBE,0xFC,0xFD,0xFD,0xF9,0xFB,
 584          0xF3,0xE7,0x4F,0x1F,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 585          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 586          0xFE,0xFC,0xF9,0xFB,0xF3,0xF7,0xF7,0xE7,0xEF,0xEF,0xCF,0xDE,0xDC,0xD8,0xD0,0xD0,
 587          0xC0,0xC0,0xC1,0xC0,0xD0,0xD0,0xD8,0xDC,0xCE,0xEF,0xEF,0xE7,0xF7,0xF7,0xF3,0xFB,
 588          0xF9,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 589          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 590          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 591          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 592          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 593          };
 594          //*/
 595          
 596          
 597          //functions of block
 598          //draw block at the begining
 599          void draw_block(){
 600   1              unsigned char x,y;
 601   1              choose_screen(0);
 602   1              for(x=0;x<4;x++){
 603   2                      for(y=0;y<64;y++){
 604   3                              lcd_write_command(0xb8|x);
 605   3                              lcd_write_command(0x40|y);
 606   3                              switch(level){
 607   4                                      case 1: lcd_write_data(block1[x*64+y]);break;
 608   4                                      case 2: lcd_write_data(block2[x*64+y]);break;
 609   4                                      case 3: lcd_write_data(block3[x*64+y]);break;
 610   4                                      default: lcd_write_data(block1[x*64+y]);break;
 611   4                              }
 612   3                      }       
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 11  

 613   2              }
 614   1      }
 615          //check block
 616          void check_block(){
 617   1              unsigned char i,x,y,rdata;
 618   1              unsigned char now_game_status=game_status;
 619   1              game_status=2;
 620   1              for(i=1;i<3;i++){
 621   2                      choose_screen(i);
 622   2                      for(x=0;x<4;x++){
 623   3                              for(y=0;y<64;y++){
 624   4                                      lcd_write_command(0xb8|x);
 625   4                                      lcd_write_command(0x40|y);
 626   4                                      rdata=lcd_read_data();
 627   4                                      if(rdata!=0x00){
 628   5                                              game_status=now_game_status;
 629   5                                              break;
 630   5                                      }
 631   4                              }
 632   3                              if(game_status==now_game_status){
 633   4                                      break;
 634   4                              }
 635   3                      }
 636   2                      if(game_status==now_game_status){
 637   3                              break;
 638   3                      }
 639   2              }
 640   1      }
 641          
 642          //variables of bar
 643          //location of the most left point of bar
 644          unsigned char code o_bar_sit[]={0,63};
 645          unsigned char bar_sit[2];//(x,y)
 646          unsigned char temp_bar_sit_x;
 647          //bar speed
 648          unsigned char o_bar_speed;
 649          unsigned char bar_speed;
 650          //bar length
 651          unsigned char o_bar_len;
 652          unsigned char bar_len;
 653          //bar direction
 654          bit o_bar_direction=1;
 655          bit bar_direction;//0:left, 1:right
 656          
 657          //functions for bar
 658          //init bar
 659          void init_bar(){
 660   1              unsigned char i;
 661   1              switch(level){
 662   2                      case 1: o_bar_speed=1;o_bar_len=24;break;
 663   2                      case 2: o_bar_speed=2;o_bar_len=20;break;
 664   2                      case 3: o_bar_speed=3;o_bar_len=12;break;
 665   2                      default:o_bar_speed=1;o_bar_len=24;break;
 666   2              }
 667   1              bar_sit[0]=o_bar_sit[0];
 668   1              bar_sit[1]=o_bar_sit[1];
 669   1              bar_speed=o_bar_speed;
 670   1              bar_len=o_bar_len;
 671   1              bar_direction=o_bar_direction;
 672   1              for(i=0;i<bar_len;i++){
 673   2                      set_dot(bar_sit[0]+i,bar_sit[1]);
 674   2              }
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 12  

 675   1      }
 676          //draw bar
 677          void draw_bar(){
 678   1              unsigned char i;
 679   1              if(bar_direction){
 680   2                      //go right
 681   2                      if(bar_sit[0]<=128-bar_len-bar_speed && bar_len+bar_speed<=128){
 682   3                              for(i=1;i<bar_speed+1;i++){
 683   4                                      //clear preivous bar
 684   4                                      clear_dot(bar_sit[0]+i-1,bar_sit[1]);
 685   4                                      //draw new bar
 686   4                                      set_dot(bar_sit[0]+bar_len-1+i,bar_sit[1]);
 687   4                              }
 688   3                              //recalculate bar location
 689   3                              bar_sit[0]+=bar_speed;
 690   3                      }
 691   2              }else{
 692   2                      //go left
 693   2                      if(bar_sit[0]>=0+bar_speed){
 694   3                              for(i=1;i<bar_speed+1;i++){
 695   4                                      //clear preivous bar
 696   4                                      clear_dot(bar_sit[0]+bar_len-i,bar_sit[1]);
 697   4                                      //draw new bar
 698   4                                      set_dot(bar_sit[0]-i,bar_sit[1]);
 699   4                              }
 700   3                              //recalculate bar location
 701   3                              bar_sit[0]-=bar_speed;
 702   3                      }
 703   2              }
 704   1      }
 705          
 706          //variables of ball
 707          //location of ball
 708          unsigned char code o_ball_sit[]={7,62};//(x,y)
 709          unsigned char ball_sit[2];//(x,y)
 710          //ball speed
 711          unsigned char code o_ball_speed[]={0,1};
 712          unsigned char ball_speed[2];//(x,y)
 713          //ball direction
 714          bit o_ball_direction_x=0;
 715          bit ball_direction_x;//x: 0->left, 1->right.
 716          bit o_ball_direction_y=0;  
 717          bit ball_direction_y;//y: 0->down, 1->up.
 718          
 719          //functions for ball
 720          //init ball
 721          void init_ball(){
 722   1              ball_sit[0]=o_ball_sit[0];
 723   1              ball_sit[1]=o_ball_sit[1];
 724   1              ball_speed[0]=o_ball_speed[0];
 725   1              ball_speed[1]=o_ball_speed[1];
 726   1              ball_direction_x=o_ball_direction_x;
 727   1              ball_direction_y=o_ball_direction_y;
 728   1              set_dot(ball_sit[0],ball_sit[1]);
 729   1              set_dot(ball_sit[0],ball_sit[1]-1);
 730   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 731   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);   
 732   1      }
 733          //clear preview ball
 734          void clear_ball(){
 735   1              clear_dot(ball_sit[0],ball_sit[1]);
 736   1              clear_dot(ball_sit[0]+1,ball_sit[1]);
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 13  

 737   1              clear_dot(ball_sit[0],ball_sit[1]-1);
 738   1              clear_dot(ball_sit[0]+1,ball_sit[1]-1);
 739   1      }
 740          //calculate now ball
 741          void move_ball(){
 742   1              bit next_dot_y,next_dot_x;
 743   1              unsigned char i;
 744   1              bit x_change;
 745   1              //check whether the direction should be changed
 746   1              LS1=change;
 747   1              if(ball_direction_y){
 748   2                      if(read_dot(ball_sit[0],ball_sit[1]-2) || read_dot(ball_sit[0]+1,ball_sit[1]-2) || (ball_sit[1]-1)==0){
 749   3                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 750   4                                      prop_y=prop_y/8;
 751   4                                      for(i=0;i<8;i++){
 752   5                                                      if(prop_x+i<64){
 753   6                                                              choose_screen(1);
 754   6                                                              x_change=0;
 755   6                                                      }else{
 756   6                                                              prop_x-=64;
 757   6                                                              choose_screen(2);
 758   6                                                              x_change=1;
 759   6                                                      }
 760   5                                                      lcd_write_command(0x40|(prop_x+i));
 761   5                                                      lcd_write_command(0xb8|prop_y);
 762   5                                                      lcd_write_data(0x00);
 763   5                                                      if(x_change){
 764   6                                                              prop_x+=64;
 765   6                                                      }
 766   5                                      }
 767   4                                      prop_y=prop_y*8;
 768   4                                      prop_frame=0;
 769   4                                      switch(prop_exist){
 770   5                                              case 1:longer=1;game_status=7;break;
 771   5                                              case 2:game_status=8;break;
 772   5                                              case 3:game_status=9;break;
 773   5                                              case 4:game_status=10;break;
 774   5                                              default:break;
 775   5                                      }
 776   4                                      prop_exist=0;
 777   4                              }else{
 778   4                                      LS1=do_1;
 779   4                                      if((ball_sit[1]-1)!=0){
 780   5                                              clear_dot(ball_sit[0],ball_sit[1]-2);
 781   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]-2);
 782   5                                              if((ball_sit[1]-2)!=0){
 783   6                                                      clear_dot(ball_sit[0],ball_sit[1]-3);
 784   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-3);
 785   6                                              }
 786   5                                      }
 787   4                                      ball_direction_y=~ball_direction_y;
 788   4                              }       
 789   3                      }
 790   2              }else{
 791   2                      if(read_dot(ball_sit[0],ball_sit[1]+1) || read_dot(ball_sit[0]+1,ball_sit[1]+1)){
 792   3                              if(ball_sit[1]!=63){
 793   4                                      if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 794   5                                              prop_y=prop_y/8;
 795   5                                              for(i=0;i<8;i++){
 796   6                                                              if(prop_x+i<64){
 797   7                                                                      choose_screen(1);
 798   7                                                                      x_change=0;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 14  

 799   7                                                              }else{
 800   7                                                                      prop_x-=64;
 801   7                                                                      choose_screen(2);
 802   7                                                                      x_change=1;
 803   7                                                              }
 804   6                                                              lcd_write_command(0x40|(prop_x+i));
 805   6                                                              lcd_write_command(0xb8|prop_y);
 806   6                                                              lcd_write_data(0x00);
 807   6                                                              if(x_change){
 808   7                                                                      prop_x+=64;
 809   7                                                              }
 810   6                                              }
 811   5                                              prop_y=prop_y*8;
 812   5                                              prop_frame=0;
 813   5                                              switch(prop_exist){
 814   6                                                      case 1:longer=1;game_status=7;break;
 815   6                                                      case 2:game_status=8;break;
 816   6                                                      case 3:game_status=9;break;
 817   6                                                      case 4:game_status=10;break;
 818   6                                                      default:break;
 819   6                                              }
 820   5                                              prop_exist=0;
 821   5                                      }else{
 822   5                                              LS1=do_1;
 823   5                                              if(ball_sit[1]+1!=bar_sit[1]){
 824   6                                                      clear_dot(ball_sit[0],ball_sit[1]+1);
 825   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+1);
 826   6                                                      clear_dot(ball_sit[0],ball_sit[1]+2);
 827   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+2);
 828   6                                              }else{
 829   6                                                      LS1=do_2;
 830   6                                                      ball_speed[0]=bar_speed;
 831   6                                                      ball_direction_x=bar_direction;
 832   6                                              }
 833   5                                              ball_direction_y=~ball_direction_y;
 834   5                                      }
 835   4                              }else{
 836   4                                      game_status=0;
 837   4                              }
 838   3                      }
 839   2              }
 840   1              if(game_status==1){
 841   2              if(ball_direction_x){
 842   3                      if(read_dot(ball_sit[0]+2,ball_sit[1]) || read_dot(ball_sit[0]+2,ball_sit[1]-1) || (ball_sit[0]+1)==127)
             -{
 843   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 844   5                                      prop_y=prop_y/8;
 845   5                                      for(i=0;i<8;i++){
 846   6                                                      if(prop_x+i<64){
 847   7                                                              choose_screen(1);
 848   7                                                              x_change=0;
 849   7                                                      }else{
 850   7                                                              prop_x-=64;
 851   7                                                              choose_screen(2);
 852   7                                                              x_change=1;
 853   7                                                      }
 854   6                                                      lcd_write_command(0x40|(prop_x+i));
 855   6                                                      lcd_write_command(0xb8|prop_y);
 856   6                                                      lcd_write_data(0x00);
 857   6                                                      if(x_change){
 858   7                                                              prop_x+=64;
 859   7                                                      }
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 15  

 860   6                                      }
 861   5                                      prop_y=prop_y*8;
 862   5                                      prop_frame=0;
 863   5                                      switch(prop_exist){
 864   6                                              case 1:longer=1;game_status=7;break;
 865   6                                              case 2:game_status=8;break;
 866   6                                              case 3:game_status=9;break;
 867   6                                              case 4:game_status=10;break;
 868   6                                              default:break;
 869   6                                      }
 870   5                                      prop_exist=0;
 871   5                              }else{
 872   5                                      LS1=do_1;
 873   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]);
 874   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]-1);
 875   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]);
 876   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]-1);
 877   5                                      ball_direction_x=~ball_direction_x;
 878   5                              }
 879   4                      }
 880   3              }else{
 881   3                      if(read_dot(ball_sit[0]-1,ball_sit[1]) || read_dot(ball_sit[0]-1,ball_sit[1]-1) || ball_sit[0]==0){
 882   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 883   5                                      prop_y=prop_y/8;
 884   5                                      for(i=0;i<8;i++){
 885   6                                                      if(prop_x+i<64){
 886   7                                                              choose_screen(1);
 887   7                                                              x_change=0;
 888   7                                                      }else{
 889   7                                                              prop_x-=64;
 890   7                                                              choose_screen(2);
 891   7                                                              x_change=1;
 892   7                                                      }
 893   6                                                      lcd_write_command(0x40|(prop_x+i));
 894   6                                                      lcd_write_command(0xb8|prop_y);
 895   6                                                      lcd_write_data(0x00);
 896   6                                                      if(x_change){
 897   7                                                              prop_x+=64;
 898   7                                                      }
 899   6                                      }
 900   5                                      prop_y=prop_y*8;
 901   5                                      prop_frame=0;
 902   5                                      switch(prop_exist){
 903   6                                              case 1:longer=1;game_status=7;break;
 904   6                                              case 2:game_status=8;break;
 905   6                                              case 3:game_status=9;break;
 906   6                                              case 4:game_status=10;break;
 907   6                                              default:break;
 908   6                                      }
 909   5                                      prop_exist=0;
 910   5                              }else{
 911   5                                      LS1=do_1;
 912   5                                      if(ball_sit[0]!=0){
 913   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]);
 914   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]-1);
 915   6                                              if((ball_sit[0]-1)!=0){
 916   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]);
 917   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-1);
 918   7                                              }
 919   6                                      }
 920   5                                      ball_direction_x=~ball_direction_x;
 921   5                              }
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 16  

 922   4                      }
 923   3              }
 924   2              //according to y direction to check next y dot status
 925   2              next_dot_y=0;
 926   2              if(ball_direction_y){
 927   3                      //go up
 928   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 929   4                              if(ball_sit[1]-1-i==0){
 930   5                                      next_dot_y=1;
 931   5                                      ball_sit[1]-=i;
 932   5                                      break;
 933   5                              }else if(read_dot(ball_sit[0],ball_sit[1]-1-i) || read_dot(ball_sit[0]+1,ball_sit[1]-1-i)){//if there i
             -s a dot
 934   5                                      next_dot_y=1;
 935   5                                      ball_sit[1]-=(i-1);
 936   5                                      break;
 937   5                              }
 938   4                      }
 939   3                      if(~next_dot_y){
 940   4                              ball_sit[1]-=ball_speed[1];
 941   4                      }
 942   3              }else{
 943   3                      //go down
 944   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 945   4                              if(read_dot(ball_sit[0],ball_sit[1]+i) || read_dot(ball_sit[0]+1,ball_sit[1]+i)){//if there is a dot
 946   5                                      next_dot_y=1;
 947   5                                      ball_sit[1]+=(i-1);
 948   5                                      break;
 949   5                              }
 950   4                      }
 951   3                      if(~next_dot_y){
 952   4                              ball_sit[1]+=ball_speed[1];
 953   4                      }
 954   3              }
 955   2              //according to x direction to check next x dot status
 956   2              next_dot_x=0;
 957   2              if(ball_direction_x){
 958   3                      //go right
 959   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 960   4                              if(ball_sit[0]+1+i==127){
 961   5                                      next_dot_x=1;
 962   5                                      ball_sit[0]+=i;
 963   5                                      break;
 964   5                              }else if(read_dot(ball_sit[0]+1+i,ball_sit[1]) || read_dot(ball_sit[0]+1+i,ball_sit[1]-1)){//if there i
             -s a dot
 965   5                                      next_dot_x=1;
 966   5                                      ball_sit[0]+=(i-1);
 967   5                                      break;
 968   5                              }
 969   4                      }
 970   3                      if(~next_dot_x){
 971   4                              ball_sit[0]+=ball_speed[0];
 972   4                      }
 973   3              }else{
 974   3                      //go left
 975   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 976   4                              if(ball_sit[0]-i==0){
 977   5                                      next_dot_x=1;
 978   5                                      ball_sit[0]-=i;
 979   5                                      break;
 980   5                              }else if(read_dot(ball_sit[0]-i,ball_sit[1]) || read_dot(ball_sit[0]-i,ball_sit[1]-1)){//if there is a 
             -dot
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 17  

 981   5                                      next_dot_x=1;
 982   5                                      ball_sit[0]-=(i-1);
 983   5                                      break;
 984   5                              }
 985   4                      }
 986   3                      if(~next_dot_x){
 987   4                              ball_sit[0]-=ball_speed[0];
 988   4                      }
 989   3              }
 990   2              }
 991   1      
 992   1      }
 993          //draw now ball
 994          void draw_ball(){
 995   1              //clear previous ball
 996   1              clear_ball();
 997   1              //calculate now ball
 998   1              move_ball();
 999   1              //draw now ball
1000   1              set_dot(ball_sit[0],ball_sit[1]);
1001   1              set_dot(ball_sit[0],ball_sit[1]-1);
1002   1              set_dot(ball_sit[0]+1,ball_sit[1]);
1003   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);
1004   1      }
1005          
1006          //refresh screen
1007          void refresh_screen(){
1008   1              bit flag,x_change;
1009   1              unsigned char i;
1010   1              unsigned char x,y;
1011   1              //Add frame number
1012   1              if(game_status!=1){
1013   2                      number_frame++;
1014   2              }
1015   1              if(game_status==4){
1016   2                      //start music
1017   2                      LS1=title_music;
1018   2                      //show title
1019   2                      if(frame_begin==0){
1020   3                              number_frame=0;
1021   3                              frame_begin=1;
1022   3                      }else{
1023   3                              if(frame_finish==0){
1024   4                                      //main program for show title
1025   4                                      //show BREAKOUT
1026   4                                      if(number_frame<80){
1027   5                                              for(i=number_frame/10;i<number_frame/10+1;i++){
1028   6                                                      for(y=0;y<12;y++){
1029   7                                                              for(x=0;x<3;x++){
1030   8                                                                      flag=0;
1031   8                                                                      y+=5+15*i;
1032   8                                                                      x+=1;
1033   8                                                                      if(y<64){
1034   9                                                                              choose_screen(1);
1035   9                                                                      }else{
1036   9                                                                              choose_screen(2);
1037   9                                                                              y-=64;
1038   9                                                                              flag=1;
1039   9                                                                      }
1040   8                                                                      lcd_write_command(0xb8|x);
1041   8                                                                      lcd_write_command(0x40|y);
1042   8                                                                      if(flag){
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 18  

1043   9                                                                              y+=64;
1044   9                                                                      }
1045   8                                                                      y-=5+15*i;
1046   8                                                                      x-=1;
1047   8                                                                      lcd_write_data(title[y+x*12+i*36]);
1048   8                                                              }       
1049   7                                                      }
1050   6                                              }
1051   5                                      }else if(number_frame>80 && number_frame<120){
1052   5                                              //show "clone"
1053   5                                              //clear previous fonts
1054   5                                              choose_screen(0);
1055   5                                              for(x=4;x<6;x++){
1056   6                                                      for(y=64-(number_frame-80);y<64;y++){
1057   7                                                              lcd_write_command(0xb8|x);
1058   7                                                              lcd_write_command(0x40|y);
1059   7                                                              lcd_write_data(0x00);
1060   7                                                      }
1061   6                                              }
1062   5                                              //show next fonts
1063   5                                              for(i=0;i<5;i++){
1064   6                                                      for(y=0;y<6;y++){
1065   7                                                              for(x=0;x<2;x++){
1066   8                                                                      flag=0;
1067   8                                                                      y+=127-(number_frame-80)+7*i;
1068   8                                                                      x+=4;
1069   8                                                                      if(y<64){
1070   9                                                                              choose_screen(1);
1071   9                                                                      }else{
1072   9                                                                              choose_screen(2);
1073   9                                                                              y-=64;
1074   9                                                                              flag=1;
1075   9                                                                      }
1076   8                                                                      if(y<64){
1077   9                                                                              lcd_write_command(0xb8|x);
1078   9                                                                              lcd_write_command(0x40|y);
1079   9                                                                              if(flag){
1080  10                                                                                      y+=64;
1081  10                                                                              }
1082   9                                                                      y-=127-(number_frame-80)+7*i;
1083   9                                                                      x-=4;
1084   9                                                                      lcd_write_data(clone[y+x*6+i*12]);
1085   9                                                                      }
1086   8                                                              }       
1087   7                                                      }
1088   6                                              }
1089   5                                      }else if(number_frame>120){
1090   5                                              frame_finish=1; 
1091   5                                      }
1092   4                              }else{
1093   4                                      game_status=5;
1094   4                                      frame_finish=0;
1095   4                                      frame_begin=0;
1096   4                              }
1097   3                      }
1098   2              }else if(game_status==5){
1099   2                      if(frame_begin==0){
1100   3                      //prepare for flashing
1101   3                              frame_begin=1;
1102   3                              number_frame=0;
1103   3                      }else{
1104   3                              //check button
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 19  

1105   3                              start=1;
1106   3                              if(start==0){
1107   4                                      LS1=change;
1108   4                                      first_page();
1109   4                                      draw_block();
1110   4                                      game_status=6;
1111   4                                      frame_begin=0;
1112   4                              }else{
1113   4                              //flashing
1114   4                              if(number_frame>20){
1115   5                                      number_frame=0;
1116   5                              }else if(number_frame>10 && number_frame<20){
1117   5                                      choose_screen(1);
1118   5                                      for(x=6;x<8;x++){
1119   6                                              for(y=20;y<64;y++){
1120   7                                                      lcd_write_command(0xb8|x);
1121   7                                                      lcd_write_command(0x40|y);
1122   7                                                      lcd_write_data(0x00);
1123   7                                              }
1124   6                                      }
1125   5                                      choose_screen(2);
1126   5                                      for(x=6;x<8;x++){
1127   6                                              for(y=0;y<43;y++){
1128   7                                                      lcd_write_command(0xb8|x);
1129   7                                                      lcd_write_command(0x40|y);
1130   7                                                      lcd_write_data(0x00);
1131   7                                              }
1132   6                                      }
1133   5                              }else if(number_frame<30){
1134   5                                      for(i=0;i<11;i++){
1135   6                                              for(y=0;y<6;y++){
1136   7                                                      for(x=0;x<2;x++){
1137   8                                                              flag=0;
1138   8                                                              y+=20+7*i;
1139   8                                                              x+=6;
1140   8                                                              if(y<64){
1141   9                                                                      choose_screen(1);
1142   9                                                              }else{
1143   9                                                                      choose_screen(2);
1144   9                                                                      y-=64;
1145   9                                                                      flag=1;
1146   9                                                              }
1147   8                                                              if(y<64){
1148   9                                                              lcd_write_command(0xb8|x);
1149   9                                                              lcd_write_command(0x40|y);
1150   9                                                              if(flag){
1151  10                                                                      y+=64;
1152  10                                                              }
1153   9                                                              y-=20+7*i;
1154   9                                                              x-=6;
1155   9                                                              lcd_write_data(press_start[y+x*6+i*12]);
1156   9                                                              }
1157   8                                                      }       
1158   7                                              }
1159   6                                      }
1160   5                              }
1161   4                              }
1162   3                      }
1163   2              }else if(game_status==6){
1164   2                      //start music
1165   2                      LS1=level_music;
1166   2                      //show level
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 20  

1167   2                      //show life
1168   2                      if(frame_finish==0){
1169   3                              number_frame=0;
1170   3                      }
1171   2                      max_number_frame=30;
1172   2                      if(number_frame<max_number_frame){
1173   3                              if(frame_finish==0){
1174   4                                      show_level(level);
1175   4                                      frame_finish=1;
1176   4                              }
1177   3                      }else{
1178   3                              clear_low_screen();
1179   3                              game_status=3;
1180   3                              frame_finish=0;
1181   3                      }
1182   2              }else if(game_status==3){
1183   2                      //show life
1184   2                      if(frame_finish==0){
1185   3                              number_frame=0;
1186   3                      }
1187   2                      max_number_frame=30;
1188   2                      if(number_frame<max_number_frame){
1189   3                              if(frame_finish==0){
1190   4                                      show_life(life);
1191   4                                      frame_finish=1;
1192   4                              }
1193   3                      }else{
1194   3                              TR0=1;
1195   3                              LS1=change;
1196   3                              clear_low_screen();
1197   3                              init_ball();
1198   3                              init_bar();
1199   3                              game_status=1;
1200   3                              frame_finish=0;
1201   3                      }
1202   2              }else if(game_status==7){
1203   2                      //become longer
1204   2                      if(frame_begin==0){
1205   3                              frame_begin=1;
1206   3                              number_frame=0;
1207   3                      }else{
1208   3                              if(number_frame<50){
1209   4                                      if(number_frame%10==0){
1210   5                                              for(i=0;i<bar_len;i++){
1211   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1212   6                                              }
1213   5                                      }else{
1214   5                                              for(i=0;i<bar_len;i++){
1215   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1216   6                                              }
1217   5                                      }
1218   4                              }else if(number_frame==50){
1219   4                                      bar_len=128;
1220   4                                      temp_bar_sit_x=bar_sit[0];
1221   4                                      bar_sit[0]=0;
1222   4                              }else if(number_frame<100){
1223   4                                      if(number_frame%10==0){
1224   5                                              for(i=0;i<bar_len;i++){
1225   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1226   6                                              }
1227   5                                      }else{
1228   5                                              for(i=0;i<bar_len;i++){
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 21  

1229   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1230   6                                              }
1231   5                                      }
1232   4                              }else{
1233   4                                      for(i=0;i<bar_len;i++){
1234   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1235   5                                      }
1236   4                                      frame_begin=0;
1237   4                                      game_status=1;
1238   4                                      longer_time=0;
1239   4                                      longer=1;
1240   4                              }
1241   3                      }
1242   2              }else if(game_status==8){
1243   2                      //clear area
1244   2                      if((255-TL0)<85){
1245   3                              x=0;
1246   3                      }else{
1247   3                              x=2;
1248   3                      }
1249   2                      if(frame_begin==0){
1250   3                              frame_begin=1;
1251   3                              number_frame=0;
1252   3                      }else{
1253   3                              if(number_frame<50){
1254   4                                      if(number_frame%10==0){
1255   5                                              for(i=0;i<2;i++){
1256   6                                                      for(y=0;y<64;y++){
1257   7                                                              choose_screen(0);
1258   7                                                              lcd_write_command(0xb8|x+i);
1259   7                                                              lcd_write_command(0x40|y);
1260   7                                                              lcd_write_data(0x00);
1261   7                                                      }
1262   6                                              }
1263   5                                      }else{
1264   5                                              for(i=0;i<2;i++){
1265   6                                                      for(y=0;y<64;y++){
1266   7                                                              choose_screen(0);
1267   7                                                              lcd_write_command(0xb8|x+i);
1268   7                                                              lcd_write_command(0x40|y);
1269   7                                                              lcd_write_data(0xFF);
1270   7                                                      }
1271   6                                              }
1272   5                                      }
1273   4                              }else{
1274   4                                      for(i=0;i<2;i++){
1275   5                                                      for(y=0;y<64;y++){
1276   6                                                              choose_screen(0);
1277   6                                                              lcd_write_command(0xb8|x+i);
1278   6                                                              lcd_write_command(0x40|y);
1279   6                                                              lcd_write_data(0x00);
1280   6                                                      }
1281   5                                      }
1282   4                                      frame_begin=0;
1283   4                                      game_status=1;
1284   4                              }
1285   3                      }
1286   2              }else if(game_status==9){
1287   2                      //win
1288   2                      x=prop_x;
1289   2                      y=prop_y;
1290   2                      y=y/8;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 22  

1291   2                      if(frame_begin==0){
1292   3                              frame_begin=1;
1293   3                              number_frame=0;
1294   3                      }else{
1295   3                              if(number_frame<50){
1296   4                                      if(number_frame%10==0){
1297   5                                              for(i=0;i<8;i++){
1298   6                                                      if(x+i<64){
1299   7                                                              choose_screen(1);
1300   7                                                              x_change=0;
1301   7                                                      }else{
1302   7                                                              x-=64;
1303   7                                                              choose_screen(2);
1304   7                                                              x_change=1;
1305   7                                                      }
1306   6                                                      lcd_write_command(0x40|(x+i));
1307   6                                                      lcd_write_command(0xb8|y);
1308   6                                                      lcd_write_data(prop[0x00]);
1309   6                                                      if(x_change){
1310   7                                                              x+=64;
1311   7                                                      }
1312   6                                              }
1313   5                                      }else{
1314   5                                              for(i=0;i<8;i++){
1315   6                                                      if(x+i<64){
1316   7                                                              choose_screen(1);
1317   7                                                              x_change=0;
1318   7                                                      }else{
1319   7                                                              x-=64;
1320   7                                                              choose_screen(2);
1321   7                                                              x_change=1;
1322   7                                                      }
1323   6                                                      lcd_write_command(0x40|(x+i));
1324   6                                                      lcd_write_command(0xb8|y);
1325   6                                                      lcd_write_data(prop[i+16]);
1326   6                                                      if(x_change){
1327   7                                                              x+=64;
1328   7                                                      }               
1329   6                                              }
1330   5                                      }
1331   4                              }else{
1332   4                                      for(i=0;i<8;i++){
1333   5                                              if(x+i<64){
1334   6                                                      choose_screen(1);
1335   6                                                      x_change=0;
1336   6                                              }else{
1337   6                                                      x-=64;
1338   6                                                      choose_screen(2);
1339   6                                                      x_change=1;
1340   6                                              }
1341   5                                              lcd_write_command(0x40|(x+i));
1342   5                                              lcd_write_command(0xb8|y);
1343   5                                              lcd_write_data(0x00);
1344   5                                              if(x_change){
1345   6                                                      x+=64;
1346   6                                              }
1347   5                                      }
1348   4                                      frame_begin=0;
1349   4                                      game_status=2;
1350   4                              }
1351   3                      }
1352   2              }else if(game_status==10){
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 23  

1353   2                      //Die
1354   2                      x=prop_x;
1355   2                      y=prop_y;
1356   2                      y=y/8;
1357   2                      if(frame_begin==0){
1358   3                              frame_begin=1;
1359   3                              number_frame=0;
1360   3                      }else{
1361   3                              if(number_frame<50){
1362   4                                      if(number_frame%10==0){
1363   5                                              for(i=0;i<8;i++){
1364   6                                                      if(x+i<64){
1365   7                                                              choose_screen(1);
1366   7                                                              x_change=0;
1367   7                                                      }else{
1368   7                                                              x-=64;
1369   7                                                              choose_screen(2);
1370   7                                                              x_change=1;
1371   7                                                      }
1372   6                                                      lcd_write_command(0x40|(x+i));
1373   6                                                      lcd_write_command(0xb8|y);
1374   6                                                      lcd_write_data(prop[0x00]);
1375   6                                                      if(x_change){
1376   7                                                              x+=64;
1377   7                                                      }
1378   6                                              }
1379   5                                      }else{
1380   5                                              for(i=0;i<8;i++){
1381   6                                                      if(x+i<64){
1382   7                                                              choose_screen(1);
1383   7                                                              x_change=0;
1384   7                                                      }else{
1385   7                                                              x-=64;
1386   7                                                              choose_screen(2);
1387   7                                                              x_change=1;
1388   7                                                      }
1389   6                                                      lcd_write_command(0x40|(x+i));
1390   6                                                      lcd_write_command(0xb8|y);
1391   6                                                      lcd_write_data(prop[i+24]);
1392   6                                                      if(x_change){
1393   7                                                              x+=64;
1394   7                                                      }               
1395   6                                              }
1396   5                                      }
1397   4                              }else{
1398   4                                      for(i=0;i<8;i++){
1399   5                                              if(x+i<64){
1400   6                                                      choose_screen(1);
1401   6                                                      x_change=0;
1402   6                                              }else{
1403   6                                                      x-=64;
1404   6                                                      choose_screen(2);
1405   6                                                      x_change=1;
1406   6                                              }
1407   5                                              lcd_write_command(0x40|(x+i));
1408   5                                              lcd_write_command(0xb8|y);
1409   5                                              lcd_write_data(0x00);
1410   5                                              if(x_change){
1411   6                                                      x+=64;
1412   6                                              }
1413   5                                      }
1414   4                                      frame_begin=0;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 24  

1415   4                                      game_status=0;
1416   4                              }
1417   3                      }
1418   2              }else if(game_status==11){
1419   2                      //end longer
1420   2                      if(frame_begin==0){
1421   3                              frame_begin=1;
1422   3                              number_frame=0;
1423   3                              longer=0;
1424   3                      }else{
1425   3                              if(number_frame<50){
1426   4                                      if(number_frame%10==0){
1427   5                                              for(i=0;i<bar_len;i++){
1428   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1429   6                                              }
1430   5                                      }else{
1431   5                                              for(i=0;i<bar_len;i++){
1432   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1433   6                                              }
1434   5                                      }
1435   4                              }else if(number_frame==50){
1436   4                                      for(i=0;i<bar_len;i++){
1437   5                                              clear_dot(i+bar_sit[0],bar_sit[1]);
1438   5                                      }
1439   4                                      bar_len=o_bar_len;
1440   4                                      bar_sit[0]=temp_bar_sit_x;
1441   4                              }else if(number_frame<100){
1442   4                                      if(number_frame%10==0){
1443   5                                              for(i=0;i<bar_len;i++){
1444   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1445   6                                              }
1446   5                                      }else{
1447   5                                              for(i=0;i<bar_len;i++){
1448   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1449   6                                              }
1450   5                                      }
1451   4                              }else{
1452   4                                      for(i=0;i<bar_len;i++){
1453   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1454   5                                      }
1455   4                                      frame_begin=0;
1456   4                                      game_status=1;
1457   4                              }
1458   3                      }
1459   2              }else{
1460   2              //check block
1461   2              check_block();
1462   2              //draw bar
1463   2              if(game_status==1){
1464   3                      //music
1465   3                      LS1=run_music;
1466   3                      //continuous status
1467   3                      random_prop();
1468   3                      draw_bar();
1469   3                      draw_ball();
1470   3              }else if(game_status==0){
1471   3                      LS1=die_music;
1472   3                      //end status
1473   3                      if(life==0){
1474   4                              //init level
1475   4                              level=1;
1476   4                              life=5;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 25  

1477   4                              //die information
1478   4                               //show life
1479   4                              if(frame_finish==0){
1480   5                                      number_frame=0;
1481   5                              }
1482   4                              if(number_frame<30){
1483   5                                      if(frame_finish==0){
1484   6                                              show_life(life);
1485   6                                              frame_finish=1;
1486   6                                      }
1487   5                              }else if(number_frame==30){
1488   5                                      //show "DIE!"
1489   5                                      first_page();
1490   5                                      for(i=0;i<4;i++){
1491   6                                              for(y=0;y<12;y++){
1492   7                                                      for(x=0;x<3;x++){
1493   8                                                              flag=0;
1494   8                                                              y+=30+20*i;
1495   8                                                              x+=1;
1496   8                                                              if(y<64){
1497   9                                                                      choose_screen(1);
1498   9                                                              }else{
1499   9                                                                      choose_screen(2);
1500   9                                                                      y-=64;
1501   9                                                                      flag=1;
1502   9                                                              }
1503   8                                                              lcd_write_command(0xb8|x);
1504   8                                                              lcd_write_command(0x40|y);
1505   8                                                              if(flag){
1506   9                                                                      y+=64;
1507   9                                                              }
1508   8                                                              y-=30+20*i;
1509   8                                                              x-=1;
1510   8                                                              lcd_write_data(die[y+x*12+i*36]);
1511   8                                                      }       
1512   7                                              }       
1513   6                                      }
1514   5                              }else if(number_frame>30){
1515   5                                      //check button
1516   5                                      start=1;
1517   5                                      if(start==0){
1518   6                                              first_page();
1519   6                                              game_status=4;
1520   6                                              frame_finish=0;
1521   6                                      }else{
1522   6                                      //flashing
1523   6                                              if(number_frame>50){
1524   7                                                      number_frame=31;
1525   7                                              }else if(number_frame>40 && number_frame<50){
1526   7                                                      choose_screen(0);
1527   7                                                      for(x=6;x<8;x++){
1528   8                                                              for(y=0;y<64;y++){
1529   9                                                                      lcd_write_command(0xb8|x);
1530   9                                                                      lcd_write_command(0x40|y);
1531   9                                                                      lcd_write_data(0x00);
1532   9                                                              }
1533   8                                                      }
1534   7                                              }else if(number_frame<40){
1535   7                                                      for(i=0;i<11;i++){
1536   8                                                              for(y=0;y<6;y++){
1537   9                                                                      for(x=0;x<2;x++){
1538  10                                                                              flag=0;
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 26  

1539  10                                                                              y+=20+7*i;
1540  10                                                                              x+=6;
1541  10                                                                              if(y<64){
1542  11                                                                                      choose_screen(1);
1543  11                                                                              }else{
1544  11                                                                                      choose_screen(2);
1545  11                                                                                      y-=64;
1546  11                                                                                      flag=1;
1547  11                                                                              }
1548  10                                                                              if(y<64){
1549  11                                                                                      lcd_write_command(0xb8|x);
1550  11                                                                                      lcd_write_command(0x40|y);
1551  11                                                                              if(flag){
1552  12                                                                                      y+=64;
1553  12                                                                              }
1554  11                                                                              y-=20+7*i;
1555  11                                                                              x-=6;
1556  11                                                                              lcd_write_data(press_start[y+x*6+i*12]);
1557  11                                                                              }
1558  10                                                                      }       
1559   9                                                              }
1560   8                                                      }
1561   7                                              }
1562   6                                      }
1563   5                              }
1564   4                      }else{
1565   4                              //show life
1566   4                              if(frame_finish==0){
1567   5                                      number_frame=0;
1568   5                                      life-=1;
1569   5                              }
1570   4                              max_number_frame=30;
1571   4                              if(number_frame<max_number_frame){
1572   5                                      if(frame_finish==0){
1573   6                                              show_life(life);
1574   6                                              frame_finish=1;
1575   6                                      }
1576   5                              }else{
1577   5                                      clear_low_screen();
1578   5                                      init_ball();
1579   5                                      init_bar();
1580   5                                      game_status=1;
1581   5                                      frame_finish=0;
1582   5                              }
1583   4                      }
1584   3              }else if(game_status==2){
1585   3                      //win status
1586   3                      //"WIN!"
1587   3                      LS1=win_music;
1588   3                      if(frame_finish==0){
1589   4                              frame_finish=1;
1590   4                              number_frame=0;
1591   4                              first_page();
1592   4                              for(i=0;i<4;i++){
1593   5                                      for(y=0;y<12;y++){
1594   6                                              for(x=0;x<3;x++){
1595   7                                                      flag=0;
1596   7                                                      y+=30+20*i;
1597   7                                                      x+=1;
1598   7                                                      if(y<64){
1599   8                                                              choose_screen(1);
1600   8                                                      }else{
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 27  

1601   8                                                              choose_screen(2);
1602   8                                                              y-=64;
1603   8                                                              flag=1;
1604   8                                                      }
1605   7                                                      lcd_write_command(0xb8|x);
1606   7                                                      lcd_write_command(0x40|y);
1607   7                                                      if(flag){
1608   8                                                              y+=64;
1609   8                                                      }
1610   7                                                      y-=30+20*i;
1611   7                                                      x-=1;
1612   7                                                      lcd_write_data(win[y+x*12+i*36]);
1613   7                                              }       
1614   6                                      }
1615   5                              }
1616   4                      }else{
1617   4                              //check button
1618   4                              start=1;
1619   4                              if(start==0){
1620   5                                      first_page();
1621   5                                      if(level<3){
1622   6                                              level++;
1623   6                                              draw_block();
1624   6                                              game_status=6;
1625   6                                              
1626   6                                      }else{
1627   6                                              level=1;
1628   6                                              life=5;
1629   6                                              game_status=4;
1630   6                                      }
1631   5                                      frame_finish=0;
1632   5                              }else{
1633   5                              //flashing
1634   5                              if(number_frame>20){
1635   6                                      number_frame=0;
1636   6                              }else if(number_frame>10 && number_frame<20){
1637   6                                      choose_screen(0);
1638   6                                      for(x=6;x<8;x++){
1639   7                                              for(y=0;y<64;y++){
1640   8                                                      lcd_write_command(0xb8|x);
1641   8                                                      lcd_write_command(0x40|y);
1642   8                                                      lcd_write_data(0x00);
1643   8                                              }
1644   7                                      }
1645   6                              }else if(number_frame<30){
1646   6                                      for(i=0;i<11;i++){
1647   7                                              for(y=0;y<6;y++){
1648   8                                                      for(x=0;x<2;x++){
1649   9                                                              flag=0;
1650   9                                                              y+=20+7*i;
1651   9                                                              x+=6;
1652   9                                                              if(y<64){
1653  10                                                                      choose_screen(1);
1654  10                                                              }else{
1655  10                                                                      choose_screen(2);
1656  10                                                                      y-=64;
1657  10                                                                      flag=1;
1658  10                                                              }
1659   9                                                              if(y<64){
1660  10                                                              lcd_write_command(0xb8|x);
1661  10                                                              lcd_write_command(0x40|y);
1662  10                                                              if(flag){
C51 COMPILER V8.02   GAME                                                                  11/16/2013 10:36:39 PAGE 28  

1663  11                                                                      y+=64;
1664  11                                                              }
1665  10                                                              y-=20+7*i;
1666  10                                                              x-=6;
1667  10                                                              lcd_write_data(press_start[y+x*6+i*12]);
1668  10                                                              }
1669   9                                                      }       
1670   8                                              }
1671   7                                      }
1672   6                              }
1673   5                              }       
1674   4                      }
1675   3              }
1676   2              }
1677   1      }
1678          
1679          //initial fiunction
1680          //init the game
1681          void game_init(){
1682   1              lcd_init();
1683   1              first_page();
1684   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6691    ----
   CONSTANT SIZE    =   2186    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      9       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
