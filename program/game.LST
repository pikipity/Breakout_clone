C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN game.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE game.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "game.h"
   3          #include "lcd12864.h"
   4          
   5          //variables of game
   6          unsigned char game_status=4;//2: win  1: continue. 0: end  3: firest time show life 4: show title  5: wait
             -ing for start  6:show level
   7                                                                  //7: enter eat longer 8: eat clear 9: eat win  10:eat die
   8                                                                  //11: quit eat longer
   9          unsigned char life=5;
  10          unsigned char number_frame=0;
  11          unsigned char max_number_frame=0;
  12          bit frame_finish=0;
  13          bit frame_begin=0;
  14          unsigned char level=1;//total 3 level
  15          
  16          //win character
  17          unsigned char code win[]={
  18                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -W-
  19                  0x04,0xFC,0xFC,0x04,0x00,0x03,0xFF,0x80,
  20                  0x00,0xFC,0xFC,0x00,0x80,0xFF,0x03,0x00,
  21                  0x00,0x00,0x03,0x3F,0x3C,0x03,0x03,0x3C,
  22                  0x3F,0x03,0x00,0x00,
  23                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  24                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  25                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  26                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  27                  0x20,0x20,0x20,0x00,
  28                  0x04,0xFC,0xFC,0xE0,0x00,0x00,0x00,0x04,  // -N-
  29                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x01,
  30                  0x07,0x1C,0x70,0xC0,0xFF,0xFF,0x00,0x00,
  31                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x03,
  32                  0x0F,0x3F,0x00,0x00,
  33                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  34                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  35                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  36                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  37                  0x00,0x00,0x00,0x00};
  38          unsigned char code die[]={
  39                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -D-
  40                  0x70,0xE0,0x80,0x00,0x00,0xFF,0xFF,0x00,
  41                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  42                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x30,0x18,
  43                  0x0E,0x07,0x01,0x00,
  44                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  45                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  46                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  47                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  48                  0x20,0x20,0x20,0x00,
  49                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  50                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  51                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  52                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  53                  0x30,0x38,0x3E,0x00,
  54                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 2   

  55                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  56                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  57                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  58                  0x00,0x00,0x00,0x00};
  59          unsigned char code lifefont[]={
  60                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  61                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  62                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  64                  0x30,0x38,0x3E,0x00,
  65                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  66                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  67                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  68                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  69                  0x20,0x20,0x20,0x00,
  70                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -F-
  71                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  72                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  73                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x00,
  74                  0x00,0x00,0x00,0x00,
  75                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  76                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  77                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  78                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  79                  0x30,0x38,0x3E,0x00,
  80                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
  81                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
  82                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
  83                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84                  0x00,0x00,0x00,0x00};
  85          unsigned char code levelfont[]={
  86                  //level=
  87                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  88                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  89                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  90                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  91                  0x30,0x38,0x3E,0x00,
  92                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  93                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  94                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  95                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  96                  0x30,0x38,0x3E,0x00,
  97                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -V-
  98                  0xFC,0xFC,0x04,0x00,0x00,0x00,0x3F,0xFF,
  99                  0xC0,0x00,0xC0,0xFF,0x3F,0x00,0x00,0x00,
 100                  0x00,0x00,0x00,0x03,0x1F,0x3C,0x1F,0x03,
 101                  0x00,0x00,0x00,0x00,
 102                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 103                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 104                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 105                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 106                  0x30,0x38,0x3E,0x00,
 107                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
 108                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 109                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 110                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 111                  0x30,0x38,0x3E,0x00,
 112                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
 113                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
 114                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
 115                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116                  0x00,0x00,0x00,0x00};
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 3   

 117          unsigned char code number[]={
 118                  0x00,0xC0,0xF0,0x38,0x0C,0x04,0x0C,0x38,  // -0-
 119                  0xF0,0xC0,0x00,0x00,0xFF,0xFF,0x00,0x00,
 120                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 121                  0x00,0x03,0x0F,0x1C,0x30,0x20,0x30,0x1C,
 122                  0x0F,0x03,0x00,0x00,
 123                  0x00,0x10,0x10,0x18,0x18,0xFC,0xFC,0x00,  // -1-
 124                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 125                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 126                  0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,0x20,
 127                  0x20,0x20,0x00,0x00,
 128                  0x60,0xF0,0xF8,0x0C,0x04,0x04,0x04,0x0C,  // -2-
 129                  0x18,0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,
 130                  0xC0,0x60,0x30,0x18,0x0E,0x07,0x01,0x00,
 131                  0x38,0x3E,0x3F,0x33,0x30,0x30,0x30,0x30,
 132                  0x30,0x30,0x3C,0x00,
 133                  0x00,0x30,0x78,0x78,0x0C,0x04,0x04,0x0C,  // -3-
 134                  0x18,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,
 135                  0x08,0x08,0x1C,0x16,0x33,0xE1,0xC0,0x00,
 136                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 137                  0x18,0x1F,0x0F,0x00,
 138                  0x00,0x00,0x00,0x00,0x80,0xE0,0x38,0xFC,  // -4-
 139                  0xFC,0x00,0x00,0x00,0x80,0xE0,0x38,0x0E,
 140                  0x03,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,
 141                  0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x3F,
 142                  0x3F,0x21,0x21,0x01,
 143                  0x00,0xFC,0xFC,0x0C,0x0C,0x0C,0x0C,0x0C,  // -5-
 144                  0x0C,0x0C,0x00,0x00,0x00,0x1F,0x0F,0x08,
 145                  0x04,0x02,0x02,0x06,0x1C,0xF8,0xE0,0x00,
 146                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 147                  0x1C,0x0F,0x03,0x00};
 148          
 149          unsigned char code title[]={
 150          //Breakout
 151                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -B-
 152                  0xF0,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 153                  0x08,0x08,0x1C,0x16,0x73,0xE1,0x80,0x00,
 154                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x30,
 155                  0x1C,0x0F,0x03,0x00,
 156                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -R-
 157                  0xF8,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 158                  0x38,0xF8,0xCC,0x06,0x07,0x01,0x00,0x00,
 159                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x03,0x2F,
 160                  0x3C,0x30,0x20,0x00,
 161                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 162                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 163                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 164                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 165                  0x30,0x38,0x3E,0x00,
 166                  0x00,0x00,0x00,0x00,0xF0,0x0C,0x3C,0xF0,  // -A-
 167                  0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,
 168                  0x43,0x40,0x40,0x43,0xFF,0xF0,0x00,0x00,
 169                  0x20,0x3E,0x3F,0x20,0x00,0x00,0x00,0x00,
 170                  0x20,0x3F,0x3E,0x20,
 171                  0x04,0xFC,0xFC,0x04,0x00,0x80,0xE4,0x7C,  // -K-
 172                  0x1C,0x04,0x04,0x00,0x00,0xFF,0xFF,0x78,
 173                  0x1E,0x7F,0xE1,0x80,0x00,0x00,0x00,0x00,
 174                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x01,0x27,
 175                  0x3E,0x38,0x20,0x20,
 176                  0xE0,0xF0,0x18,0x0C,0x04,0x04,0x04,0x0C,  // -O-
 177                  0x18,0xF0,0xE0,0x00,0xFF,0xFF,0x00,0x00,
 178                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 4   

 179                  0x07,0x0F,0x18,0x30,0x20,0x20,0x20,0x30,
 180                  0x18,0x0F,0x07,0x00,
 181                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -U-
 182                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x00,
 183                  0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 184                  0x00,0x0F,0x1F,0x30,0x20,0x20,0x20,0x30,
 185                  0x1F,0x0F,0x00,0x00,
 186                  0x7C,0x1C,0x0C,0x04,0x04,0xFC,0xFC,0x04,  // -T-
 187                  0x04,0x0C,0x1C,0x7C,0x00,0x00,0x00,0x00,
 188                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 189                  0x00,0x00,0x00,0x20,0x20,0x3F,0x3F,0x20,
 190                  0x20,0x00,0x00,0x00,};
 191          unsigned char code clone[]={
 192                  0x00,0xFC,0x02,0x02,0x02,0x86,0x00,0x00,  // -C-
 193                  0x01,0x01,0x01,0x00,
 194                  0x00,0x02,0xFE,0x02,0x00,0xC0,0x00,0x01,  // -L-
 195                  0x01,0x01,0x01,0x01,
 196                  0x00,0xFC,0x02,0x02,0x02,0xFC,0x00,0x00,  // -O-
 197                  0x01,0x01,0x01,0x00,
 198                  0x02,0xFE,0x0E,0x70,0x82,0xFE,0x01,0x01,  // -N-
 199                  0x01,0x00,0x01,0x01,
 200                  0x02,0xFE,0x12,0x3A,0x02,0x86,0x01,0x01,  // -E-
 201                  0x01,0x01,0x01,0x01};
 202          unsigned char code press_start[]={
 203                  //press_start
 204                  0x00,0x02,0xFE,0x22,0x22,0x1C,0x00,0x01,  // -P-
 205                  0x01,0x01,0x00,0x00,
 206                  0x00,0x08,0xF8,0x10,0x08,0x08,0x00,0x01,  // -r-
 207                  0x01,0x01,0x01,0x01,
 208                  0x00,0xF0,0x28,0x28,0x28,0x30,0x00,0x00,  // -e-
 209                  0x01,0x01,0x01,0x01,
 210                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 211                  0x01,0x01,0x01,0x00,
 212                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 213                  0x01,0x01,0x01,0x00,
 214                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
 215                  0x00,0x00,0x00,0x00,
 216                  0x00,0x8C,0x92,0x12,0x14,0xE6,0x00,0x01,  // -S-
 217                  0x00,0x01,0x01,0x00,
 218                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 219                  0x01,0x01,0x01,0x00,
 220                  0x00,0xC0,0x7A,0x46,0x78,0xC0,0x01,0x01,  // -A-
 221                  0x01,0x00,0x01,0x01,
 222                  0x02,0xFE,0x22,0x22,0x62,0x9C,0x01,0x01,  // -R-
 223                  0x01,0x00,0x00,0x00,
 224                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 225                  0x01,0x01,0x01,0x00};
 226          
 227          unsigned char code prop[]={
 228          //make bar longer (L): 1
 229          0xFF,0x81,0x81,0xBF,0xBF,0xBF,0xBF,0xFF,
 230          //clear one area (C): 2
 231          0xFF,0xC3,0xBD,0xBD,0xBD,0xBD,0xDB,0xFF,
 232          //Win (W): 3
 233          0xFF,0xC1,0xBF,0xC3,0xC3,0xBF,0xC1,0xFF,
 234          //Die (D): 4
 235          0xFF,0x81,0x81,0xBD,0xBD,0xDB,0xE7,0xFF
 236          };
 237          
 238          unsigned char prop_exist=0;
 239          bit longer=0;
 240          unsigned char longer_time=0;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 5   

 241          unsigned char prop_x=0;
 242          unsigned char prop_y=0;
 243          
 244          unsigned char prop_frame=0;
 245          
 246          void random_prop(){
 247   1              unsigned char prop_num,x,y,i;
 248   1              bit x_change;
 249   1              if(longer){
 250   2                      if(longer_time<255){
 251   3                              longer_time++;
 252   3                      }else{
 253   3                              longer=0;
 254   3                              longer_time=0;
 255   3                              game_status=11;
 256   3                      }
 257   2              }
 258   1              if(prop_exist==0){
 259   2                      prop_num=255-TL0;
 260   2                      switch(prop_num){
 261   3                              case 1:
 262   3                                      prop_exist=1;
 263   3                                      y=TL0;
 264   3                                      x=255-y;
 265   3                                      y=(255-y)/5+33;
 266   3                                      prop_x=x;
 267   3                                      prop_y=y;
 268   3                                      y=y/8;
 269   3                                      for(i=0;i<8;i++){
 270   4                                              if(x+i<64){
 271   5                                                      choose_screen(1);
 272   5                                                      x_change=0;
 273   5                                              }else{
 274   5                                                      x-=64;
 275   5                                                      choose_screen(2);
 276   5                                                      x_change=1;
 277   5                                              }
 278   4                                              lcd_write_command(0x40|(x+i));
 279   4                                              lcd_write_command(0xb8|y);
 280   4                                              lcd_write_data(prop[i]);
 281   4                                              if(x_change){
 282   5                                                      x+=64;
 283   5                                              }
 284   4                                      }
 285   3                                      break;
 286   3                              case 50:
 287   3                                      prop_exist=2;
 288   3                                      y=TL0;
 289   3                                      x=255-y;
 290   3                                      y=(255-y)/5+33;
 291   3                                      prop_x=x;
 292   3                                      prop_y=y;
 293   3                                      y=y/8;
 294   3                                      for(i=0;i<8;i++){
 295   4                                              if(x+i<64){
 296   5                                                      choose_screen(1);
 297   5                                                      x_change=0;
 298   5                                              }else{
 299   5                                                      x-=64;
 300   5                                                      choose_screen(2);
 301   5                                                      x_change=1;
 302   5                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 6   

 303   4                                              lcd_write_command(0x40|(x+i));
 304   4                                              lcd_write_command(0xb8|y);
 305   4                                              lcd_write_data(prop[i+8]);
 306   4                                              if(x_change){
 307   5                                                      x+=64;
 308   5                                              }
 309   4                                      }
 310   3                                      break;
 311   3                              case 100:
 312   3                                      prop_exist=3;
 313   3                                      y=TL0;
 314   3                                      x=255-y;
 315   3                                      y=(255-y)/5+33;
 316   3                                      prop_x=x;
 317   3                                      prop_y=y;
 318   3                                      y=y/8;
 319   3                                      for(i=0;i<8;i++){
 320   4                                              if(x+i<64){
 321   5                                                      choose_screen(1);
 322   5                                                      x_change=0;
 323   5                                              }else{
 324   5                                                      x-=64;
 325   5                                                      choose_screen(2);
 326   5                                                      x_change=1;
 327   5                                              }
 328   4                                              lcd_write_command(0x40|(x+i));
 329   4                                              lcd_write_command(0xb8|y);
 330   4                                              lcd_write_data(prop[i+16]);
 331   4                                              if(x_change){
 332   5                                                      x+=64;
 333   5                                              }
 334   4                                      }
 335   3                                      break;
 336   3                              case 20:
 337   3                                      prop_exist=4;
 338   3                                      y=TL0;
 339   3                                      x=255-y;
 340   3                                      y=(255-y)/5+33;
 341   3                                      prop_x=x;
 342   3                                      prop_y=y;
 343   3                                      y=y/8;
 344   3                                      for(i=0;i<8;i++){
 345   4                                              if(x+i<64){
 346   5                                                      choose_screen(1);
 347   5                                                      x_change=0;
 348   5                                              }else{
 349   5                                                      x-=64;
 350   5                                                      choose_screen(2);
 351   5                                                      x_change=1;
 352   5                                              }
 353   4                                              lcd_write_command(0x40|(x+i));
 354   4                                              lcd_write_command(0xb8|y);
 355   4                                              lcd_write_data(prop[i+24]);
 356   4                                              if(x_change){
 357   5                                                      x+=64;
 358   5                                              }
 359   4                                      }
 360   3                                      break;
 361   3                              default:break;
 362   3                      }
 363   2              }else{
 364   2                      if(prop_frame>100){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 7   

 365   3                              x=prop_x;
 366   3                              y=prop_y;
 367   3                              y=y/8;
 368   3                              for(i=0;i<8;i++){
 369   4                                              if(x+i<64){
 370   5                                                      choose_screen(1);
 371   5                                                      x_change=0;
 372   5                                              }else{
 373   5                                                      x-=64;
 374   5                                                      choose_screen(2);
 375   5                                                      x_change=1;
 376   5                                              }
 377   4                                              lcd_write_command(0x40|(x+i));
 378   4                                              lcd_write_command(0xb8|y);
 379   4                                              lcd_write_data(0x00);
 380   4                                              if(x_change){
 381   5                                                      x+=64;
 382   5                                              }
 383   4                              }
 384   3                              prop_frame=0;
 385   3                              prop_exist=0;
 386   3                      }else{
 387   3                              prop_frame++;
 388   3                      }
 389   2              }
 390   1      }
 391          
 392          void clear_low_screen(){
 393   1              unsigned char x,y;
 394   1              choose_screen(0);
 395   1              for(x=4;x<8;x++){
 396   2                      for(y=0;y<64;y++){
 397   3                              lcd_write_command(0xb8|x);
 398   3                              lcd_write_command(0x40|y);
 399   3                              lcd_write_data(0x00);
 400   3                      }
 401   2              }
 402   1      }
 403          void show_life(unsigned char life){
 404   1              unsigned char x,y,i;
 405   1              bit flag;
 406   1              clear_low_screen();
 407   1                      for(i=0;i<6;i++){
 408   2                              for(y=0;y<12;y++){
 409   3                                      for(x=0;x<3;x++){
 410   4                                              flag=0;
 411   4                                              y+=20+15*i;
 412   4                                              x+=4;
 413   4                                              if(y<64){
 414   5                                                      choose_screen(1);
 415   5                                              }else{
 416   5                                                      choose_screen(2);
 417   5                                                      y-=64;
 418   5                                                      flag=1;
 419   5                                              }
 420   4                                              lcd_write_command(0xb8|x);
 421   4                                              lcd_write_command(0x40|y);
 422   4                                              if(flag){
 423   5                                                      y+=64;
 424   5                                              }
 425   4                                              y-=20+15*i;
 426   4                                              x-=4;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 8   

 427   4                                              if(i<5){
 428   5                                                      lcd_write_data(lifefont[y+x*12+i*36]);
 429   5                                              }else{
 430   5                                                      lcd_write_data(number[y+12*x+life*36]);
 431   5                                              }
 432   4                                      }       
 433   3                              }
 434   2                      }       
 435   1      }
 436          void show_level(unsigned char level){
 437   1              unsigned char x,y,i;
 438   1              bit flag;
 439   1              clear_low_screen();
 440   1                      for(i=0;i<7;i++){
 441   2                              for(y=0;y<12;y++){
 442   3                                      for(x=0;x<3;x++){
 443   4                                              flag=0;
 444   4                                              y+=20+15*i;
 445   4                                              x+=4;
 446   4                                              if(y<64){
 447   5                                                      choose_screen(1);
 448   5                                              }else{
 449   5                                                      choose_screen(2);
 450   5                                                      y-=64;
 451   5                                                      flag=1;
 452   5                                              }
 453   4                                              lcd_write_command(0xb8|x);
 454   4                                              lcd_write_command(0x40|y);
 455   4                                              if(flag){
 456   5                                                      y+=64;
 457   5                                              }
 458   4                                              y-=20+15*i;
 459   4                                              x-=4;
 460   4                                              if(i<6){
 461   5                                                      lcd_write_data(levelfont[y+x*12+i*36]);
 462   5                                              }else{
 463   5                                                      lcd_write_data(number[y+12*x+level*36]);
 464   5                                              }
 465   4                                      }       
 466   3                              }
 467   2                      }       
 468   1      }
 469          
 470          
 471          //variables of block
 472          //block1 for level 1
 473          /*   for test of win 
 474          unsigned char code block1[]={
 475          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 476          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 477          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 480          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 481          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 482          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 484          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 485          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 488          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 9   

 489          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 490          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 491          };
 492          */
 493          ///*
 494          unsigned char code block1[]={
 495          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 496          0xFF,0xF7,0xEF,0xEF,0xDF,0xDF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 497          0xFF,0xFF,0xFF,0x7F,0x9F,0xE7,0xFB,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 498          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 499          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFD,0xFD,
 500          0x0D,0xED,0xED,0xED,0xED,0xED,0x6D,0x6D,0x2C,0x2D,0xED,0xED,0xED,0xED,0xED,0xED,
 501          0xED,0xED,0x2D,0x2C,0x6D,0x6D,0x6D,0xED,0xED,0xED,0xED,0xED,0x0D,0xFD,0xFD,0x01,
 502          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 503          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,
 504          0x80,0xBF,0xBF,0xBF,0xBC,0xBC,0xBE,0xBE,0xB3,0xAD,0xAF,0xB7,0xBB,0xB9,0xB7,0xAF,
 505          0xAF,0xB5,0xBB,0xBF,0xBE,0xBE,0xBE,0xBF,0xBF,0xBF,0xBF,0xBF,0x80,0xFF,0xFF,0x00,
 506          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 507          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFD,0xFD,
 508          0xFD,0xFD,0xCD,0xC1,0xF1,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
 509          0xFD,0xFD,0xFD,0xFD,0xF1,0xC1,0xCD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFC,
 510          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 511          };
 512          //*/
 513          //block2 for level 2
 514          /*   for test of win 
 515          unsigned char code block2[]={
 516          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 517          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 518          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 519          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 520          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 521          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 522          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 523          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 524          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 525          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 526          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 527          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 528          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 529          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 530          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 531          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 532          };
 533          */
 534          ///*
 535          unsigned char code block2[]={
 536          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 537          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,
 538          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 539          0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 540          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 541          0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,0x07,0x01,0x06,0x03,0x01,0x01,0x01,0x01,
 542          0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,
 543          0x07,0x01,0x06,0x03,0x01,0x01,0x71,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 544          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 545          0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,
 546          0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,
 547          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 548          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 549          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 550          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 10  

 551          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 552          };
 553          //*/
 554          //block3 for level 3
 555          /*   for test of win 
 556          unsigned char code block3[]={
 557          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 558          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 559          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 560          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 561          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 562          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 563          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 564          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 565          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 566          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 567          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 568          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 569          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 570          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 571          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 572          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 573          };
 574          */
 575          ///*
 576          unsigned char code block3[]={
 577          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 578          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 579          0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 580          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 581          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x1F,
 582          0x4F,0xE7,0xF3,0xFB,0xF9,0xFD,0xFD,0xFC,0xFE,0xBE,0x1E,0x0F,0x07,0x03,0x01,0x01,
 583          0x40,0xE0,0xF0,0xE0,0x41,0x01,0x03,0x07,0x0E,0x1E,0xBE,0xFC,0xFD,0xFD,0xF9,0xFB,
 584          0xF3,0xE7,0x4F,0x1F,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 585          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 586          0xFE,0xFC,0xF9,0xFB,0xF3,0xF7,0xF7,0xE7,0xEF,0xEF,0xCF,0xDE,0xDC,0xD8,0xD0,0xD0,
 587          0xC0,0xC0,0xC1,0xC0,0xD0,0xD0,0xD8,0xDC,0xCE,0xEF,0xEF,0xE7,0xF7,0xF7,0xF3,0xFB,
 588          0xF9,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 589          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 590          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 591          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 592          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 593          };
 594          //*/
 595          
 596          
 597          //functions of block
 598          //draw block at the begining
 599          void draw_block(){
 600   1              unsigned char x,y;
 601   1              choose_screen(0);
 602   1              for(x=0;x<4;x++){
 603   2                      for(y=0;y<64;y++){
 604   3                              lcd_write_command(0xb8|x);
 605   3                              lcd_write_command(0x40|y);
 606   3                              switch(level){
 607   4                                      case 1: lcd_write_data(block1[x*64+y]);break;
 608   4                                      case 2: lcd_write_data(block2[x*64+y]);break;
 609   4                                      case 3: lcd_write_data(block3[x*64+y]);break;
 610   4                                      default: lcd_write_data(block1[x*64+y]);break;
 611   4                              }
 612   3                      }       
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 11  

 613   2              }
 614   1      }
 615          //check block
 616          void check_block(){
 617   1              unsigned char i,x,y,rdata;
 618   1              unsigned char now_game_status=game_status;
 619   1              game_status=2;
 620   1              for(i=1;i<3;i++){
 621   2                      choose_screen(i);
 622   2                      for(x=0;x<4;x++){
 623   3                              for(y=0;y<64;y++){
 624   4                                      lcd_write_command(0xb8|x);
 625   4                                      lcd_write_command(0x40|y);
 626   4                                      rdata=lcd_read_data();
 627   4                                      if(rdata!=0x00){
 628   5                                              game_status=now_game_status;
 629   5                                              break;
 630   5                                      }
 631   4                              }
 632   3                              if(game_status==now_game_status){
 633   4                                      break;
 634   4                              }
 635   3                      }
 636   2                      if(game_status==now_game_status){
 637   3                              break;
 638   3                      }
 639   2              }
 640   1      }
 641          
 642          //variables of bar
 643          //location of the most left point of bar
 644          unsigned char code o_bar_sit[]={0,63};
 645          unsigned char bar_sit[2];//(x,y)
 646          unsigned char temp_bar_sit_x;
 647          //bar speed
 648          unsigned char o_bar_speed;
 649          unsigned char bar_speed;
 650          //bar length
 651          unsigned char o_bar_len;
 652          unsigned char bar_len;
 653          //bar direction
 654          bit o_bar_direction=1;
 655          bit bar_direction;//0:left, 1:right
 656          
 657          //functions for bar
 658          //init bar
 659          void init_bar(){
 660   1              unsigned char i;
 661   1              switch(level){
 662   2                      case 1: o_bar_speed=1;o_bar_len=24;break;
 663   2                      case 2: o_bar_speed=2;o_bar_len=20;break;
 664   2                      case 3: o_bar_speed=3;o_bar_len=12;break;
 665   2                      default:o_bar_speed=1;o_bar_len=24;break;
 666   2              }
 667   1              bar_sit[0]=o_bar_sit[0];
 668   1              bar_sit[1]=o_bar_sit[1];
 669   1              bar_speed=o_bar_speed;
 670   1              bar_len=o_bar_len;
 671   1              bar_direction=o_bar_direction;
 672   1              for(i=0;i<bar_len;i++){
 673   2                      set_dot(bar_sit[0]+i,bar_sit[1]);
 674   2              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 12  

 675   1      }
 676          //draw bar
 677          void draw_bar(){
 678   1              unsigned char i;
 679   1              if(bar_direction){
 680   2                      //go right
 681   2                      if(bar_sit[0]<=128-bar_len-bar_speed && bar_len+bar_speed<=128){
 682   3                              for(i=1;i<bar_speed+1;i++){
 683   4                                      //clear preivous bar
 684   4                                      clear_dot(bar_sit[0]+i-1,bar_sit[1]);
 685   4                                      //draw new bar
 686   4                                      set_dot(bar_sit[0]+bar_len-1+i,bar_sit[1]);
 687   4                              }
 688   3                              //recalculate bar location
 689   3                              bar_sit[0]+=bar_speed;
 690   3                      }
 691   2              }else{
 692   2                      //go left
 693   2                      if(bar_sit[0]>=0+bar_speed){
 694   3                              for(i=1;i<bar_speed+1;i++){
 695   4                                      //clear preivous bar
 696   4                                      clear_dot(bar_sit[0]+bar_len-i,bar_sit[1]);
 697   4                                      //draw new bar
 698   4                                      set_dot(bar_sit[0]-i,bar_sit[1]);
 699   4                              }
 700   3                              //recalculate bar location
 701   3                              bar_sit[0]-=bar_speed;
 702   3                      }
 703   2              }
 704   1      }
 705          
 706          //variables of ball
 707          //location of ball
 708          unsigned char code o_ball_sit[]={7,62};//(x,y)
 709          unsigned char ball_sit[2];//(x,y)
 710          //ball speed
 711          unsigned char code o_ball_speed[]={0,1};
 712          unsigned char ball_speed[2];//(x,y)
 713          //ball direction
 714          bit o_ball_direction_x=0;
 715          bit ball_direction_x;//x: 0->left, 1->right.
 716          bit o_ball_direction_y=0;  
 717          bit ball_direction_y;//y: 0->down, 1->up.
 718          
 719          //functions for ball
 720          //init ball
 721          void init_ball(){
 722   1              ball_sit[0]=o_ball_sit[0];
 723   1              ball_sit[1]=o_ball_sit[1];
 724   1              ball_speed[0]=o_ball_speed[0];
 725   1              ball_speed[1]=o_ball_speed[1];
 726   1              ball_direction_x=o_ball_direction_x;
 727   1              ball_direction_y=o_ball_direction_y;
 728   1              set_dot(ball_sit[0],ball_sit[1]);
 729   1              set_dot(ball_sit[0],ball_sit[1]-1);
 730   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 731   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);   
 732   1      }
 733          //clear preview ball
 734          void clear_ball(){
 735   1              clear_dot(ball_sit[0],ball_sit[1]);
 736   1              clear_dot(ball_sit[0]+1,ball_sit[1]);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 13  

 737   1              clear_dot(ball_sit[0],ball_sit[1]-1);
 738   1              clear_dot(ball_sit[0]+1,ball_sit[1]-1);
 739   1      }
 740          //calculate now ball
 741          void move_ball(){
 742   1              bit next_dot_y,next_dot_x;
 743   1              unsigned char i;
 744   1              bit x_change;
 745   1              //check whether the direction should be changed
 746   1              LS1=change;
 747   1              if(ball_direction_y){
 748   2                      if(read_dot(ball_sit[0],ball_sit[1]-2) || read_dot(ball_sit[0]+1,ball_sit[1]-2) || (ball_sit[1]-1)==0){
 749   3                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 750   4                                      prop_y=prop_y/8;
 751   4                                      for(i=0;i<8;i++){
 752   5                                                      if(prop_x+i<64){
 753   6                                                              choose_screen(1);
 754   6                                                              x_change=0;
 755   6                                                      }else{
 756   6                                                              prop_x-=64;
 757   6                                                              choose_screen(2);
 758   6                                                              x_change=1;
 759   6                                                      }
 760   5                                                      lcd_write_command(0x40|(prop_x+i));
 761   5                                                      lcd_write_command(0xb8|prop_y);
 762   5                                                      lcd_write_data(0x00);
 763   5                                                      if(x_change){
 764   6                                                              prop_x+=64;
 765   6                                                      }
 766   5                                      }
 767   4                                      prop_y=prop_y*8;
 768   4                                      prop_frame=0;
 769   4                                      switch(prop_exist){
 770   5                                              case 1:longer=1;game_status=7;break;
 771   5                                              case 2:game_status=8;break;
 772   5                                              case 3:game_status=9;break;
 773   5                                              case 4:game_status=10;break;
 774   5                                              default:break;
 775   5                                      }
 776   4                                      prop_exist=0;
 777   4                              }else{
 778   4                                      LS1=do_1;
 779   4                                      if((ball_sit[1]-1)!=0){
 780   5                                              clear_dot(ball_sit[0],ball_sit[1]-2);
 781   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]-2);
 782   5                                              //
 783   5                                              clear_dot(ball_sit[0]-1,ball_sit[1]-2);
 784   5                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
 785   5                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
 786   5                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
 787   5                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
 788   5                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
 789   5                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
 790   5                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
 791   5                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
 792   5                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
 793   5                                              //
 794   5                                              if((ball_sit[1]-2)!=0){
 795   6                                                      clear_dot(ball_sit[0],ball_sit[1]-3);
 796   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-3);
 797   6                                                      //
 798   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-3);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 14  

 799   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
 800   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
 801   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
 802   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
 803   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
 804   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
 805   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
 806   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
 807   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
 808   6                                                      
 809   6                                                              if((ball_sit[1]-3)!=0){
 810   7                                                                      clear_dot(ball_sit[0],ball_sit[1]-4);
 811   7                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-4);
 812   7                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-4);
 813   7                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-4);
 814   7                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-4);
 815   7                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-4);
 816   7                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-4);
 817   7                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-4);
 818   7                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-4);
 819   7                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-4);
 820   7                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-4);
 821   7                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-4);
 822   7                                                              
 823   7                                                                      if((ball_sit[1]-4)!=0){
 824   8                                                                              clear_dot(ball_sit[0],ball_sit[1]-5);
 825   8                                                                              clear_dot(ball_sit[0]+1,ball_sit[1]-5);
 826   8                                                                              clear_dot(ball_sit[0]-1,ball_sit[1]-5);
 827   8                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-5);
 828   8                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-5);
 829   8                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-5);
 830   8                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-5);
 831   8                                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-5);
 832   8                                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-5);
 833   8                                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-5);
 834   8                                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-5);
 835   8                                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-5);
 836   8                                                      
 837   8                                                                              if((ball_sit[1]-5)!=0){
 838   9                                                                                      clear_dot(ball_sit[0],ball_sit[1]-6);
 839   9                                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-6);
 840   9                                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-6);
 841   9                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-6);
 842   9                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-6);
 843   9                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-6);
 844   9                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-6);
 845   9                                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-6);
 846   9                                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-6);
 847   9                                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-6);
 848   9                                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-6);
 849   9                                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-6);
 850   9                                                                              }
 851   8                                                                      }
 852   7                                                              }
 853   6                                              //
 854   6                                              }
 855   5                                      }
 856   4                                      ball_direction_y=~ball_direction_y;
 857   4                              }       
 858   3                      }
 859   2              }else{
 860   2                      if(read_dot(ball_sit[0],ball_sit[1]+1) || read_dot(ball_sit[0]+1,ball_sit[1]+1)){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 15  

 861   3                              if(ball_sit[1]!=63){
 862   4                                      if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 863   5                                              prop_y=prop_y/8;
 864   5                                              for(i=0;i<8;i++){
 865   6                                                              if(prop_x+i<64){
 866   7                                                                      choose_screen(1);
 867   7                                                                      x_change=0;
 868   7                                                              }else{
 869   7                                                                      prop_x-=64;
 870   7                                                                      choose_screen(2);
 871   7                                                                      x_change=1;
 872   7                                                              }
 873   6                                                              lcd_write_command(0x40|(prop_x+i));
 874   6                                                              lcd_write_command(0xb8|prop_y);
 875   6                                                              lcd_write_data(0x00);
 876   6                                                              if(x_change){
 877   7                                                                      prop_x+=64;
 878   7                                                              }
 879   6                                              }
 880   5                                              prop_y=prop_y*8;
 881   5                                              prop_frame=0;
 882   5                                              switch(prop_exist){
 883   6                                                      case 1:longer=1;game_status=7;break;
 884   6                                                      case 2:game_status=8;break;
 885   6                                                      case 3:game_status=9;break;
 886   6                                                      case 4:game_status=10;break;
 887   6                                                      default:break;
 888   6                                              }
 889   5                                              prop_exist=0;
 890   5                                      }else{
 891   5                                              LS1=do_1;
 892   5                                              if(ball_sit[1]+1!=bar_sit[1]){
 893   6                                                      clear_dot(ball_sit[0],ball_sit[1]+1);
 894   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+1);
 895   6                                                      //
 896   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+1);
 897   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+1);
 898   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+1);
 899   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+1);
 900   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+1);
 901   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+1);
 902   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+1);
 903   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+1);
 904   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+1);
 905   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+1);
 906   6                                                      //
 907   6                                                      clear_dot(ball_sit[0],ball_sit[1]+2);
 908   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+2);
 909   6                                                      //
 910   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+2);
 911   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+2);
 912   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+2);
 913   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+2);
 914   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+2);
 915   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+2);
 916   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+2);
 917   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+2);
 918   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+2);
 919   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+2);
 920   6                                                      //
 921   6                                                      clear_dot(ball_sit[0],ball_sit[1]+3);
 922   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+3);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 16  

 923   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+3);
 924   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+3);
 925   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+3);
 926   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+3);
 927   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+3);
 928   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+3);
 929   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+3);
 930   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+3);
 931   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+3);
 932   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+3);
 933   6                                                      clear_dot(ball_sit[0],ball_sit[1]+4);
 934   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+4);
 935   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+4);
 936   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+4);
 937   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+4);
 938   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+4);
 939   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+4);
 940   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+4);
 941   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+4);
 942   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+4);
 943   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+4);
 944   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+4);
 945   6                                                      clear_dot(ball_sit[0],ball_sit[1]+5);
 946   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+5);
 947   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+5);
 948   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+5);
 949   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+5);
 950   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+5);
 951   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+5);
 952   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+5);
 953   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+5);
 954   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+5);
 955   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+5);
 956   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+5);
 957   6                                                      //
 958   6                                              }else{
 959   6                                                      LS1=do_2;
 960   6                                                      ball_speed[0]=bar_speed;
 961   6                                                      ball_direction_x=bar_direction;
 962   6                                              }
 963   5                                              ball_direction_y=~ball_direction_y;
 964   5                                      }
 965   4                              }else{
 966   4                                      game_status=0;
 967   4                              }
 968   3                      }
 969   2              }
 970   1              if(game_status==1){
 971   2              if(ball_direction_x){
 972   3                      if(read_dot(ball_sit[0]+2,ball_sit[1]) || read_dot(ball_sit[0]+2,ball_sit[1]-1) || (ball_sit[0]+1)==127)
             -{
 973   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 974   5                                      prop_y=prop_y/8;
 975   5                                      for(i=0;i<8;i++){
 976   6                                                      if(prop_x+i<64){
 977   7                                                              choose_screen(1);
 978   7                                                              x_change=0;
 979   7                                                      }else{
 980   7                                                              prop_x-=64;
 981   7                                                              choose_screen(2);
 982   7                                                              x_change=1;
 983   7                                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 17  

 984   6                                                      lcd_write_command(0x40|(prop_x+i));
 985   6                                                      lcd_write_command(0xb8|prop_y);
 986   6                                                      lcd_write_data(0x00);
 987   6                                                      if(x_change){
 988   7                                                              prop_x+=64;
 989   7                                                      }
 990   6                                      }
 991   5                                      prop_y=prop_y*8;
 992   5                                      prop_frame=0;
 993   5                                      switch(prop_exist){
 994   6                                              case 1:longer=1;game_status=7;break;
 995   6                                              case 2:game_status=8;break;
 996   6                                              case 3:game_status=9;break;
 997   6                                              case 4:game_status=10;break;
 998   6                                              default:break;
 999   6                                      }
1000   5                                      prop_exist=0;
1001   5                              }else{
1002   5                                      LS1=do_1;
1003   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]);
1004   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]-1);
1005   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]);
1006   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]-1);
1007   5                                      //
1008   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]);
1009   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]-1);
1010   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]);
1011   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]-1);
1012   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]);
1013   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]-1);
1014   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]);
1015   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]-1);
1016   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]);
1017   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]-1);
1018   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]);
1019   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]-1);
1020   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]);
1021   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]-1);
1022   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]);
1023   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]-1);
1024   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]);
1025   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]-1);
1026   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]);
1027   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]-1);
1028   5                                      if(ball_sit[1]-1!=0){
1029   6                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
1030   6                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
1031   6                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
1032   6                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
1033   6                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
1034   6                                              clear_dot(ball_sit[0]+7,ball_sit[1]-2);
1035   6                                              clear_dot(ball_sit[0]+8,ball_sit[1]-2);
1036   6                                              clear_dot(ball_sit[0]+9,ball_sit[1]-2);
1037   6                                              clear_dot(ball_sit[0]+10,ball_sit[1]-2);
1038   6                                              clear_dot(ball_sit[0]+11,ball_sit[1]-2);
1039   6                                              clear_dot(ball_sit[0]+12,ball_sit[1]-2);
1040   6                                              clear_dot(ball_sit[0]+13,ball_sit[1]-2);
1041   6                                              if(ball_sit[1]-2!=0){
1042   7                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
1043   7                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
1044   7                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
1045   7                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 18  

1046   7                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
1047   7                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-3);
1048   7                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-3);
1049   7                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-3);
1050   7                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-3);
1051   7                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-3);
1052   7                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-3);
1053   7                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-3);
1054   7                                                      if(ball_sit[1]-3!=0){
1055   8                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-4);
1056   8                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-4);
1057   8                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-4);
1058   8                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-4);
1059   8                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-4);
1060   8                                                              clear_dot(ball_sit[0]+7,ball_sit[1]-4);
1061   8                                                              clear_dot(ball_sit[0]+8,ball_sit[1]-4);
1062   8                                                              clear_dot(ball_sit[0]+9,ball_sit[1]-4);
1063   8                                                              clear_dot(ball_sit[0]+10,ball_sit[1]-4);
1064   8                                                              clear_dot(ball_sit[0]+11,ball_sit[1]-4);
1065   8                                                              clear_dot(ball_sit[0]+12,ball_sit[1]-4);
1066   8                                                              clear_dot(ball_sit[0]+13,ball_sit[1]-4);
1067   8                                                              if(ball_sit[1]-4!=0){
1068   9                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-5);
1069   9                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-5);
1070   9                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-5);
1071   9                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-5);
1072   9                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-5);
1073   9                                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-5);
1074   9                                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-5);
1075   9                                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-5);
1076   9                                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-5);
1077   9                                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-5);
1078   9                                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-5);
1079   9                                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-5);
1080   9      
1081   9                                                              }
1082   8                                                      }
1083   7                                              }
1084   6                                      }
1085   5                                      //
1086   5                                      ball_direction_x=~ball_direction_x;
1087   5                              }
1088   4                      }
1089   3              }else{
1090   3                      if(read_dot(ball_sit[0]-1,ball_sit[1]) || read_dot(ball_sit[0]-1,ball_sit[1]-1) || ball_sit[0]==0){
1091   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
1092   5                                      prop_y=prop_y/8;
1093   5                                      for(i=0;i<8;i++){
1094   6                                                      if(prop_x+i<64){
1095   7                                                              choose_screen(1);
1096   7                                                              x_change=0;
1097   7                                                      }else{
1098   7                                                              prop_x-=64;
1099   7                                                              choose_screen(2);
1100   7                                                              x_change=1;
1101   7                                                      }
1102   6                                                      lcd_write_command(0x40|(prop_x+i));
1103   6                                                      lcd_write_command(0xb8|prop_y);
1104   6                                                      lcd_write_data(0x00);
1105   6                                                      if(x_change){
1106   7                                                              prop_x+=64;
1107   7                                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 19  

1108   6                                      }
1109   5                                      prop_y=prop_y*8;
1110   5                                      prop_frame=0;
1111   5                                      switch(prop_exist){
1112   6                                              case 1:longer=1;game_status=7;break;
1113   6                                              case 2:game_status=8;break;
1114   6                                              case 3:game_status=9;break;
1115   6                                              case 4:game_status=10;break;
1116   6                                              default:break;
1117   6                                      }
1118   5                                      prop_exist=0;
1119   5                              }else{
1120   5                                      LS1=do_1;
1121   5                                      if(ball_sit[0]!=0){
1122   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]);
1123   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]-1);
1124   6                                              //
1125   6                                              if((ball_sit[0]-1)!=0){
1126   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]);
1127   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-1);
1128   7                                                      if(ball_sit[1]-1!=0){
1129   8                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
1130   8                                                              if(ball_sit[1]-2!=0){
1131   9                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
1132   9                                                                      if(ball_sit[1]-3!=0){
1133  10                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-4);
1134  10                                                                              if(ball_sit[1]-4!=0){
1135  11                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-5);
1136  11      
1137  11                                                                              }
1138  10                                                                      }
1139   9                                                              }
1140   8                                                      }
1141   7                                              if((ball_sit[0]-2)!=0){
1142   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]);
1143   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-1);
1144   8                                                              if(ball_sit[1]-1!=0){
1145   9                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
1146   9                                                              if(ball_sit[1]-2!=0){
1147  10                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
1148  10                                                                      if(ball_sit[1]-3!=0){
1149  11                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-4);
1150  11                                                                              if(ball_sit[1]-4!=0){
1151  12                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-5);
1152  12      
1153  12                                                                              }
1154  11                                                                      }
1155  10                                                              }
1156   9                                                      }
1157   8                                              if((ball_sit[0]-3)!=0){
1158   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]);
1159   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-1);
1160   9                                                              if(ball_sit[1]-1!=0){
1161  10                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
1162  10                                                              if(ball_sit[1]-2!=0){
1163  11                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
1164  11                                                                      if(ball_sit[1]-3!=0){
1165  12                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-4);
1166  12                                                                              if(ball_sit[1]-4!=0){
1167  13                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-5);
1168  13      
1169  13                                                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 20  

1170  12                                                                      }
1171  11                                                              }
1172  10                                                      }
1173   9                                              if((ball_sit[0]-4)!=0){
1174  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]);
1175  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-1);
1176  10                                                              if(ball_sit[1]-1!=0){
1177  11                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
1178  11                                                              if(ball_sit[1]-2!=0){
1179  12                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
1180  12                                                                      if(ball_sit[1]-3!=0){
1181  13                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-4);
1182  13                                                                              if(ball_sit[1]-4!=0){
1183  14                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-5);
1184  14      
1185  14                                                                              }
1186  13                                                                      }
1187  12                                                              }
1188  11                                                      }
1189  10                                              if((ball_sit[0]-5)!=0){
1190  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]);
1191  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-1);
1192  11                                                              if(ball_sit[1]-1!=0){
1193  12                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-2);
1194  12                                                              if(ball_sit[1]-2!=0){
1195  13                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-3);
1196  13                                                                      if(ball_sit[1]-3!=0){
1197  14                                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-4);
1198  14                                                                              if(ball_sit[1]-4!=0){
1199  15                                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-5);
1200  15      
1201  15                                                                              }
1202  14                                                                      }
1203  13                                                              }
1204  12                                                      }
1205  11                                              if((ball_sit[0]-6)!=0){
1206  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]);
1207  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-1);
1208  12                                                              if(ball_sit[1]-1!=0){
1209  13                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-2);
1210  13                                                              if(ball_sit[1]-2!=0){
1211  14                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-3);
1212  14                                                                      if(ball_sit[1]-3!=0){
1213  15                                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-4);
1214  15                                                                              if(ball_sit[1]-4!=0){
1215  16                                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-5);
1216  16      
1217  16                                                                              }
1218  15                                                                      }
1219  14                                                              }
1220  13                                                      }
1221  12                                              if((ball_sit[0]-7)!=0){
1222  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]);
1223  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-1);
1224  13                                                              if(ball_sit[1]-1!=0){
1225  14                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-2);
1226  14                                                              if(ball_sit[1]-2!=0){
1227  15                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-3);
1228  15                                                                      if(ball_sit[1]-3!=0){
1229  16                                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-4);
1230  16                                                                              if(ball_sit[1]-4!=0){
1231  17                                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-5);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 21  

1232  17      
1233  17                                                                              }
1234  16                                                                      }
1235  15                                                              }
1236  14                                                      }
1237  13                                              if((ball_sit[0]-8)!=0){
1238  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]);
1239  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-1);
1240  14                                                              if(ball_sit[1]-1!=0){
1241  15                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-2);
1242  15                                                              if(ball_sit[1]-2!=0){
1243  16                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-3);
1244  16                                                                      if(ball_sit[1]-3!=0){
1245  17                                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-4);
1246  17                                                                              if(ball_sit[1]-4!=0){
1247  18                                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-5);
1248  18      
1249  18                                                                              }
1250  17                                                                      }
1251  16                                                              }
1252  15                                                      }
1253  14                                              if((ball_sit[0]-9)!=0){
1254  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]);
1255  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-1);
1256  15                                                              if(ball_sit[1]-1!=0){
1257  16                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-2);
1258  16                                                              if(ball_sit[1]-2!=0){
1259  17                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-3);
1260  17                                                                      if(ball_sit[1]-3!=0){
1261  18                                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-4);
1262  18                                                                              if(ball_sit[1]-4!=0){
1263  19                                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-5);
1264  19      
1265  19                                                                              }
1266  18                                                                      }
1267  17                                                              }
1268  16                                                      }
1269  15                                              if((ball_sit[0]-10)!=0){
1270  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]);
1271  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-1);
1272  16                                                              if(ball_sit[1]-1!=0){
1273  17                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-2);
1274  17                                                              if(ball_sit[1]-2!=0){
1275  18                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-3);
1276  18                                                                      if(ball_sit[1]-3!=0){
1277  19                                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-4);
1278  19                                                                              if(ball_sit[1]-4!=0){
1279  20                                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-5);
1280  20      
1281  20                                                                              }
1282  19                                                                      }
1283  18                                                              }
1284  17                                                      }
1285  16                                              if((ball_sit[0]-11)!=0){
1286  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]);
1287  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-1);
1288  17                                                              if(ball_sit[1]-1!=0){
1289  18                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-2);
1290  18                                                              if(ball_sit[1]-2!=0){
1291  19                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-3);
1292  19                                                                      if(ball_sit[1]-3!=0){
1293  20                                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-4);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 22  

1294  20                                                                              if(ball_sit[1]-4!=0){
1295  21                                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-5);
1296  21      
1297  21                                                                              }
1298  20                                                                      }
1299  19                                                              }
1300  18                                                      }
1301  17                                              }
1302  16                                              }
1303  15                                              }
1304  14                                              }
1305  13                                              }
1306  12                                              }
1307  11                                              }
1308  10                                              }
1309   9                                              }
1310   8                                              }
1311   7                                              }
1312   6                                              //
1313   6                                      }
1314   5                                      ball_direction_x=~ball_direction_x;
1315   5                              }
1316   4                      }
1317   3              }
1318   2              //according to y direction to check next y dot status
1319   2              next_dot_y=0;
1320   2              if(ball_direction_y){
1321   3                      //go up
1322   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1323   4                              if(ball_sit[1]-1-i==0){
1324   5                                      next_dot_y=1;
1325   5                                      ball_sit[1]-=i;
1326   5                                      break;
1327   5                              }else if(read_dot(ball_sit[0],ball_sit[1]-1-i) || read_dot(ball_sit[0]+1,ball_sit[1]-1-i)){//if there i
             -s a dot
1328   5                                      next_dot_y=1;
1329   5                                      ball_sit[1]-=(i-1);
1330   5                                      break;
1331   5                              }
1332   4                      }
1333   3                      if(~next_dot_y){
1334   4                              ball_sit[1]-=ball_speed[1];
1335   4                      }
1336   3              }else{
1337   3                      //go down
1338   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1339   4                              if(read_dot(ball_sit[0],ball_sit[1]+i) || read_dot(ball_sit[0]+1,ball_sit[1]+i)){//if there is a dot
1340   5                                      next_dot_y=1;
1341   5                                      ball_sit[1]+=(i-1);
1342   5                                      break;
1343   5                              }
1344   4                      }
1345   3                      if(~next_dot_y){
1346   4                              ball_sit[1]+=ball_speed[1];
1347   4                      }
1348   3              }
1349   2              //according to x direction to check next x dot status
1350   2              next_dot_x=0;
1351   2              if(ball_direction_x){
1352   3                      //go right
1353   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1354   4                              if(ball_sit[0]+1+i==127){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 23  

1355   5                                      next_dot_x=1;
1356   5                                      ball_sit[0]+=i;
1357   5                                      break;
1358   5                              }else if(read_dot(ball_sit[0]+1+i,ball_sit[1]) || read_dot(ball_sit[0]+1+i,ball_sit[1]-1)){//if there i
             -s a dot
1359   5                                      next_dot_x=1;
1360   5                                      ball_sit[0]+=(i-1);
1361   5                                      break;
1362   5                              }
1363   4                      }
1364   3                      if(~next_dot_x){
1365   4                              ball_sit[0]+=ball_speed[0];
1366   4                      }
1367   3              }else{
1368   3                      //go left
1369   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1370   4                              if(ball_sit[0]-i==0){
1371   5                                      next_dot_x=1;
1372   5                                      ball_sit[0]-=i;
1373   5                                      break;
1374   5                              }else if(read_dot(ball_sit[0]-i,ball_sit[1]) || read_dot(ball_sit[0]-i,ball_sit[1]-1)){//if there is a 
             -dot
1375   5                                      next_dot_x=1;
1376   5                                      ball_sit[0]-=(i-1);
1377   5                                      break;
1378   5                              }
1379   4                      }
1380   3                      if(~next_dot_x){
1381   4                              ball_sit[0]-=ball_speed[0];
1382   4                      }
1383   3              }
1384   2              }
1385   1      
1386   1      }
1387          //draw now ball
1388          void draw_ball(){
1389   1              //clear previous ball
1390   1              clear_ball();
1391   1              //calculate now ball
1392   1              move_ball();
1393   1              //draw now ball
1394   1              set_dot(ball_sit[0],ball_sit[1]);
1395   1              set_dot(ball_sit[0],ball_sit[1]-1);
1396   1              set_dot(ball_sit[0]+1,ball_sit[1]);
1397   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);
1398   1      }
1399          
1400          //refresh screen
1401          void refresh_screen(){
1402   1              bit flag,x_change;
1403   1              unsigned char i;
1404   1              unsigned char x,y;
1405   1              //Add frame number
1406   1              if(game_status!=1){
1407   2                      number_frame++;
1408   2              }
1409   1              if(game_status==4){
1410   2                      //start music
1411   2                      LS1=title_music;
1412   2                      //show title
1413   2                      if(frame_begin==0){
1414   3                              number_frame=0;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 24  

1415   3                              frame_begin=1;
1416   3                      }else{
1417   3                              if(frame_finish==0){
1418   4                                      //main program for show title
1419   4                                      //show BREAKOUT
1420   4                                      if(number_frame<80){
1421   5                                              for(i=number_frame/10;i<number_frame/10+1;i++){
1422   6                                                      for(y=0;y<12;y++){
1423   7                                                              for(x=0;x<3;x++){
1424   8                                                                      flag=0;
1425   8                                                                      y+=5+15*i;
1426   8                                                                      x+=1;
1427   8                                                                      if(y<64){
1428   9                                                                              choose_screen(1);
1429   9                                                                      }else{
1430   9                                                                              choose_screen(2);
1431   9                                                                              y-=64;
1432   9                                                                              flag=1;
1433   9                                                                      }
1434   8                                                                      lcd_write_command(0xb8|x);
1435   8                                                                      lcd_write_command(0x40|y);
1436   8                                                                      if(flag){
1437   9                                                                              y+=64;
1438   9                                                                      }
1439   8                                                                      y-=5+15*i;
1440   8                                                                      x-=1;
1441   8                                                                      lcd_write_data(title[y+x*12+i*36]);
1442   8                                                              }       
1443   7                                                      }
1444   6                                              }
1445   5                                      }else if(number_frame>80 && number_frame<120){
1446   5                                              //show "clone"
1447   5                                              //clear previous fonts
1448   5                                              choose_screen(0);
1449   5                                              for(x=4;x<6;x++){
1450   6                                                      for(y=64-(number_frame-80);y<64;y++){
1451   7                                                              lcd_write_command(0xb8|x);
1452   7                                                              lcd_write_command(0x40|y);
1453   7                                                              lcd_write_data(0x00);
1454   7                                                      }
1455   6                                              }
1456   5                                              //show next fonts
1457   5                                              for(i=0;i<5;i++){
1458   6                                                      for(y=0;y<6;y++){
1459   7                                                              for(x=0;x<2;x++){
1460   8                                                                      flag=0;
1461   8                                                                      y+=127-(number_frame-80)+7*i;
1462   8                                                                      x+=4;
1463   8                                                                      if(y<64){
1464   9                                                                              choose_screen(1);
1465   9                                                                      }else{
1466   9                                                                              choose_screen(2);
1467   9                                                                              y-=64;
1468   9                                                                              flag=1;
1469   9                                                                      }
1470   8                                                                      if(y<64){
1471   9                                                                              lcd_write_command(0xb8|x);
1472   9                                                                              lcd_write_command(0x40|y);
1473   9                                                                              if(flag){
1474  10                                                                                      y+=64;
1475  10                                                                              }
1476   9                                                                      y-=127-(number_frame-80)+7*i;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 25  

1477   9                                                                      x-=4;
1478   9                                                                      lcd_write_data(clone[y+x*6+i*12]);
1479   9                                                                      }
1480   8                                                              }       
1481   7                                                      }
1482   6                                              }
1483   5                                      }else if(number_frame>120){
1484   5                                              frame_finish=1; 
1485   5                                      }
1486   4                              }else{
1487   4                                      game_status=5;
1488   4                                      frame_finish=0;
1489   4                                      frame_begin=0;
1490   4                              }
1491   3                      }
1492   2              }else if(game_status==5){
1493   2                      if(frame_begin==0){
1494   3                      //prepare for flashing
1495   3                              frame_begin=1;
1496   3                              number_frame=0;
1497   3                      }else{
1498   3                              //check button
1499   3                              start=1;
1500   3                              if(start==0){
1501   4                                      LS1=change;
1502   4                                      first_page();
1503   4                                      draw_block();
1504   4                                      game_status=6;
1505   4                                      frame_begin=0;
1506   4                              }else{
1507   4                              //flashing
1508   4                              if(number_frame>20){
1509   5                                      number_frame=0;
1510   5                              }else if(number_frame>10 && number_frame<20){
1511   5                                      choose_screen(1);
1512   5                                      for(x=6;x<8;x++){
1513   6                                              for(y=20;y<64;y++){
1514   7                                                      lcd_write_command(0xb8|x);
1515   7                                                      lcd_write_command(0x40|y);
1516   7                                                      lcd_write_data(0x00);
1517   7                                              }
1518   6                                      }
1519   5                                      choose_screen(2);
1520   5                                      for(x=6;x<8;x++){
1521   6                                              for(y=0;y<43;y++){
1522   7                                                      lcd_write_command(0xb8|x);
1523   7                                                      lcd_write_command(0x40|y);
1524   7                                                      lcd_write_data(0x00);
1525   7                                              }
1526   6                                      }
1527   5                              }else if(number_frame<30){
1528   5                                      for(i=0;i<11;i++){
1529   6                                              for(y=0;y<6;y++){
1530   7                                                      for(x=0;x<2;x++){
1531   8                                                              flag=0;
1532   8                                                              y+=20+7*i;
1533   8                                                              x+=6;
1534   8                                                              if(y<64){
1535   9                                                                      choose_screen(1);
1536   9                                                              }else{
1537   9                                                                      choose_screen(2);
1538   9                                                                      y-=64;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 26  

1539   9                                                                      flag=1;
1540   9                                                              }
1541   8                                                              if(y<64){
1542   9                                                              lcd_write_command(0xb8|x);
1543   9                                                              lcd_write_command(0x40|y);
1544   9                                                              if(flag){
1545  10                                                                      y+=64;
1546  10                                                              }
1547   9                                                              y-=20+7*i;
1548   9                                                              x-=6;
1549   9                                                              lcd_write_data(press_start[y+x*6+i*12]);
1550   9                                                              }
1551   8                                                      }       
1552   7                                              }
1553   6                                      }
1554   5                              }
1555   4                              }
1556   3                      }
1557   2              }else if(game_status==6){
1558   2                      //start music
1559   2                      LS1=level_music;
1560   2                      //show level
1561   2                      //show life
1562   2                      if(frame_finish==0){
1563   3                              number_frame=0;
1564   3                      }
1565   2                      max_number_frame=30;
1566   2                      if(number_frame<max_number_frame){
1567   3                              if(frame_finish==0){
1568   4                                      show_level(level);
1569   4                                      frame_finish=1;
1570   4                              }
1571   3                      }else{
1572   3                              clear_low_screen();
1573   3                              game_status=3;
1574   3                              frame_finish=0;
1575   3                      }
1576   2              }else if(game_status==3){
1577   2                      //show life
1578   2                      if(frame_finish==0){
1579   3                              number_frame=0;
1580   3                      }
1581   2                      max_number_frame=30;
1582   2                      if(number_frame<max_number_frame){
1583   3                              if(frame_finish==0){
1584   4                                      show_life(life);
1585   4                                      frame_finish=1;
1586   4                              }
1587   3                      }else{
1588   3                              TR0=1;
1589   3                              LS1=change;
1590   3                              clear_low_screen();
1591   3                              init_ball();
1592   3                              init_bar();
1593   3                              game_status=1;
1594   3                              frame_finish=0;
1595   3                      }
1596   2              }else if(game_status==7){
1597   2                      //become longer
1598   2                      if(frame_begin==0){
1599   3                              frame_begin=1;
1600   3                              number_frame=0;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 27  

1601   3                      }else{
1602   3                              if(number_frame<50){
1603   4                                      if(number_frame%10==0){
1604   5                                              for(i=0;i<bar_len;i++){
1605   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1606   6                                              }
1607   5                                      }else{
1608   5                                              for(i=0;i<bar_len;i++){
1609   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1610   6                                              }
1611   5                                      }
1612   4                              }else if(number_frame==50){
1613   4                                      bar_len=128;
1614   4                                      temp_bar_sit_x=bar_sit[0];
1615   4                                      bar_sit[0]=0;
1616   4                              }else if(number_frame<100){
1617   4                                      if(number_frame%10==0){
1618   5                                              for(i=0;i<bar_len;i++){
1619   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1620   6                                              }
1621   5                                      }else{
1622   5                                              for(i=0;i<bar_len;i++){
1623   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1624   6                                              }
1625   5                                      }
1626   4                              }else{
1627   4                                      for(i=0;i<bar_len;i++){
1628   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1629   5                                      }
1630   4                                      frame_begin=0;
1631   4                                      game_status=1;
1632   4                                      longer_time=0;
1633   4                                      longer=1;
1634   4                              }
1635   3                      }
1636   2              }else if(game_status==8){
1637   2                      //clear area
1638   2                      if(frame_begin==0){
1639   3                              if((255-TL0)<85){
1640   4                                      x=0;
1641   4                              }else{
1642   4                                      x=2;
1643   4                              }
1644   3                              frame_begin=1;
1645   3                              number_frame=0;
1646   3                      }else{
1647   3                              if(number_frame<50){
1648   4                                      if(number_frame%10==0){
1649   5                                              for(i=0;i<2;i++){
1650   6                                                      for(y=0;y<64;y++){
1651   7                                                              choose_screen(0);
1652   7                                                              lcd_write_command(0xb8|x+i);
1653   7                                                              lcd_write_command(0x40|y);
1654   7                                                              lcd_write_data(0x00);
1655   7                                                      }
1656   6                                              }
1657   5                                      }else{
1658   5                                              for(i=0;i<2;i++){
1659   6                                                      for(y=0;y<64;y++){
1660   7                                                              choose_screen(0);
1661   7                                                              lcd_write_command(0xb8|x+i);
1662   7                                                              lcd_write_command(0x40|y);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 28  

1663   7                                                              lcd_write_data(0xFF);
1664   7                                                      }
1665   6                                              }
1666   5                                      }
1667   4                              }else{
1668   4                                      for(i=0;i<2;i++){
1669   5                                                      for(y=0;y<64;y++){
1670   6                                                              choose_screen(0);
1671   6                                                              lcd_write_command(0xb8|x+i);
1672   6                                                              lcd_write_command(0x40|y);
1673   6                                                              lcd_write_data(0x00);
1674   6                                                      }
1675   5                                      }
1676   4                                      frame_begin=0;
1677   4                                      game_status=1;
1678   4                              }
1679   3                      }
1680   2              }else if(game_status==9){
1681   2                      //win
1682   2                      x=prop_x;
1683   2                      y=prop_y;
1684   2                      y=y/8;
1685   2                      if(frame_begin==0){
1686   3                              frame_begin=1;
1687   3                              number_frame=0;
1688   3                      }else{
1689   3                              if(number_frame<50){
1690   4                                      if(number_frame%10==0){
1691   5                                              for(i=0;i<8;i++){
1692   6                                                      if(x+i<64){
1693   7                                                              choose_screen(1);
1694   7                                                              x_change=0;
1695   7                                                      }else{
1696   7                                                              x-=64;
1697   7                                                              choose_screen(2);
1698   7                                                              x_change=1;
1699   7                                                      }
1700   6                                                      lcd_write_command(0x40|(x+i));
1701   6                                                      lcd_write_command(0xb8|y);
1702   6                                                      lcd_write_data(prop[0x00]);
1703   6                                                      if(x_change){
1704   7                                                              x+=64;
1705   7                                                      }
1706   6                                              }
1707   5                                      }else{
1708   5                                              for(i=0;i<8;i++){
1709   6                                                      if(x+i<64){
1710   7                                                              choose_screen(1);
1711   7                                                              x_change=0;
1712   7                                                      }else{
1713   7                                                              x-=64;
1714   7                                                              choose_screen(2);
1715   7                                                              x_change=1;
1716   7                                                      }
1717   6                                                      lcd_write_command(0x40|(x+i));
1718   6                                                      lcd_write_command(0xb8|y);
1719   6                                                      lcd_write_data(prop[i+16]);
1720   6                                                      if(x_change){
1721   7                                                              x+=64;
1722   7                                                      }               
1723   6                                              }
1724   5                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 29  

1725   4                              }else{
1726   4                                      for(i=0;i<8;i++){
1727   5                                              if(x+i<64){
1728   6                                                      choose_screen(1);
1729   6                                                      x_change=0;
1730   6                                              }else{
1731   6                                                      x-=64;
1732   6                                                      choose_screen(2);
1733   6                                                      x_change=1;
1734   6                                              }
1735   5                                              lcd_write_command(0x40|(x+i));
1736   5                                              lcd_write_command(0xb8|y);
1737   5                                              lcd_write_data(0x00);
1738   5                                              if(x_change){
1739   6                                                      x+=64;
1740   6                                              }
1741   5                                      }
1742   4                                      frame_begin=0;
1743   4                                      game_status=2;
1744   4                              }
1745   3                      }
1746   2              }else if(game_status==10){
1747   2                      //Die
1748   2                      x=prop_x;
1749   2                      y=prop_y;
1750   2                      y=y/8;
1751   2                      if(frame_begin==0){
1752   3                              frame_begin=1;
1753   3                              number_frame=0;
1754   3                      }else{
1755   3                              if(number_frame<50){
1756   4                                      if(number_frame%10==0){
1757   5                                              for(i=0;i<8;i++){
1758   6                                                      if(x+i<64){
1759   7                                                              choose_screen(1);
1760   7                                                              x_change=0;
1761   7                                                      }else{
1762   7                                                              x-=64;
1763   7                                                              choose_screen(2);
1764   7                                                              x_change=1;
1765   7                                                      }
1766   6                                                      lcd_write_command(0x40|(x+i));
1767   6                                                      lcd_write_command(0xb8|y);
1768   6                                                      lcd_write_data(prop[0x00]);
1769   6                                                      if(x_change){
1770   7                                                              x+=64;
1771   7                                                      }
1772   6                                              }
1773   5                                      }else{
1774   5                                              for(i=0;i<8;i++){
1775   6                                                      if(x+i<64){
1776   7                                                              choose_screen(1);
1777   7                                                              x_change=0;
1778   7                                                      }else{
1779   7                                                              x-=64;
1780   7                                                              choose_screen(2);
1781   7                                                              x_change=1;
1782   7                                                      }
1783   6                                                      lcd_write_command(0x40|(x+i));
1784   6                                                      lcd_write_command(0xb8|y);
1785   6                                                      lcd_write_data(prop[i+24]);
1786   6                                                      if(x_change){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 30  

1787   7                                                              x+=64;
1788   7                                                      }               
1789   6                                              }
1790   5                                      }
1791   4                              }else{
1792   4                                      for(i=0;i<8;i++){
1793   5                                              if(x+i<64){
1794   6                                                      choose_screen(1);
1795   6                                                      x_change=0;
1796   6                                              }else{
1797   6                                                      x-=64;
1798   6                                                      choose_screen(2);
1799   6                                                      x_change=1;
1800   6                                              }
1801   5                                              lcd_write_command(0x40|(x+i));
1802   5                                              lcd_write_command(0xb8|y);
1803   5                                              lcd_write_data(0x00);
1804   5                                              if(x_change){
1805   6                                                      x+=64;
1806   6                                              }
1807   5                                      }
1808   4                                      frame_begin=0;
1809   4                                      game_status=0;
1810   4                              }
1811   3                      }
1812   2              }else if(game_status==11){
1813   2                      //end longer
1814   2                      if(frame_begin==0){
1815   3                              frame_begin=1;
1816   3                              number_frame=0;
1817   3                              longer=0;
1818   3                      }else{
1819   3                              if(number_frame<50){
1820   4                                      if(number_frame%10==0){
1821   5                                              for(i=0;i<bar_len;i++){
1822   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1823   6                                              }
1824   5                                      }else{
1825   5                                              for(i=0;i<bar_len;i++){
1826   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1827   6                                              }
1828   5                                      }
1829   4                              }else if(number_frame==50){
1830   4                                      for(i=0;i<bar_len;i++){
1831   5                                              clear_dot(i+bar_sit[0],bar_sit[1]);
1832   5                                      }
1833   4                                      bar_len=o_bar_len;
1834   4                                      bar_sit[0]=temp_bar_sit_x;
1835   4                              }else if(number_frame<100){
1836   4                                      if(number_frame%10==0){
1837   5                                              for(i=0;i<bar_len;i++){
1838   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1839   6                                              }
1840   5                                      }else{
1841   5                                              for(i=0;i<bar_len;i++){
1842   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1843   6                                              }
1844   5                                      }
1845   4                              }else{
1846   4                                      for(i=0;i<bar_len;i++){
1847   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1848   5                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 31  

1849   4                                      frame_begin=0;
1850   4                                      game_status=1;
1851   4                              }
1852   3                      }
1853   2              }else{
1854   2              //check block
1855   2              check_block();
1856   2              //draw bar
1857   2              if(game_status==1){
1858   3                      //music
1859   3                      LS1=run_music;
1860   3                      //continuous status
1861   3                      random_prop();
1862   3                      draw_bar();
1863   3                      draw_ball();
1864   3              }else if(game_status==0){
1865   3                      LS1=die_music;
1866   3                      //end status
1867   3                      if(life==0){
1868   4                              //init level
1869   4                              level=1;
1870   4                              //die information
1871   4                               //show life
1872   4                              if(frame_finish==0){
1873   5                                      number_frame=0;
1874   5                              }
1875   4                              if(number_frame<30){
1876   5                                      if(frame_finish==0){
1877   6                                              show_life(life);
1878   6                                              frame_finish=1;
1879   6                                      }
1880   5                              }else if(number_frame==30){
1881   5                                      //show "DIE!"
1882   5                                      first_page();
1883   5                                      prop_exist=0;
1884   5                                      longer=0;
1885   5                                      longer_time=0;
1886   5                                      for(i=0;i<4;i++){
1887   6                                              for(y=0;y<12;y++){
1888   7                                                      for(x=0;x<3;x++){
1889   8                                                              flag=0;
1890   8                                                              y+=30+20*i;
1891   8                                                              x+=1;
1892   8                                                              if(y<64){
1893   9                                                                      choose_screen(1);
1894   9                                                              }else{
1895   9                                                                      choose_screen(2);
1896   9                                                                      y-=64;
1897   9                                                                      flag=1;
1898   9                                                              }
1899   8                                                              lcd_write_command(0xb8|x);
1900   8                                                              lcd_write_command(0x40|y);
1901   8                                                              if(flag){
1902   9                                                                      y+=64;
1903   9                                                              }
1904   8                                                              y-=30+20*i;
1905   8                                                              x-=1;
1906   8                                                              lcd_write_data(die[y+x*12+i*36]);
1907   8                                                      }       
1908   7                                              }       
1909   6                                      }
1910   5                              }else if(number_frame>30){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 32  

1911   5                                      //check button
1912   5                                      start=1;
1913   5                                      if(start==0){
1914   6                                              first_page();
1915   6                                              life=5;
1916   6                                              game_status=4;
1917   6                                              frame_finish=0;
1918   6                                      }else{
1919   6                                      //flashing
1920   6                                              if(number_frame>50){
1921   7                                                      number_frame=31;
1922   7                                              }else if(number_frame>40 && number_frame<50){
1923   7                                                      choose_screen(0);
1924   7                                                      for(x=6;x<8;x++){
1925   8                                                              for(y=0;y<64;y++){
1926   9                                                                      lcd_write_command(0xb8|x);
1927   9                                                                      lcd_write_command(0x40|y);
1928   9                                                                      lcd_write_data(0x00);
1929   9                                                              }
1930   8                                                      }
1931   7                                              }else if(number_frame<40){
1932   7                                                      for(i=0;i<11;i++){
1933   8                                                              for(y=0;y<6;y++){
1934   9                                                                      for(x=0;x<2;x++){
1935  10                                                                              flag=0;
1936  10                                                                              y+=20+7*i;
1937  10                                                                              x+=6;
1938  10                                                                              if(y<64){
1939  11                                                                                      choose_screen(1);
1940  11                                                                              }else{
1941  11                                                                                      choose_screen(2);
1942  11                                                                                      y-=64;
1943  11                                                                                      flag=1;
1944  11                                                                              }
1945  10                                                                              if(y<64){
1946  11                                                                                      lcd_write_command(0xb8|x);
1947  11                                                                                      lcd_write_command(0x40|y);
1948  11                                                                              if(flag){
1949  12                                                                                      y+=64;
1950  12                                                                              }
1951  11                                                                              y-=20+7*i;
1952  11                                                                              x-=6;
1953  11                                                                              lcd_write_data(press_start[y+x*6+i*12]);
1954  11                                                                              }
1955  10                                                                      }       
1956   9                                                              }
1957   8                                                      }
1958   7                                              }
1959   6                                      }
1960   5                              }
1961   4                      }else{
1962   4                              //show life
1963   4                              if(frame_finish==0){
1964   5                                      number_frame=0;
1965   5                                      life-=1;
1966   5                              }
1967   4                              max_number_frame=30;
1968   4                              if(number_frame<max_number_frame){
1969   5                                      if(frame_finish==0){
1970   6                                              show_life(life);
1971   6                                              frame_finish=1;
1972   6                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 33  

1973   5                              }else{
1974   5                                      clear_low_screen();
1975   5                                      init_ball();
1976   5                                      init_bar();
1977   5                                      game_status=1;
1978   5                                      frame_finish=0;
1979   5                              }
1980   4                      }
1981   3              }else if(game_status==2){
1982   3                      //win status
1983   3                      //"WIN!"
1984   3                      LS1=win_music;
1985   3                      prop_exist=0;
1986   3                      longer=0;
1987   3                      longer_time=0;
1988   3                      if(frame_finish==0){
1989   4                              frame_finish=1;
1990   4                              number_frame=0;
1991   4                              first_page();
1992   4                              for(i=0;i<4;i++){
1993   5                                      for(y=0;y<12;y++){
1994   6                                              for(x=0;x<3;x++){
1995   7                                                      flag=0;
1996   7                                                      y+=30+20*i;
1997   7                                                      x+=1;
1998   7                                                      if(y<64){
1999   8                                                              choose_screen(1);
2000   8                                                      }else{
2001   8                                                              choose_screen(2);
2002   8                                                              y-=64;
2003   8                                                              flag=1;
2004   8                                                      }
2005   7                                                      lcd_write_command(0xb8|x);
2006   7                                                      lcd_write_command(0x40|y);
2007   7                                                      if(flag){
2008   8                                                              y+=64;
2009   8                                                      }
2010   7                                                      y-=30+20*i;
2011   7                                                      x-=1;
2012   7                                                      lcd_write_data(win[y+x*12+i*36]);
2013   7                                              }       
2014   6                                      }
2015   5                              }
2016   4                      }else{
2017   4                              //check button
2018   4                              start=1;
2019   4                              if(start==0){
2020   5                                      first_page();
2021   5                                      if(level<3){
2022   6                                              level++;
2023   6                                              draw_block();
2024   6                                              game_status=6;
2025   6                                              
2026   6                                      }else{
2027   6                                              level=1;
2028   6                                              life=5;
2029   6                                              game_status=4;
2030   6                                      }
2031   5                                      frame_finish=0;
2032   5                              }else{
2033   5                              //flashing
2034   5                              if(number_frame>20){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 12:12:49 PAGE 34  

2035   6                                      number_frame=0;
2036   6                              }else if(number_frame>10 && number_frame<20){
2037   6                                      choose_screen(0);
2038   6                                      for(x=6;x<8;x++){
2039   7                                              for(y=0;y<64;y++){
2040   8                                                      lcd_write_command(0xb8|x);
2041   8                                                      lcd_write_command(0x40|y);
2042   8                                                      lcd_write_data(0x00);
2043   8                                              }
2044   7                                      }
2045   6                              }else if(number_frame<30){
2046   6                                      for(i=0;i<11;i++){
2047   7                                              for(y=0;y<6;y++){
2048   8                                                      for(x=0;x<2;x++){
2049   9                                                              flag=0;
2050   9                                                              y+=20+7*i;
2051   9                                                              x+=6;
2052   9                                                              if(y<64){
2053  10                                                                      choose_screen(1);
2054  10                                                              }else{
2055  10                                                                      choose_screen(2);
2056  10                                                                      y-=64;
2057  10                                                                      flag=1;
2058  10                                                              }
2059   9                                                              if(y<64){
2060  10                                                              lcd_write_command(0xb8|x);
2061  10                                                              lcd_write_command(0x40|y);
2062  10                                                              if(flag){
2063  11                                                                      y+=64;
2064  11                                                              }
2065  10                                                              y-=20+7*i;
2066  10                                                              x-=6;
2067  10                                                              lcd_write_data(press_start[y+x*6+i*12]);
2068  10                                                              }
2069   9                                                      }       
2070   8                                              }
2071   7                                      }
2072   6                              }
2073   5                              }       
2074   4                      }
2075   3              }
2076   2              }
2077   1      }
2078          
2079          //initial fiunction
2080          //init the game
2081          void game_init(){
2082   1              lcd_init();
2083   1              first_page();
2084   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10171    ----
   CONSTANT SIZE    =   2186    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      9       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
