C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN game.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE game.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "game.h"
   3          #include "lcd12864.h"
   4          
   5          //variables of game
   6          unsigned char game_status=4;//2: win  1: continue. 0: end  3: firest time show life 4: show title  5: wait
             -ing for start  6:show level
   7          unsigned char life=5;
   8          unsigned char number_frame=0;
   9          unsigned char max_number_frame=0;
  10          bit frame_finish=0;
  11          bit frame_begin=0;
  12          unsigned char level=1;//total 3 level
  13          
  14          //win character
  15          unsigned char code win[]={
  16                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -W-
  17                  0x04,0xFC,0xFC,0x04,0x00,0x03,0xFF,0x80,
  18                  0x00,0xFC,0xFC,0x00,0x80,0xFF,0x03,0x00,
  19                  0x00,0x00,0x03,0x3F,0x3C,0x03,0x03,0x3C,
  20                  0x3F,0x03,0x00,0x00,
  21                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  22                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  23                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  24                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  25                  0x20,0x20,0x20,0x00,
  26                  0x04,0xFC,0xFC,0xE0,0x00,0x00,0x00,0x04,  // -N-
  27                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x01,
  28                  0x07,0x1C,0x70,0xC0,0xFF,0xFF,0x00,0x00,
  29                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x03,
  30                  0x0F,0x3F,0x00,0x00,
  31                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  32                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  33                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  34                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  35                  0x00,0x00,0x00,0x00};
  36          unsigned char code die[]={
  37                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -D-
  38                  0x70,0xE0,0x80,0x00,0x00,0xFF,0xFF,0x00,
  39                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  40                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x30,0x18,
  41                  0x0E,0x07,0x01,0x00,
  42                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  43                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  44                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  45                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  46                  0x20,0x20,0x20,0x00,
  47                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  48                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  49                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  50                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  51                  0x30,0x38,0x3E,0x00,
  52                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  53                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  54                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 2   

  55                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  56                  0x00,0x00,0x00,0x00};
  57          unsigned char code lifefont[]={
  58                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  59                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  60                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  61                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  62                  0x30,0x38,0x3E,0x00,
  63                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  64                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  65                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  66                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  67                  0x20,0x20,0x20,0x00,
  68                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -F-
  69                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  70                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  71                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x00,
  72                  0x00,0x00,0x00,0x00,
  73                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  74                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  75                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  76                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  77                  0x30,0x38,0x3E,0x00,
  78                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
  79                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
  80                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
  81                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  82                  0x00,0x00,0x00,0x00};
  83          unsigned char code levelfont[]={
  84                  //level=
  85                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  86                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  87                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  88                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  89                  0x30,0x38,0x3E,0x00,
  90                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  91                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  92                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  93                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  94                  0x30,0x38,0x3E,0x00,
  95                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -V-
  96                  0xFC,0xFC,0x04,0x00,0x00,0x00,0x3F,0xFF,
  97                  0xC0,0x00,0xC0,0xFF,0x3F,0x00,0x00,0x00,
  98                  0x00,0x00,0x00,0x03,0x1F,0x3C,0x1F,0x03,
  99                  0x00,0x00,0x00,0x00,
 100                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 101                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 102                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 103                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 104                  0x30,0x38,0x3E,0x00,
 105                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
 106                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 107                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 108                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 109                  0x30,0x38,0x3E,0x00,
 110                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
 111                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
 112                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
 113                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114                  0x00,0x00,0x00,0x00};
 115          unsigned char code number[]={
 116                  0x00,0xC0,0xF0,0x38,0x0C,0x04,0x0C,0x38,  // -0-
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 3   

 117                  0xF0,0xC0,0x00,0x00,0xFF,0xFF,0x00,0x00,
 118                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 119                  0x00,0x03,0x0F,0x1C,0x30,0x20,0x30,0x1C,
 120                  0x0F,0x03,0x00,0x00,
 121                  0x00,0x10,0x10,0x18,0x18,0xFC,0xFC,0x00,  // -1-
 122                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 123                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 124                  0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,0x20,
 125                  0x20,0x20,0x00,0x00,
 126                  0x60,0xF0,0xF8,0x0C,0x04,0x04,0x04,0x0C,  // -2-
 127                  0x18,0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,
 128                  0xC0,0x60,0x30,0x18,0x0E,0x07,0x01,0x00,
 129                  0x38,0x3E,0x3F,0x33,0x30,0x30,0x30,0x30,
 130                  0x30,0x30,0x3C,0x00,
 131                  0x00,0x30,0x78,0x78,0x0C,0x04,0x04,0x0C,  // -3-
 132                  0x18,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,
 133                  0x08,0x08,0x1C,0x16,0x33,0xE1,0xC0,0x00,
 134                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 135                  0x18,0x1F,0x0F,0x00,
 136                  0x00,0x00,0x00,0x00,0x80,0xE0,0x38,0xFC,  // -4-
 137                  0xFC,0x00,0x00,0x00,0x80,0xE0,0x38,0x0E,
 138                  0x03,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,
 139                  0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x3F,
 140                  0x3F,0x21,0x21,0x01,
 141                  0x00,0xFC,0xFC,0x0C,0x0C,0x0C,0x0C,0x0C,  // -5-
 142                  0x0C,0x0C,0x00,0x00,0x00,0x1F,0x0F,0x08,
 143                  0x04,0x02,0x02,0x06,0x1C,0xF8,0xE0,0x00,
 144                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 145                  0x1C,0x0F,0x03,0x00};
 146          
 147          unsigned char code title[]={
 148          //Breakout
 149                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -B-
 150                  0xF0,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 151                  0x08,0x08,0x1C,0x16,0x73,0xE1,0x80,0x00,
 152                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x30,
 153                  0x1C,0x0F,0x03,0x00,
 154                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -R-
 155                  0xF8,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 156                  0x38,0xF8,0xCC,0x06,0x07,0x01,0x00,0x00,
 157                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x03,0x2F,
 158                  0x3C,0x30,0x20,0x00,
 159                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 160                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 161                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 162                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 163                  0x30,0x38,0x3E,0x00,
 164                  0x00,0x00,0x00,0x00,0xF0,0x0C,0x3C,0xF0,  // -A-
 165                  0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,
 166                  0x43,0x40,0x40,0x43,0xFF,0xF0,0x00,0x00,
 167                  0x20,0x3E,0x3F,0x20,0x00,0x00,0x00,0x00,
 168                  0x20,0x3F,0x3E,0x20,
 169                  0x04,0xFC,0xFC,0x04,0x00,0x80,0xE4,0x7C,  // -K-
 170                  0x1C,0x04,0x04,0x00,0x00,0xFF,0xFF,0x78,
 171                  0x1E,0x7F,0xE1,0x80,0x00,0x00,0x00,0x00,
 172                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x01,0x27,
 173                  0x3E,0x38,0x20,0x20,
 174                  0xE0,0xF0,0x18,0x0C,0x04,0x04,0x04,0x0C,  // -O-
 175                  0x18,0xF0,0xE0,0x00,0xFF,0xFF,0x00,0x00,
 176                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 177                  0x07,0x0F,0x18,0x30,0x20,0x20,0x20,0x30,
 178                  0x18,0x0F,0x07,0x00,
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 4   

 179                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -U-
 180                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x00,
 181                  0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 182                  0x00,0x0F,0x1F,0x30,0x20,0x20,0x20,0x30,
 183                  0x1F,0x0F,0x00,0x00,
 184                  0x7C,0x1C,0x0C,0x04,0x04,0xFC,0xFC,0x04,  // -T-
 185                  0x04,0x0C,0x1C,0x7C,0x00,0x00,0x00,0x00,
 186                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 187                  0x00,0x00,0x00,0x20,0x20,0x3F,0x3F,0x20,
 188                  0x20,0x00,0x00,0x00,};
 189          unsigned char code clone[]={
 190                  0x00,0xFC,0x02,0x02,0x02,0x86,0x00,0x00,  // -C-
 191                  0x01,0x01,0x01,0x00,
 192                  0x00,0x02,0xFE,0x02,0x00,0xC0,0x00,0x01,  // -L-
 193                  0x01,0x01,0x01,0x01,
 194                  0x00,0xFC,0x02,0x02,0x02,0xFC,0x00,0x00,  // -O-
 195                  0x01,0x01,0x01,0x00,
 196                  0x02,0xFE,0x0E,0x70,0x82,0xFE,0x01,0x01,  // -N-
 197                  0x01,0x00,0x01,0x01,
 198                  0x02,0xFE,0x12,0x3A,0x02,0x86,0x01,0x01,  // -E-
 199                  0x01,0x01,0x01,0x01};
 200          unsigned char code press_start[]={
 201                  //press_start
 202                  0x00,0x02,0xFE,0x22,0x22,0x1C,0x00,0x01,  // -P-
 203                  0x01,0x01,0x00,0x00,
 204                  0x00,0x08,0xF8,0x10,0x08,0x08,0x00,0x01,  // -r-
 205                  0x01,0x01,0x01,0x01,
 206                  0x00,0xF0,0x28,0x28,0x28,0x30,0x00,0x00,  // -e-
 207                  0x01,0x01,0x01,0x01,
 208                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 209                  0x01,0x01,0x01,0x00,
 210                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 211                  0x01,0x01,0x01,0x00,
 212                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
 213                  0x00,0x00,0x00,0x00,
 214                  0x00,0x8C,0x92,0x12,0x14,0xE6,0x00,0x01,  // -S-
 215                  0x00,0x01,0x01,0x00,
 216                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 217                  0x01,0x01,0x01,0x00,
 218                  0x00,0xC0,0x7A,0x46,0x78,0xC0,0x01,0x01,  // -A-
 219                  0x01,0x00,0x01,0x01,
 220                  0x02,0xFE,0x22,0x22,0x62,0x9C,0x01,0x01,  // -R-
 221                  0x01,0x00,0x00,0x00,
 222                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 223                  0x01,0x01,0x01,0x00};
 224          
 225          void clear_low_screen(){
 226   1              unsigned char x,y;
 227   1              choose_screen(0);
 228   1              for(x=4;x<8;x++){
 229   2                      for(y=0;y<64;y++){
 230   3                              lcd_write_command(0xb8|x);
 231   3                              lcd_write_command(0x40|y);
 232   3                              lcd_write_data(0x00);
 233   3                      }
 234   2              }
 235   1      }
 236          void show_life(unsigned char life){
 237   1              unsigned char x,y,i;
 238   1              bit flag;
 239   1              clear_low_screen();
 240   1                      for(i=0;i<6;i++){
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 5   

 241   2                              for(y=0;y<12;y++){
 242   3                                      for(x=0;x<3;x++){
 243   4                                              flag=0;
 244   4                                              y+=20+15*i;
 245   4                                              x+=4;
 246   4                                              if(y<64){
 247   5                                                      choose_screen(1);
 248   5                                              }else{
 249   5                                                      choose_screen(2);
 250   5                                                      y-=64;
 251   5                                                      flag=1;
 252   5                                              }
 253   4                                              lcd_write_command(0xb8|x);
 254   4                                              lcd_write_command(0x40|y);
 255   4                                              if(flag){
 256   5                                                      y+=64;
 257   5                                              }
 258   4                                              y-=20+15*i;
 259   4                                              x-=4;
 260   4                                              if(i<5){
 261   5                                                      lcd_write_data(lifefont[y+x*12+i*36]);
 262   5                                              }else{
 263   5                                                      lcd_write_data(number[y+12*x+life*36]);
 264   5                                              }
 265   4                                      }       
 266   3                              }
 267   2                      }       
 268   1      }
 269          void show_level(unsigned char level){
 270   1              unsigned char x,y,i;
 271   1              bit flag;
 272   1              clear_low_screen();
 273   1                      for(i=0;i<7;i++){
 274   2                              for(y=0;y<12;y++){
 275   3                                      for(x=0;x<3;x++){
 276   4                                              flag=0;
 277   4                                              y+=20+15*i;
 278   4                                              x+=4;
 279   4                                              if(y<64){
 280   5                                                      choose_screen(1);
 281   5                                              }else{
 282   5                                                      choose_screen(2);
 283   5                                                      y-=64;
 284   5                                                      flag=1;
 285   5                                              }
 286   4                                              lcd_write_command(0xb8|x);
 287   4                                              lcd_write_command(0x40|y);
 288   4                                              if(flag){
 289   5                                                      y+=64;
 290   5                                              }
 291   4                                              y-=20+15*i;
 292   4                                              x-=4;
 293   4                                              if(i<6){
 294   5                                                      lcd_write_data(levelfont[y+x*12+i*36]);
 295   5                                              }else{
 296   5                                                      lcd_write_data(number[y+12*x+level*36]);
 297   5                                              }
 298   4                                      }       
 299   3                              }
 300   2                      }       
 301   1      }
 302          
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 6   

 303          
 304          //variables of block
 305          //block1 for level 1
 306          /*   for test of win 
 307          unsigned char code block1[]={
 308          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 309          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 310          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 311          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 312          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 313          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 314          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 315          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 316          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 317          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 318          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 319          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 320          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 321          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 322          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 323          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 324          };
 325          */
 326          ///*
 327          unsigned char code block1[]={
 328          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 329          0xFF,0xF7,0xEF,0xEF,0xDF,0xDF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 330          0xFF,0xFF,0xFF,0x7F,0x9F,0xE7,0xFB,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 331          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 332          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFD,0xFD,
 333          0x0D,0xED,0xED,0xED,0xED,0xED,0x6D,0x6D,0x2C,0x2D,0xED,0xED,0xED,0xED,0xED,0xED,
 334          0xED,0xED,0x2D,0x2C,0x6D,0x6D,0x6D,0xED,0xED,0xED,0xED,0xED,0x0D,0xFD,0xFD,0x01,
 335          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 336          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,
 337          0x80,0xBF,0xBF,0xBF,0xBC,0xBC,0xBE,0xBE,0xB3,0xAD,0xAF,0xB7,0xBB,0xB9,0xB7,0xAF,
 338          0xAF,0xB5,0xBB,0xBF,0xBE,0xBE,0xBE,0xBF,0xBF,0xBF,0xBF,0xBF,0x80,0xFF,0xFF,0x00,
 339          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 340          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFD,0xFD,
 341          0xFD,0xFD,0xCD,0xC1,0xF1,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
 342          0xFD,0xFD,0xFD,0xFD,0xF1,0xC1,0xCD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFC,
 343          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 344          };
 345          //*/
 346          //block2 for level 2
 347          /*   for test of win 
 348          unsigned char code block2[]={
 349          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 350          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 351          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 352          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 353          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 354          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 355          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 356          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 357          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 358          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 359          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 360          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 361          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 362          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 363          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 364          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 7   

 365          };
 366          */
 367          ///*
 368          unsigned char code block2[]={
 369          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 370          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,
 371          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 372          0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 373          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 374          0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,0x07,0x01,0x06,0x03,0x01,0x01,0x01,0x01,
 375          0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,
 376          0x07,0x01,0x06,0x03,0x01,0x01,0x71,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 377          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 378          0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,
 379          0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,
 380          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 381          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 382          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 383          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 384          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 385          };
 386          //*/
 387          //block3 for level 3
 388          /*   for test of win 
 389          unsigned char code block3[]={
 390          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 391          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 392          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 393          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 394          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 395          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 396          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 397          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 398          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 399          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 400          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 401          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 402          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 403          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 404          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 405          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 406          };
 407          */
 408          ///*
 409          unsigned char code block3[]={
 410          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 411          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 412          0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 413          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 414          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x1F,
 415          0x4F,0xE7,0xF3,0xFB,0xF9,0xFD,0xFD,0xFC,0xFE,0xBE,0x1E,0x0F,0x07,0x03,0x01,0x01,
 416          0x40,0xE0,0xF0,0xE0,0x41,0x01,0x03,0x07,0x0E,0x1E,0xBE,0xFC,0xFD,0xFD,0xF9,0xFB,
 417          0xF3,0xE7,0x4F,0x1F,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 418          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 419          0xFE,0xFC,0xF9,0xFB,0xF3,0xF7,0xF7,0xE7,0xEF,0xEF,0xCF,0xDE,0xDC,0xD8,0xD0,0xD0,
 420          0xC0,0xC0,0xC1,0xC0,0xD0,0xD0,0xD8,0xDC,0xCE,0xEF,0xEF,0xE7,0xF7,0xF7,0xF3,0xFB,
 421          0xF9,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 422          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 423          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 424          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 425          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 426          };
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 8   

 427          //*/
 428          
 429          
 430          //functions of block
 431          //draw block at the begining
 432          void draw_block(){
 433   1              unsigned char x,y;
 434   1              choose_screen(0);
 435   1              for(x=0;x<4;x++){
 436   2                      for(y=0;y<64;y++){
 437   3                              lcd_write_command(0xb8|x);
 438   3                              lcd_write_command(0x40|y);
 439   3                              switch(level){
 440   4                                      case 1: lcd_write_data(block1[x*64+y]);break;
 441   4                                      case 2: lcd_write_data(block2[x*64+y]);break;
 442   4                                      case 3: lcd_write_data(block3[x*64+y]);break;
 443   4                                      default: lcd_write_data(block1[x*64+y]);break;
 444   4                              }
 445   3                      }       
 446   2              }
 447   1      }
 448          //check block
 449          void check_block(){
 450   1              unsigned char i,x,y,rdata;
 451   1              unsigned char now_game_status=game_status;
 452   1              game_status=2;
 453   1              for(i=1;i<3;i++){
 454   2                      choose_screen(i);
 455   2                      for(x=0;x<4;x++){
 456   3                              for(y=0;y<64;y++){
 457   4                                      lcd_write_command(0xb8|x);
 458   4                                      lcd_write_command(0x40|y);
 459   4                                      rdata=lcd_read_data();
 460   4                                      if(rdata!=0x00){
 461   5                                              game_status=now_game_status;
 462   5                                              break;
 463   5                                      }
 464   4                              }
 465   3                              if(game_status==now_game_status){
 466   4                                      break;
 467   4                              }
 468   3                      }
 469   2                      if(game_status==now_game_status){
 470   3                              break;
 471   3                      }
 472   2              }
 473   1      }
 474          
 475          //variables of bar
 476          //location of the most left point of bar
 477          unsigned char code o_bar_sit[]={0,63};
 478          unsigned char bar_sit[2];//(x,y)
 479          //bar speed
 480          unsigned char o_bar_speed;
 481          unsigned char bar_speed;
 482          //bar length
 483          unsigned char o_bar_len;
 484          unsigned char bar_len;
 485          //bar direction
 486          bit o_bar_direction=1;
 487          bit bar_direction;//0:left, 1:right
 488          
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 9   

 489          //functions for bar
 490          //init bar
 491          void init_bar(){
 492   1              unsigned char i;
 493   1              switch(level){
 494   2                      case 1: o_bar_speed=1;o_bar_len=24;break;
 495   2                      case 2: o_bar_speed=3;o_bar_len=20;break;
 496   2                      case 3: o_bar_speed=6;o_bar_len=12;break;
 497   2                      default:o_bar_speed=1;o_bar_len=24;break;
 498   2              }
 499   1              bar_sit[0]=o_bar_sit[0];
 500   1              bar_sit[1]=o_bar_sit[1];
 501   1              bar_speed=o_bar_speed;
 502   1              bar_len=o_bar_len;
 503   1              bar_direction=o_bar_direction;
 504   1              for(i=0;i<bar_len;i++){
 505   2                      set_dot(bar_sit[0]+i,bar_sit[1]);
 506   2              }
 507   1      }
 508          //draw bar
 509          void draw_bar(){
 510   1              unsigned char i;
 511   1              if(bar_direction){
 512   2                      //go right
 513   2                      if(bar_sit[0]<=128-bar_len-bar_speed){
 514   3                              for(i=1;i<bar_speed+1;i++){
 515   4                                      //clear preivous bar
 516   4                                      clear_dot(bar_sit[0]+i-1,bar_sit[1]);
 517   4                                      //draw new bar
 518   4                                      set_dot(bar_sit[0]+bar_len-1+i,bar_sit[1]);
 519   4                              }
 520   3                              //recalculate bar location
 521   3                              bar_sit[0]+=bar_speed;
 522   3                      }
 523   2              }else{
 524   2                      //go left
 525   2                      if(bar_sit[0]>=0+bar_speed){
 526   3                              for(i=1;i<bar_speed+1;i++){
 527   4                                      //clear preivous bar
 528   4                                      clear_dot(bar_sit[0]+bar_len-i,bar_sit[1]);
 529   4                                      //draw new bar
 530   4                                      set_dot(bar_sit[0]-i,bar_sit[1]);
 531   4                              }
 532   3                              //recalculate bar location
 533   3                              bar_sit[0]-=bar_speed;
 534   3                      }
 535   2              }
 536   1      }
 537          
 538          //variables of ball
 539          //location of ball
 540          unsigned char code o_ball_sit[]={7,62};//(x,y)
 541          unsigned char ball_sit[2];//(x,y)
 542          //ball speed
 543          unsigned char code o_ball_speed[]={0,1};
 544          unsigned char ball_speed[2];//(x,y)
 545          //ball direction
 546          bit o_ball_direction_x=0;
 547          bit ball_direction_x;//x: 0->left, 1->right.
 548          bit o_ball_direction_y=0;  
 549          bit ball_direction_y;//y: 0->down, 1->up.
 550          
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 10  

 551          //functions for ball
 552          //init ball
 553          void init_ball(){
 554   1              ball_sit[0]=o_ball_sit[0];
 555   1              ball_sit[1]=o_ball_sit[1];
 556   1              ball_speed[0]=o_ball_speed[0];
 557   1              ball_speed[1]=o_ball_speed[1];
 558   1              ball_direction_x=o_ball_direction_x;
 559   1              ball_direction_y=o_ball_direction_y;
 560   1              set_dot(ball_sit[0],ball_sit[1]);
 561   1              set_dot(ball_sit[0],ball_sit[1]-1);
 562   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 563   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);   
 564   1      }
 565          //clear preview ball
 566          void clear_ball(){
 567   1              clear_dot(ball_sit[0],ball_sit[1]);
 568   1              clear_dot(ball_sit[0]+1,ball_sit[1]);
 569   1              clear_dot(ball_sit[0],ball_sit[1]-1);
 570   1              clear_dot(ball_sit[0]+1,ball_sit[1]-1);
 571   1      }
 572          //calculate now ball
 573          void move_ball(){
 574   1              bit next_dot_y,next_dot_x;
 575   1              unsigned char i;
 576   1              //check whether the direction should be changed
 577   1              if(ball_direction_y){
 578   2                      if(read_dot(ball_sit[0],ball_sit[1]-2) || read_dot(ball_sit[0]+1,ball_sit[1]-2) || (ball_sit[1]-1)==0){
 579   3                              if((ball_sit[1]-1)!=0){
 580   4                                      clear_dot(ball_sit[0],ball_sit[1]-2);
 581   4                                      clear_dot(ball_sit[0]+1,ball_sit[1]-2);
 582   4                                      if((ball_sit[1]-2)!=0){
 583   5                                              clear_dot(ball_sit[0],ball_sit[1]-3);
 584   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]-3);
 585   5                                      }
 586   4                              }
 587   3                              ball_direction_y=~ball_direction_y;     
 588   3                      }
 589   2              }else{
 590   2                      if(read_dot(ball_sit[0],ball_sit[1]+1) || read_dot(ball_sit[0]+1,ball_sit[1]+1)){
 591   3                              if(ball_sit[1]!=63){
 592   4                                      if(ball_sit[1]+1!=bar_sit[1]){
 593   5                                              clear_dot(ball_sit[0],ball_sit[1]+1);
 594   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]+1);
 595   5                                              clear_dot(ball_sit[0],ball_sit[1]+2);
 596   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]+2);
 597   5                                      }else{
 598   5                                              ball_speed[0]=bar_speed;
 599   5                                              ball_direction_x=bar_direction;
 600   5                                      }
 601   4                                      ball_direction_y=~ball_direction_y;
 602   4                              }else{
 603   4                                      game_status=0;
 604   4                              }
 605   3                      }
 606   2              }
 607   1              if(game_status==1){
 608   2              if(ball_direction_x){
 609   3                      if(read_dot(ball_sit[0]+2,ball_sit[1]) || read_dot(ball_sit[0]+2,ball_sit[1]-1) || (ball_sit[0]+1)==127)
             -{
 610   4                              clear_dot(ball_sit[0]+2,ball_sit[1]);
 611   4                              clear_dot(ball_sit[0]+2,ball_sit[1]-1);
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 11  

 612   4                              clear_dot(ball_sit[0]+3,ball_sit[1]);
 613   4                              clear_dot(ball_sit[0]+3,ball_sit[1]-1);
 614   4                              ball_direction_x=~ball_direction_x;
 615   4                      }
 616   3              }else{
 617   3                      if(read_dot(ball_sit[0]-1,ball_sit[1]) || read_dot(ball_sit[0]-1,ball_sit[1]-1) || ball_sit[0]==0){
 618   4                              if(ball_sit[0]!=0){
 619   5                                      clear_dot(ball_sit[0]-1,ball_sit[1]);
 620   5                                      clear_dot(ball_sit[0]-1,ball_sit[1]-1);
 621   5                                      if((ball_sit[0]-1)!=0){
 622   6                                              clear_dot(ball_sit[0]-2,ball_sit[1]);
 623   6                                              clear_dot(ball_sit[0]-2,ball_sit[1]-1);
 624   6                                      }
 625   5                              }
 626   4                              ball_direction_x=~ball_direction_x;
 627   4                      }
 628   3              }
 629   2              //according to y direction to check next y dot status
 630   2              next_dot_y=0;
 631   2              if(ball_direction_y){
 632   3                      //go up
 633   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 634   4                              if(ball_sit[1]-1-i==0){
 635   5                                      next_dot_y=1;
 636   5                                      ball_sit[1]-=i;
 637   5                                      break;
 638   5                              }else if(read_dot(ball_sit[0],ball_sit[1]-1-i) || read_dot(ball_sit[0]+1,ball_sit[1]-1-i)){//if there i
             -s a dot
 639   5                                      next_dot_y=1;
 640   5                                      ball_sit[1]-=(i-1);
 641   5                                      break;
 642   5                              }
 643   4                      }
 644   3                      if(~next_dot_y){
 645   4                              ball_sit[1]-=ball_speed[1];
 646   4                      }
 647   3              }else{
 648   3                      //go down
 649   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 650   4                              if(read_dot(ball_sit[0],ball_sit[1]+i) || read_dot(ball_sit[0]+1,ball_sit[1]+i)){//if there is a dot
 651   5                                      next_dot_y=1;
 652   5                                      ball_sit[1]+=(i-1);
 653   5                                      break;
 654   5                              }
 655   4                      }
 656   3                      if(~next_dot_y){
 657   4                              ball_sit[1]+=ball_speed[1];
 658   4                      }
 659   3              }
 660   2              //according to x direction to check next x dot status
 661   2              next_dot_x=0;
 662   2              if(ball_direction_x){
 663   3                      //go right
 664   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 665   4                              if(ball_sit[0]+1+i==127){
 666   5                                      next_dot_x=1;
 667   5                                      ball_sit[0]+=i;
 668   5                                      break;
 669   5                              }else if(read_dot(ball_sit[0]+1+i,ball_sit[1]) || read_dot(ball_sit[0]+1+i,ball_sit[1]-1)){//if there i
             -s a dot
 670   5                                      next_dot_x=1;
 671   5                                      ball_sit[0]+=(i-1);
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 12  

 672   5                                      break;
 673   5                              }
 674   4                      }
 675   3                      if(~next_dot_x){
 676   4                              ball_sit[0]+=ball_speed[0];
 677   4                      }
 678   3              }else{
 679   3                      //go left
 680   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
 681   4                              if(ball_sit[0]-i==0){
 682   5                                      next_dot_x=1;
 683   5                                      ball_sit[0]-=i;
 684   5                                      break;
 685   5                              }else if(read_dot(ball_sit[0]-i,ball_sit[1]) || read_dot(ball_sit[0]-i,ball_sit[1]-1)){//if there is a 
             -dot
 686   5                                      next_dot_x=1;
 687   5                                      ball_sit[0]-=(i-1);
 688   5                                      break;
 689   5                              }
 690   4                      }
 691   3                      if(~next_dot_x){
 692   4                              ball_sit[0]-=ball_speed[0];
 693   4                      }
 694   3              }
 695   2              }
 696   1      
 697   1      }
 698          //draw now ball
 699          void draw_ball(){
 700   1              //clear previous ball
 701   1              clear_ball();
 702   1              //calculate now ball
 703   1              move_ball();
 704   1              //draw now ball
 705   1              set_dot(ball_sit[0],ball_sit[1]);
 706   1              set_dot(ball_sit[0],ball_sit[1]-1);
 707   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 708   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);
 709   1      }
 710          
 711          //refresh screen
 712          void refresh_screen(){
 713   1              bit flag;
 714   1              unsigned char i;
 715   1              unsigned char x,y;//for testing
 716   1              //Add frame number
 717   1              if(game_status!=1){
 718   2                      number_frame++;
 719   2              }
 720   1              if(game_status==4){
 721   2                      //start music
 722   2                      LS1=title_music;
 723   2                      //show title
 724   2                      if(frame_begin==0){
 725   3                              number_frame=0;
 726   3                              frame_begin=1;
 727   3                      }else{
 728   3                              if(frame_finish==0){
 729   4                                      //main program for show title
 730   4                                      //show BREAKOUT
 731   4                                      if(number_frame<80){
 732   5                                              for(i=number_frame/10;i<number_frame/10+1;i++){
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 13  

 733   6                                                      for(y=0;y<12;y++){
 734   7                                                              for(x=0;x<3;x++){
 735   8                                                                      flag=0;
 736   8                                                                      y+=5+15*i;
 737   8                                                                      x+=1;
 738   8                                                                      if(y<64){
 739   9                                                                              choose_screen(1);
 740   9                                                                      }else{
 741   9                                                                              choose_screen(2);
 742   9                                                                              y-=64;
 743   9                                                                              flag=1;
 744   9                                                                      }
 745   8                                                                      lcd_write_command(0xb8|x);
 746   8                                                                      lcd_write_command(0x40|y);
 747   8                                                                      if(flag){
 748   9                                                                              y+=64;
 749   9                                                                      }
 750   8                                                                      y-=5+15*i;
 751   8                                                                      x-=1;
 752   8                                                                      lcd_write_data(title[y+x*12+i*36]);
 753   8                                                              }       
 754   7                                                      }
 755   6                                              }
 756   5                                      }else if(number_frame>80 && number_frame<120){
 757   5                                              //show "clone"
 758   5                                              //clear previous fonts
 759   5                                              choose_screen(0);
 760   5                                              for(x=4;x<6;x++){
 761   6                                                      for(y=64-(number_frame-80);y<64;y++){
 762   7                                                              lcd_write_command(0xb8|x);
 763   7                                                              lcd_write_command(0x40|y);
 764   7                                                              lcd_write_data(0x00);
 765   7                                                      }
 766   6                                              }
 767   5                                              //show next fonts
 768   5                                              for(i=0;i<5;i++){
 769   6                                                      for(y=0;y<6;y++){
 770   7                                                              for(x=0;x<2;x++){
 771   8                                                                      flag=0;
 772   8                                                                      y+=127-(number_frame-80)+7*i;
 773   8                                                                      x+=4;
 774   8                                                                      if(y<64){
 775   9                                                                              choose_screen(1);
 776   9                                                                      }else{
 777   9                                                                              choose_screen(2);
 778   9                                                                              y-=64;
 779   9                                                                              flag=1;
 780   9                                                                      }
 781   8                                                                      if(y<64){
 782   9                                                                              lcd_write_command(0xb8|x);
 783   9                                                                              lcd_write_command(0x40|y);
 784   9                                                                              if(flag){
 785  10                                                                                      y+=64;
 786  10                                                                              }
 787   9                                                                      y-=127-(number_frame-80)+7*i;
 788   9                                                                      x-=4;
 789   9                                                                      lcd_write_data(clone[y+x*6+i*12]);
 790   9                                                                      }
 791   8                                                              }       
 792   7                                                      }
 793   6                                              }
 794   5                                      }else if(number_frame>120){
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 14  

 795   5                                              frame_finish=1; 
 796   5                                      }
 797   4                              }else{
 798   4                                      game_status=5;
 799   4                                      frame_finish=0;
 800   4                                      frame_begin=0;
 801   4                              }
 802   3                      }
 803   2              }else if(game_status==5){
 804   2                      if(frame_begin==0){
 805   3                      //prepare for flashing
 806   3                              frame_begin=1;
 807   3                              number_frame=0;
 808   3                      }else{
 809   3                              //check button
 810   3                              start=1;
 811   3                              if(start==0){
 812   4                                      LS1=change;
 813   4                                      first_page();
 814   4                                      draw_block();
 815   4                                      game_status=6;
 816   4                                      frame_begin=0;
 817   4                              }else{
 818   4                              //flashing
 819   4                              if(number_frame>20){
 820   5                                      number_frame=0;
 821   5                              }else if(number_frame>10 && number_frame<20){
 822   5                                      choose_screen(1);
 823   5                                      for(x=6;x<8;x++){
 824   6                                              for(y=20;y<64;y++){
 825   7                                                      lcd_write_command(0xb8|x);
 826   7                                                      lcd_write_command(0x40|y);
 827   7                                                      lcd_write_data(0x00);
 828   7                                              }
 829   6                                      }
 830   5                                      choose_screen(2);
 831   5                                      for(x=6;x<8;x++){
 832   6                                              for(y=0;y<43;y++){
 833   7                                                      lcd_write_command(0xb8|x);
 834   7                                                      lcd_write_command(0x40|y);
 835   7                                                      lcd_write_data(0x00);
 836   7                                              }
 837   6                                      }
 838   5                              }else if(number_frame<30){
 839   5                                      for(i=0;i<11;i++){
 840   6                                              for(y=0;y<6;y++){
 841   7                                                      for(x=0;x<2;x++){
 842   8                                                              flag=0;
 843   8                                                              y+=20+7*i;
 844   8                                                              x+=6;
 845   8                                                              if(y<64){
 846   9                                                                      choose_screen(1);
 847   9                                                              }else{
 848   9                                                                      choose_screen(2);
 849   9                                                                      y-=64;
 850   9                                                                      flag=1;
 851   9                                                              }
 852   8                                                              if(y<64){
 853   9                                                              lcd_write_command(0xb8|x);
 854   9                                                              lcd_write_command(0x40|y);
 855   9                                                              if(flag){
 856  10                                                                      y+=64;
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 15  

 857  10                                                              }
 858   9                                                              y-=20+7*i;
 859   9                                                              x-=6;
 860   9                                                              lcd_write_data(press_start[y+x*6+i*12]);
 861   9                                                              }
 862   8                                                      }       
 863   7                                              }
 864   6                                      }
 865   5                              }
 866   4                              }
 867   3                      }
 868   2              }else if(game_status==6){
 869   2                      //start music
 870   2                      LS1=level_music;
 871   2                      //show level
 872   2                      //show life
 873   2                      if(frame_finish==0){
 874   3                              number_frame=0;
 875   3                      }
 876   2                      max_number_frame=30;
 877   2                      if(number_frame<max_number_frame){
 878   3                              if(frame_finish==0){
 879   4                                      show_level(level);
 880   4                                      frame_finish=1;
 881   4                              }
 882   3                      }else{
 883   3                              clear_low_screen();
 884   3                              game_status=3;
 885   3                              frame_finish=0;
 886   3                      }
 887   2              }else if(game_status==3){
 888   2                      //show life
 889   2                      if(frame_finish==0){
 890   3                              number_frame=0;
 891   3                      }
 892   2                      max_number_frame=30;
 893   2                      if(number_frame<max_number_frame){
 894   3                              if(frame_finish==0){
 895   4                                      show_life(life);
 896   4                                      frame_finish=1;
 897   4                              }
 898   3                      }else{
 899   3                              clear_low_screen();
 900   3                              init_ball();
 901   3                              init_bar();
 902   3                              game_status=1;
 903   3                              frame_finish=0;
 904   3                      }
 905   2              }else{
 906   2              //check block
 907   2              check_block();
 908   2              //draw bar
 909   2              if(game_status==1){
 910   3                      //continuous status
 911   3                      draw_bar();
 912   3                      draw_ball();
 913   3              }else if(game_status==0){
 914   3                      //end status
 915   3                      if(life==0){
 916   4                              //init level
 917   4                              level=1;
 918   4                              //die information
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 16  

 919   4                               //show life
 920   4                              if(frame_finish==0){
 921   5                                      number_frame=0;
 922   5                              }
 923   4                              if(number_frame<30){
 924   5                                      if(frame_finish==0){
 925   6                                              show_life(life);
 926   6                                              frame_finish=1;
 927   6                                      }
 928   5                              }else if(number_frame==30){
 929   5                                      //show "DIE!"
 930   5                                      first_page();
 931   5                                      for(i=0;i<4;i++){
 932   6                                              for(y=0;y<12;y++){
 933   7                                                      for(x=0;x<3;x++){
 934   8                                                              flag=0;
 935   8                                                              y+=30+20*i;
 936   8                                                              x+=1;
 937   8                                                              if(y<64){
 938   9                                                                      choose_screen(1);
 939   9                                                              }else{
 940   9                                                                      choose_screen(2);
 941   9                                                                      y-=64;
 942   9                                                                      flag=1;
 943   9                                                              }
 944   8                                                              lcd_write_command(0xb8|x);
 945   8                                                              lcd_write_command(0x40|y);
 946   8                                                              if(flag){
 947   9                                                                      y+=64;
 948   9                                                              }
 949   8                                                              y-=30+20*i;
 950   8                                                              x-=1;
 951   8                                                              lcd_write_data(die[y+x*12+i*36]);
 952   8                                                      }       
 953   7                                              }       
 954   6                                      }
 955   5                              }else if(number_frame>30){
 956   5                                      //check button
 957   5                                      start=1;
 958   5                                      if(start==0){
 959   6                                              first_page();
 960   6                                              game_status=4;
 961   6                                              frame_finish=0;
 962   6                                      }else{
 963   6                                      //flashing
 964   6                                              if(number_frame>50){
 965   7                                                      number_frame=31;
 966   7                                              }else if(number_frame>40 && number_frame<50){
 967   7                                                      choose_screen(0);
 968   7                                                      for(x=6;x<8;x++){
 969   8                                                              for(y=0;y<64;y++){
 970   9                                                                      lcd_write_command(0xb8|x);
 971   9                                                                      lcd_write_command(0x40|y);
 972   9                                                                      lcd_write_data(0x00);
 973   9                                                              }
 974   8                                                      }
 975   7                                              }else if(number_frame<40){
 976   7                                                      for(i=0;i<11;i++){
 977   8                                                              for(y=0;y<6;y++){
 978   9                                                                      for(x=0;x<2;x++){
 979  10                                                                              flag=0;
 980  10                                                                              y+=20+7*i;
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 17  

 981  10                                                                              x+=6;
 982  10                                                                              if(y<64){
 983  11                                                                                      choose_screen(1);
 984  11                                                                              }else{
 985  11                                                                                      choose_screen(2);
 986  11                                                                                      y-=64;
 987  11                                                                                      flag=1;
 988  11                                                                              }
 989  10                                                                              if(y<64){
 990  11                                                                                      lcd_write_command(0xb8|x);
 991  11                                                                                      lcd_write_command(0x40|y);
 992  11                                                                              if(flag){
 993  12                                                                                      y+=64;
 994  12                                                                              }
 995  11                                                                              y-=20+7*i;
 996  11                                                                              x-=6;
 997  11                                                                              lcd_write_data(press_start[y+x*6+i*12]);
 998  11                                                                              }
 999  10                                                                      }       
1000   9                                                              }
1001   8                                                      }
1002   7                                              }
1003   6                                      }
1004   5                              }
1005   4                      }else{
1006   4                              //show life
1007   4                              if(frame_finish==0){
1008   5                                      number_frame=0;
1009   5                                      life-=1;
1010   5                              }
1011   4                              max_number_frame=30;
1012   4                              if(number_frame<max_number_frame){
1013   5                                      if(frame_finish==0){
1014   6                                              show_life(life);
1015   6                                              frame_finish=1;
1016   6                                      }
1017   5                              }else{
1018   5                                      clear_low_screen();
1019   5                                      init_ball();
1020   5                                      init_bar();
1021   5                                      game_status=1;
1022   5                                      frame_finish=0;
1023   5                              }
1024   4                      }
1025   3              }else if(game_status==2){
1026   3                      //win status
1027   3                      //"WIN!"
1028   3                      if(frame_finish==0){
1029   4                              frame_finish=1;
1030   4                              number_frame=0;
1031   4                              first_page();
1032   4                              for(i=0;i<4;i++){
1033   5                                      for(y=0;y<12;y++){
1034   6                                              for(x=0;x<3;x++){
1035   7                                                      flag=0;
1036   7                                                      y+=30+20*i;
1037   7                                                      x+=1;
1038   7                                                      if(y<64){
1039   8                                                              choose_screen(1);
1040   8                                                      }else{
1041   8                                                              choose_screen(2);
1042   8                                                              y-=64;
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 18  

1043   8                                                              flag=1;
1044   8                                                      }
1045   7                                                      lcd_write_command(0xb8|x);
1046   7                                                      lcd_write_command(0x40|y);
1047   7                                                      if(flag){
1048   8                                                              y+=64;
1049   8                                                      }
1050   7                                                      y-=30+20*i;
1051   7                                                      x-=1;
1052   7                                                      lcd_write_data(win[y+x*12+i*36]);
1053   7                                              }       
1054   6                                      }
1055   5                              }
1056   4                      }else{
1057   4                              //check button
1058   4                              start=1;
1059   4                              if(start==0){
1060   5                                      first_page();
1061   5                                      if(level<3){
1062   6                                              level++;
1063   6                                              draw_block();
1064   6                                              game_status=6;
1065   6                                              
1066   6                                      }else{
1067   6                                              level=1;
1068   6                                              game_status=4;
1069   6                                      }
1070   5                                      frame_finish=0;
1071   5                              }else{
1072   5                              //flashing
1073   5                              if(number_frame>20){
1074   6                                      number_frame=0;
1075   6                              }else if(number_frame>10 && number_frame<20){
1076   6                                      choose_screen(0);
1077   6                                      for(x=6;x<8;x++){
1078   7                                              for(y=0;y<64;y++){
1079   8                                                      lcd_write_command(0xb8|x);
1080   8                                                      lcd_write_command(0x40|y);
1081   8                                                      lcd_write_data(0x00);
1082   8                                              }
1083   7                                      }
1084   6                              }else if(number_frame<30){
1085   6                                      for(i=0;i<11;i++){
1086   7                                              for(y=0;y<6;y++){
1087   8                                                      for(x=0;x<2;x++){
1088   9                                                              flag=0;
1089   9                                                              y+=20+7*i;
1090   9                                                              x+=6;
1091   9                                                              if(y<64){
1092  10                                                                      choose_screen(1);
1093  10                                                              }else{
1094  10                                                                      choose_screen(2);
1095  10                                                                      y-=64;
1096  10                                                                      flag=1;
1097  10                                                              }
1098   9                                                              if(y<64){
1099  10                                                              lcd_write_command(0xb8|x);
1100  10                                                              lcd_write_command(0x40|y);
1101  10                                                              if(flag){
1102  11                                                                      y+=64;
1103  11                                                              }
1104  10                                                              y-=20+7*i;
C51 COMPILER V8.02   GAME                                                                  11/10/2013 00:27:45 PAGE 19  

1105  10                                                              x-=6;
1106  10                                                              lcd_write_data(press_start[y+x*6+i*12]);
1107  10                                                              }
1108   9                                                      }       
1109   8                                              }
1110   7                                      }
1111   6                              }
1112   5                              }       
1113   4                      }
1114   3              }
1115   2              }
1116   1      }
1117          
1118          //initial fiunction
1119          //init the game
1120          void game_init(){
1121   1              lcd_init();
1122   1              first_page();
1123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3915    ----
   CONSTANT SIZE    =   2154    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
