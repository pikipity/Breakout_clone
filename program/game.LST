C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN game.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE game.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "game.h"
   3          #include "lcd12864.h"
   4          
   5          //variables of game
   6          unsigned char game_status=4;//2: win  1: continue. 0: end  3: firest time show life 4: show title  5: wait
             -ing for start  6:show level
   7                                                                  //7: enter eat longer 8: eat clear 9: eat win  10:eat die
   8                                                                  //11: quit eat longer
   9          unsigned char life=5;
  10          unsigned char number_frame=0;
  11          unsigned char max_number_frame=0;
  12          bit frame_finish=0;
  13          bit frame_begin=0;
  14          unsigned char level=1;//total 3 level
  15          
  16          //win character
  17          unsigned char code win[]={
  18                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -W-
  19                  0x04,0xFC,0xFC,0x04,0x00,0x03,0xFF,0x80,
  20                  0x00,0xFC,0xFC,0x00,0x80,0xFF,0x03,0x00,
  21                  0x00,0x00,0x03,0x3F,0x3C,0x03,0x03,0x3C,
  22                  0x3F,0x03,0x00,0x00,
  23                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  24                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  25                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  26                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  27                  0x20,0x20,0x20,0x00,
  28                  0x04,0xFC,0xFC,0xE0,0x00,0x00,0x00,0x04,  // -N-
  29                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x01,
  30                  0x07,0x1C,0x70,0xC0,0xFF,0xFF,0x00,0x00,
  31                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x03,
  32                  0x0F,0x3F,0x00,0x00,
  33                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  34                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  35                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  36                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  37                  0x00,0x00,0x00,0x00};
  38          unsigned char code die[]={
  39                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -D-
  40                  0x70,0xE0,0x80,0x00,0x00,0xFF,0xFF,0x00,
  41                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  42                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x30,0x18,
  43                  0x0E,0x07,0x01,0x00,
  44                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  45                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  46                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  47                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  48                  0x20,0x20,0x20,0x00,
  49                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  50                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  51                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  52                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  53                  0x30,0x38,0x3E,0x00,
  54                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 2   

  55                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  56                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  57                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  58                  0x00,0x00,0x00,0x00};
  59          unsigned char code lifefont[]={
  60                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  61                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  62                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  64                  0x30,0x38,0x3E,0x00,
  65                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  66                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  67                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  68                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  69                  0x20,0x20,0x20,0x00,
  70                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -F-
  71                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  72                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  73                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x00,
  74                  0x00,0x00,0x00,0x00,
  75                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  76                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  77                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  78                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  79                  0x30,0x38,0x3E,0x00,
  80                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
  81                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
  82                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
  83                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  84                  0x00,0x00,0x00,0x00};
  85          unsigned char code levelfont[]={
  86                  //level=
  87                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  88                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  89                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  90                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  91                  0x30,0x38,0x3E,0x00,
  92                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  93                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  94                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  95                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  96                  0x30,0x38,0x3E,0x00,
  97                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -V-
  98                  0xFC,0xFC,0x04,0x00,0x00,0x00,0x3F,0xFF,
  99                  0xC0,0x00,0xC0,0xFF,0x3F,0x00,0x00,0x00,
 100                  0x00,0x00,0x00,0x03,0x1F,0x3C,0x1F,0x03,
 101                  0x00,0x00,0x00,0x00,
 102                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 103                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 104                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 105                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 106                  0x30,0x38,0x3E,0x00,
 107                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
 108                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 109                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 110                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 111                  0x30,0x38,0x3E,0x00,
 112                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
 113                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
 114                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
 115                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116                  0x00,0x00,0x00,0x00};
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 3   

 117          unsigned char code number[]={
 118                  0x00,0xC0,0xF0,0x38,0x0C,0x04,0x0C,0x38,  // -0-
 119                  0xF0,0xC0,0x00,0x00,0xFF,0xFF,0x00,0x00,
 120                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 121                  0x00,0x03,0x0F,0x1C,0x30,0x20,0x30,0x1C,
 122                  0x0F,0x03,0x00,0x00,
 123                  0x00,0x10,0x10,0x18,0x18,0xFC,0xFC,0x00,  // -1-
 124                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 125                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 126                  0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,0x20,
 127                  0x20,0x20,0x00,0x00,
 128                  0x60,0xF0,0xF8,0x0C,0x04,0x04,0x04,0x0C,  // -2-
 129                  0x18,0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,
 130                  0xC0,0x60,0x30,0x18,0x0E,0x07,0x01,0x00,
 131                  0x38,0x3E,0x3F,0x33,0x30,0x30,0x30,0x30,
 132                  0x30,0x30,0x3C,0x00,
 133                  0x00,0x30,0x78,0x78,0x0C,0x04,0x04,0x0C,  // -3-
 134                  0x18,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,
 135                  0x08,0x08,0x1C,0x16,0x33,0xE1,0xC0,0x00,
 136                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 137                  0x18,0x1F,0x0F,0x00,
 138                  0x00,0x00,0x00,0x00,0x80,0xE0,0x38,0xFC,  // -4-
 139                  0xFC,0x00,0x00,0x00,0x80,0xE0,0x38,0x0E,
 140                  0x03,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,
 141                  0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x3F,
 142                  0x3F,0x21,0x21,0x01,
 143                  0x00,0xFC,0xFC,0x0C,0x0C,0x0C,0x0C,0x0C,  // -5-
 144                  0x0C,0x0C,0x00,0x00,0x00,0x1F,0x0F,0x08,
 145                  0x04,0x02,0x02,0x06,0x1C,0xF8,0xE0,0x00,
 146                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 147                  0x1C,0x0F,0x03,0x00};
 148          
 149          unsigned char code title[]={
 150          //Breakout
 151                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -B-
 152                  0xF0,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 153                  0x08,0x08,0x1C,0x16,0x73,0xE1,0x80,0x00,
 154                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x30,
 155                  0x1C,0x0F,0x03,0x00,
 156                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -R-
 157                  0xF8,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 158                  0x38,0xF8,0xCC,0x06,0x07,0x01,0x00,0x00,
 159                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x03,0x2F,
 160                  0x3C,0x30,0x20,0x00,
 161                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 162                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 163                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 164                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 165                  0x30,0x38,0x3E,0x00,
 166                  0x00,0x00,0x00,0x00,0xF0,0x0C,0x3C,0xF0,  // -A-
 167                  0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,
 168                  0x43,0x40,0x40,0x43,0xFF,0xF0,0x00,0x00,
 169                  0x20,0x3E,0x3F,0x20,0x00,0x00,0x00,0x00,
 170                  0x20,0x3F,0x3E,0x20,
 171                  0x04,0xFC,0xFC,0x04,0x00,0x80,0xE4,0x7C,  // -K-
 172                  0x1C,0x04,0x04,0x00,0x00,0xFF,0xFF,0x78,
 173                  0x1E,0x7F,0xE1,0x80,0x00,0x00,0x00,0x00,
 174                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x01,0x27,
 175                  0x3E,0x38,0x20,0x20,
 176                  0xE0,0xF0,0x18,0x0C,0x04,0x04,0x04,0x0C,  // -O-
 177                  0x18,0xF0,0xE0,0x00,0xFF,0xFF,0x00,0x00,
 178                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 4   

 179                  0x07,0x0F,0x18,0x30,0x20,0x20,0x20,0x30,
 180                  0x18,0x0F,0x07,0x00,
 181                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -U-
 182                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x00,
 183                  0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 184                  0x00,0x0F,0x1F,0x30,0x20,0x20,0x20,0x30,
 185                  0x1F,0x0F,0x00,0x00,
 186                  0x7C,0x1C,0x0C,0x04,0x04,0xFC,0xFC,0x04,  // -T-
 187                  0x04,0x0C,0x1C,0x7C,0x00,0x00,0x00,0x00,
 188                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 189                  0x00,0x00,0x00,0x20,0x20,0x3F,0x3F,0x20,
 190                  0x20,0x00,0x00,0x00,};
 191          unsigned char code clone[]={
 192                  0x00,0xFC,0x02,0x02,0x02,0x86,0x00,0x00,  // -C-
 193                  0x01,0x01,0x01,0x00,
 194                  0x00,0x02,0xFE,0x02,0x00,0xC0,0x00,0x01,  // -L-
 195                  0x01,0x01,0x01,0x01,
 196                  0x00,0xFC,0x02,0x02,0x02,0xFC,0x00,0x00,  // -O-
 197                  0x01,0x01,0x01,0x00,
 198                  0x02,0xFE,0x0E,0x70,0x82,0xFE,0x01,0x01,  // -N-
 199                  0x01,0x00,0x01,0x01,
 200                  0x02,0xFE,0x12,0x3A,0x02,0x86,0x01,0x01,  // -E-
 201                  0x01,0x01,0x01,0x01};
 202          unsigned char code press_start[]={
 203                  //press_start
 204                  0x00,0x02,0xFE,0x22,0x22,0x1C,0x00,0x01,  // -P-
 205                  0x01,0x01,0x00,0x00,
 206                  0x00,0x08,0xF8,0x10,0x08,0x08,0x00,0x01,  // -r-
 207                  0x01,0x01,0x01,0x01,
 208                  0x00,0xF0,0x28,0x28,0x28,0x30,0x00,0x00,  // -e-
 209                  0x01,0x01,0x01,0x01,
 210                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 211                  0x01,0x01,0x01,0x00,
 212                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 213                  0x01,0x01,0x01,0x00,
 214                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
 215                  0x00,0x00,0x00,0x00,
 216                  0x00,0x8C,0x92,0x12,0x14,0xE6,0x00,0x01,  // -S-
 217                  0x00,0x01,0x01,0x00,
 218                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 219                  0x01,0x01,0x01,0x00,
 220                  0x00,0xC0,0x7A,0x46,0x78,0xC0,0x01,0x01,  // -A-
 221                  0x01,0x00,0x01,0x01,
 222                  0x02,0xFE,0x22,0x22,0x62,0x9C,0x01,0x01,  // -R-
 223                  0x01,0x00,0x00,0x00,
 224                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 225                  0x01,0x01,0x01,0x00};
 226          
 227          unsigned char code prop[]={
 228          //make bar longer (L): 1
 229          0xFF,0x81,0x81,0xBF,0xBF,0xBF,0xBF,0xFF,
 230          //clear one area (C): 2
 231          0xFF,0xC3,0xBD,0xBD,0xBD,0xBD,0xDB,0xFF,
 232          //Win (W): 3
 233          0xFF,0xC1,0xBF,0xC3,0xC3,0xBF,0xC1,0xFF,
 234          //Die (D): 4
 235          0xFF,0x81,0x81,0xBD,0xBD,0xDB,0xE7,0xFF
 236          };
 237          
 238          unsigned char prop_exist=0;
 239          bit longer=0;
 240          unsigned char longer_time=0;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 5   

 241          unsigned char prop_x=0;
 242          unsigned char prop_y=0;
 243          
 244          unsigned char prop_frame=0;
 245          
 246          void random_prop(){
 247   1              unsigned char prop_num,x,y,i;
 248   1              bit x_change;
 249   1              if(longer){
 250   2                      if(longer_time<255){
 251   3                              longer_time++;
 252   3                      }else{
 253   3                              longer=0;
 254   3                              longer_time=0;
 255   3                              game_status=11;
 256   3                      }
 257   2              }
 258   1              if(prop_exist==0){
 259   2                      prop_num=255-TL0;
 260   2                      switch(prop_num){
 261   3                              case 1:
 262   3                                      prop_exist=1;
 263   3                                      y=TL0;
 264   3                                      x=255-y;
 265   3                                      y=(255-y)/5+33;
 266   3                                      prop_x=x;
 267   3                                      prop_y=y;
 268   3                                      y=y/8;
 269   3                                      for(i=0;i<8;i++){
 270   4                                              if(x+i<64){
 271   5                                                      choose_screen(1);
 272   5                                                      x_change=0;
 273   5                                              }else{
 274   5                                                      x-=64;
 275   5                                                      choose_screen(2);
 276   5                                                      x_change=1;
 277   5                                              }
 278   4                                              lcd_write_command(0x40|(x+i));
 279   4                                              lcd_write_command(0xb8|y);
 280   4                                              lcd_write_data(prop[i]);
 281   4                                              if(x_change){
 282   5                                                      x+=64;
 283   5                                              }
 284   4                                      }
 285   3                                      break;
 286   3                              case 50:
 287   3                                      prop_exist=2;
 288   3                                      y=TL0;
 289   3                                      x=255-y;
 290   3                                      y=(255-y)/5+33;
 291   3                                      prop_x=x;
 292   3                                      prop_y=y;
 293   3                                      y=y/8;
 294   3                                      for(i=0;i<8;i++){
 295   4                                              if(x+i<64){
 296   5                                                      choose_screen(1);
 297   5                                                      x_change=0;
 298   5                                              }else{
 299   5                                                      x-=64;
 300   5                                                      choose_screen(2);
 301   5                                                      x_change=1;
 302   5                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 6   

 303   4                                              lcd_write_command(0x40|(x+i));
 304   4                                              lcd_write_command(0xb8|y);
 305   4                                              lcd_write_data(prop[i+8]);
 306   4                                              if(x_change){
 307   5                                                      x+=64;
 308   5                                              }
 309   4                                      }
 310   3                                      break;
 311   3                              case 100:
 312   3                                      prop_exist=3;
 313   3                                      y=TL0;
 314   3                                      x=255-y;
 315   3                                      y=(255-y)/5+33;
 316   3                                      prop_x=x;
 317   3                                      prop_y=y;
 318   3                                      y=y/8;
 319   3                                      for(i=0;i<8;i++){
 320   4                                              if(x+i<64){
 321   5                                                      choose_screen(1);
 322   5                                                      x_change=0;
 323   5                                              }else{
 324   5                                                      x-=64;
 325   5                                                      choose_screen(2);
 326   5                                                      x_change=1;
 327   5                                              }
 328   4                                              lcd_write_command(0x40|(x+i));
 329   4                                              lcd_write_command(0xb8|y);
 330   4                                              lcd_write_data(prop[i+16]);
 331   4                                              if(x_change){
 332   5                                                      x+=64;
 333   5                                              }
 334   4                                      }
 335   3                                      break;
 336   3                              case 20:
 337   3                                      prop_exist=4;
 338   3                                      y=TL0;
 339   3                                      x=255-y;
 340   3                                      y=(255-y)/5+33;
 341   3                                      prop_x=x;
 342   3                                      prop_y=y;
 343   3                                      y=y/8;
 344   3                                      for(i=0;i<8;i++){
 345   4                                              if(x+i<64){
 346   5                                                      choose_screen(1);
 347   5                                                      x_change=0;
 348   5                                              }else{
 349   5                                                      x-=64;
 350   5                                                      choose_screen(2);
 351   5                                                      x_change=1;
 352   5                                              }
 353   4                                              lcd_write_command(0x40|(x+i));
 354   4                                              lcd_write_command(0xb8|y);
 355   4                                              lcd_write_data(prop[i+24]);
 356   4                                              if(x_change){
 357   5                                                      x+=64;
 358   5                                              }
 359   4                                      }
 360   3                                      break;
 361   3                              default:break;
 362   3                      }
 363   2              }else{
 364   2                      if(prop_frame>100){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 7   

 365   3                              x=prop_x;
 366   3                              y=prop_y;
 367   3                              y=y/8;
 368   3                              for(i=0;i<8;i++){
 369   4                                              if(x+i<64){
 370   5                                                      choose_screen(1);
 371   5                                                      x_change=0;
 372   5                                              }else{
 373   5                                                      x-=64;
 374   5                                                      choose_screen(2);
 375   5                                                      x_change=1;
 376   5                                              }
 377   4                                              lcd_write_command(0x40|(x+i));
 378   4                                              lcd_write_command(0xb8|y);
 379   4                                              lcd_write_data(0x00);
 380   4                                              if(x_change){
 381   5                                                      x+=64;
 382   5                                              }
 383   4                              }
 384   3                              prop_frame=0;
 385   3                              prop_exist=0;
 386   3                      }else{
 387   3                              prop_frame++;
 388   3                      }
 389   2              }
 390   1      }
 391          
 392          void clear_low_screen(){
 393   1              unsigned char x,y;
 394   1              choose_screen(0);
 395   1              for(x=4;x<8;x++){
 396   2                      for(y=0;y<64;y++){
 397   3                              lcd_write_command(0xb8|x);
 398   3                              lcd_write_command(0x40|y);
 399   3                              lcd_write_data(0x00);
 400   3                      }
 401   2              }
 402   1      }
 403          void show_life(unsigned char life){
 404   1              unsigned char x,y,i;
 405   1              bit flag;
 406   1              clear_low_screen();
 407   1                      for(i=0;i<6;i++){
 408   2                              for(y=0;y<12;y++){
 409   3                                      for(x=0;x<3;x++){
 410   4                                              flag=0;
 411   4                                              y+=20+15*i;
 412   4                                              x+=4;
 413   4                                              if(y<64){
 414   5                                                      choose_screen(1);
 415   5                                              }else{
 416   5                                                      choose_screen(2);
 417   5                                                      y-=64;
 418   5                                                      flag=1;
 419   5                                              }
 420   4                                              lcd_write_command(0xb8|x);
 421   4                                              lcd_write_command(0x40|y);
 422   4                                              if(flag){
 423   5                                                      y+=64;
 424   5                                              }
 425   4                                              y-=20+15*i;
 426   4                                              x-=4;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 8   

 427   4                                              if(i<5){
 428   5                                                      lcd_write_data(lifefont[y+x*12+i*36]);
 429   5                                              }else{
 430   5                                                      lcd_write_data(number[y+12*x+life*36]);
 431   5                                              }
 432   4                                      }       
 433   3                              }
 434   2                      }       
 435   1      }
 436          void show_level(unsigned char level){
 437   1              unsigned char x,y,i;
 438   1              bit flag;
 439   1              clear_low_screen();
 440   1                      for(i=0;i<7;i++){
 441   2                              for(y=0;y<12;y++){
 442   3                                      for(x=0;x<3;x++){
 443   4                                              flag=0;
 444   4                                              y+=20+15*i;
 445   4                                              x+=4;
 446   4                                              if(y<64){
 447   5                                                      choose_screen(1);
 448   5                                              }else{
 449   5                                                      choose_screen(2);
 450   5                                                      y-=64;
 451   5                                                      flag=1;
 452   5                                              }
 453   4                                              lcd_write_command(0xb8|x);
 454   4                                              lcd_write_command(0x40|y);
 455   4                                              if(flag){
 456   5                                                      y+=64;
 457   5                                              }
 458   4                                              y-=20+15*i;
 459   4                                              x-=4;
 460   4                                              if(i<6){
 461   5                                                      lcd_write_data(levelfont[y+x*12+i*36]);
 462   5                                              }else{
 463   5                                                      lcd_write_data(number[y+12*x+level*36]);
 464   5                                              }
 465   4                                      }       
 466   3                              }
 467   2                      }       
 468   1      }
 469          
 470          
 471          //variables of block
 472          //block1 for level 1
 473          /*   for test of win 
 474          unsigned char code block1[]={
 475          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 476          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 477          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 480          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 481          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 482          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 484          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 485          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 488          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 9   

 489          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 490          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 491          };
 492          */
 493          ///*
 494          unsigned char code block1[]={
 495          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 496          0xFF,0xF7,0xEF,0xEF,0xDF,0xDF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 497          0xFF,0xFF,0xFF,0x7F,0x9F,0xE7,0xFB,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 498          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 499          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFD,0xFD,
 500          0x0D,0xED,0xED,0xED,0xED,0xED,0x6D,0x6D,0x2C,0x2D,0xED,0xED,0xED,0xED,0xED,0xED,
 501          0xED,0xED,0x2D,0x2C,0x6D,0x6D,0x6D,0xED,0xED,0xED,0xED,0xED,0x0D,0xFD,0xFD,0x01,
 502          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 503          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,
 504          0x80,0xBF,0xBF,0xBF,0xBC,0xBC,0xBE,0xBE,0xB3,0xAD,0xAF,0xB7,0xBB,0xB9,0xB7,0xAF,
 505          0xAF,0xB5,0xBB,0xBF,0xBE,0xBE,0xBE,0xBF,0xBF,0xBF,0xBF,0xBF,0x80,0xFF,0xFF,0x00,
 506          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 507          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFD,0xFD,
 508          0xFD,0xFD,0xCD,0xC1,0xF1,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
 509          0xFD,0xFD,0xFD,0xFD,0xF1,0xC1,0xCD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFC,
 510          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 511          };
 512          //*/
 513          //block2 for level 2
 514          /*   for test of win 
 515          unsigned char code block2[]={
 516          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 517          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 518          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 519          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 520          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 521          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 522          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 523          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 524          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 525          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 526          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 527          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 528          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 529          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 530          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 531          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 532          };
 533          */
 534          ///*
 535          unsigned char code block2[]={
 536          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 537          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,
 538          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 539          0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 540          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 541          0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,0x07,0x01,0x06,0x03,0x01,0x01,0x01,0x01,
 542          0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,
 543          0x07,0x01,0x06,0x03,0x01,0x01,0x71,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 544          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 545          0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,
 546          0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,
 547          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 548          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 549          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 550          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 10  

 551          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 552          };
 553          //*/
 554          //block3 for level 3
 555          /*   for test of win 
 556          unsigned char code block3[]={
 557          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 558          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 559          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 560          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 561          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 562          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 563          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 564          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 565          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 566          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 567          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 568          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 569          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 570          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 571          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 572          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 573          };
 574          */
 575          ///*
 576          unsigned char code block3[]={
 577          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 578          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 579          0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 580          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 581          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x1F,
 582          0x4F,0xE7,0xF3,0xFB,0xF9,0xFD,0xFD,0xFC,0xFE,0xBE,0x1E,0x0F,0x07,0x03,0x01,0x01,
 583          0x40,0xE0,0xF0,0xE0,0x41,0x01,0x03,0x07,0x0E,0x1E,0xBE,0xFC,0xFD,0xFD,0xF9,0xFB,
 584          0xF3,0xE7,0x4F,0x1F,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 585          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 586          0xFE,0xFC,0xF9,0xFB,0xF3,0xF7,0xF7,0xE7,0xEF,0xEF,0xCF,0xDE,0xDC,0xD8,0xD0,0xD0,
 587          0xC0,0xC0,0xC1,0xC0,0xD0,0xD0,0xD8,0xDC,0xCE,0xEF,0xEF,0xE7,0xF7,0xF7,0xF3,0xFB,
 588          0xF9,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 589          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 590          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 591          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 592          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 593          };
 594          //*/
 595          
 596          
 597          //functions of block
 598          //draw block at the begining
 599          void draw_block(){
 600   1              unsigned char x,y;
 601   1              choose_screen(0);
 602   1              for(x=0;x<4;x++){
 603   2                      for(y=0;y<64;y++){
 604   3                              lcd_write_command(0xb8|x);
 605   3                              lcd_write_command(0x40|y);
 606   3                              switch(level){
 607   4                                      case 1: lcd_write_data(block1[x*64+y]);break;
 608   4                                      case 2: lcd_write_data(block2[x*64+y]);break;
 609   4                                      case 3: lcd_write_data(block3[x*64+y]);break;
 610   4                                      default: lcd_write_data(block1[x*64+y]);break;
 611   4                              }
 612   3                      }       
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 11  

 613   2              }
 614   1      }
 615          //check block
 616          void check_block(){
 617   1              unsigned char i,x,y,rdata;
 618   1              unsigned char now_game_status=game_status;
 619   1              game_status=2;
 620   1              for(i=1;i<3;i++){
 621   2                      choose_screen(i);
 622   2                      for(x=0;x<4;x++){
 623   3                              for(y=0;y<64;y++){
 624   4                                      lcd_write_command(0xb8|x);
 625   4                                      lcd_write_command(0x40|y);
 626   4                                      rdata=lcd_read_data();
 627   4                                      if(rdata!=0x00){
 628   5                                              game_status=now_game_status;
 629   5                                              break;
 630   5                                      }
 631   4                              }
 632   3                              if(game_status==now_game_status){
 633   4                                      break;
 634   4                              }
 635   3                      }
 636   2                      if(game_status==now_game_status){
 637   3                              break;
 638   3                      }
 639   2              }
 640   1      }
 641          
 642          //variables of bar
 643          //location of the most left point of bar
 644          unsigned char code o_bar_sit[]={0,63};
 645          unsigned char bar_sit[2];//(x,y)
 646          unsigned char temp_bar_sit_x;
 647          //bar speed
 648          unsigned char o_bar_speed;
 649          unsigned char bar_speed;
 650          //bar length
 651          unsigned char o_bar_len;
 652          unsigned char bar_len;
 653          //bar direction
 654          unsigned char code o_bar_direction=1;
 655          unsigned char bar_direction;//0:left, 1:right
 656          
 657          //functions for bar
 658          //button
 659          void handle_button(){
 660   1              if(leftB==0){
 661   2                      bar_direction=0;
 662   2              }
 663   1              if(rightB==0){
 664   2                      bar_direction=1;
 665   2              }
 666   1              if(leftB==1 && rightB==1){
 667   2                      bar_direction=2;
 668   2              }
 669   1      }
 670          //init bar
 671          void init_bar(){
 672   1              unsigned char i;
 673   1              switch(level){
 674   2                      case 1: o_bar_speed=1;o_bar_len=24;break;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 12  

 675   2                      case 2: o_bar_speed=2;o_bar_len=20;break;
 676   2                      case 3: o_bar_speed=3;o_bar_len=12;break;
 677   2                      default:o_bar_speed=1;o_bar_len=24;break;
 678   2              }
 679   1              bar_sit[0]=o_bar_sit[0];
 680   1              bar_sit[1]=o_bar_sit[1];
 681   1              bar_speed=o_bar_speed;
 682   1              bar_len=o_bar_len;
 683   1              bar_direction=o_bar_direction;
 684   1              for(i=0;i<bar_len;i++){
 685   2                      set_dot(bar_sit[0]+i,bar_sit[1]);
 686   2              }
 687   1      }
 688          //draw bar
 689          void draw_bar(){
 690   1              unsigned char i;
 691   1              if(bar_direction==1){
 692   2                      //go right
 693   2                      if(bar_sit[0]<=128-bar_len-bar_speed && bar_len+bar_speed<=128){
 694   3                              for(i=1;i<bar_speed+1;i++){
 695   4                                      //clear preivous bar
 696   4                                      clear_dot(bar_sit[0]+i-1,bar_sit[1]);
 697   4                                      //draw new bar
 698   4                                      set_dot(bar_sit[0]+bar_len-1+i,bar_sit[1]);
 699   4                              }
 700   3                              //recalculate bar location
 701   3                              bar_sit[0]+=bar_speed;
 702   3                      }
 703   2              }else if(bar_direction==0){
 704   2                      //go left
 705   2                      if(bar_sit[0]>=0+bar_speed){
 706   3                              for(i=1;i<bar_speed+1;i++){
 707   4                                      //clear preivous bar
 708   4                                      clear_dot(bar_sit[0]+bar_len-i,bar_sit[1]);
 709   4                                      //draw new bar
 710   4                                      set_dot(bar_sit[0]-i,bar_sit[1]);
 711   4                              }
 712   3                              //recalculate bar location
 713   3                              bar_sit[0]-=bar_speed;
 714   3                      }
 715   2              }
 716   1      }
 717          
 718          //variables of ball
 719          //location of ball
 720          unsigned char code o_ball_sit[]={7,62};//(x,y)
 721          unsigned char ball_sit[2];//(x,y)
 722          //ball speed
 723          unsigned char code o_ball_speed[]={0,1};
 724          unsigned char ball_speed[2];//(x,y)
 725          //ball direction
 726          bit o_ball_direction_x=0;
 727          bit ball_direction_x;//x: 0->left, 1->right.
 728          bit o_ball_direction_y=0;  
 729          bit ball_direction_y;//y: 0->down, 1->up.
 730          
 731          //functions for ball
 732          //init ball
 733          void init_ball(){
 734   1              ball_sit[0]=o_ball_sit[0];
 735   1              ball_sit[1]=o_ball_sit[1];
 736   1              ball_speed[0]=o_ball_speed[0];
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 13  

 737   1              ball_speed[1]=o_ball_speed[1];
 738   1              ball_direction_x=o_ball_direction_x;
 739   1              ball_direction_y=o_ball_direction_y;
 740   1              set_dot(ball_sit[0],ball_sit[1]);
 741   1              set_dot(ball_sit[0],ball_sit[1]-1);
 742   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 743   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);   
 744   1      }
 745          //clear preview ball
 746          void clear_ball(){
 747   1              clear_dot(ball_sit[0],ball_sit[1]);
 748   1              clear_dot(ball_sit[0]+1,ball_sit[1]);
 749   1              clear_dot(ball_sit[0],ball_sit[1]-1);
 750   1              clear_dot(ball_sit[0]+1,ball_sit[1]-1);
 751   1      }
 752          //calculate now ball
 753          void move_ball(){
 754   1              bit next_dot_y,next_dot_x;
 755   1              unsigned char i;
 756   1              bit x_change;
 757   1              //check whether the direction should be changed
 758   1              LS1=change;
 759   1              if(ball_direction_y){
 760   2                      if(read_dot(ball_sit[0],ball_sit[1]-2) || read_dot(ball_sit[0]+1,ball_sit[1]-2) || (ball_sit[1]-1)==0){
 761   3                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 762   4                                      prop_y=prop_y/8;
 763   4                                      for(i=0;i<8;i++){
 764   5                                                      if(prop_x+i<64){
 765   6                                                              choose_screen(1);
 766   6                                                              x_change=0;
 767   6                                                      }else{
 768   6                                                              prop_x-=64;
 769   6                                                              choose_screen(2);
 770   6                                                              x_change=1;
 771   6                                                      }
 772   5                                                      lcd_write_command(0x40|(prop_x+i));
 773   5                                                      lcd_write_command(0xb8|prop_y);
 774   5                                                      lcd_write_data(0x00);
 775   5                                                      if(x_change){
 776   6                                                              prop_x+=64;
 777   6                                                      }
 778   5                                      }
 779   4                                      prop_y=prop_y*8;
 780   4                                      prop_frame=0;
 781   4                                      switch(prop_exist){
 782   5                                              case 1:longer=1;game_status=7;break;
 783   5                                              case 2:game_status=8;break;
 784   5                                              case 3:game_status=9;break;
 785   5                                              case 4:game_status=10;break;
 786   5                                              default:break;
 787   5                                      }
 788   4                                      prop_exist=0;
 789   4                              }else{
 790   4                                      LS1=do_1;
 791   4                                      if((ball_sit[1]-1)!=0){
 792   5                                              clear_dot(ball_sit[0],ball_sit[1]-2);
 793   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]-2);
 794   5                                              //
 795   5                                              clear_dot(ball_sit[0]-1,ball_sit[1]-2);
 796   5                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
 797   5                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
 798   5                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 14  

 799   5                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
 800   5                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
 801   5                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
 802   5                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
 803   5                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
 804   5                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
 805   5                                              //
 806   5                                              if((ball_sit[1]-2)!=0){
 807   6                                                      clear_dot(ball_sit[0],ball_sit[1]-3);
 808   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-3);
 809   6                                                      //
 810   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-3);
 811   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
 812   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
 813   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
 814   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
 815   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
 816   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
 817   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
 818   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
 819   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
 820   6                                                      
 821   6                                                              if((ball_sit[1]-3)!=0){
 822   7                                                                      clear_dot(ball_sit[0],ball_sit[1]-4);
 823   7                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-4);
 824   7                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-4);
 825   7                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-4);
 826   7                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-4);
 827   7                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-4);
 828   7                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-4);
 829   7                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-4);
 830   7                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-4);
 831   7                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-4);
 832   7                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-4);
 833   7                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-4);
 834   7                                                              
 835   7                                                                      if((ball_sit[1]-4)!=0){
 836   8                                                                              clear_dot(ball_sit[0],ball_sit[1]-5);
 837   8                                                                              clear_dot(ball_sit[0]+1,ball_sit[1]-5);
 838   8                                                                              clear_dot(ball_sit[0]-1,ball_sit[1]-5);
 839   8                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-5);
 840   8                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-5);
 841   8                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-5);
 842   8                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-5);
 843   8                                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-5);
 844   8                                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-5);
 845   8                                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-5);
 846   8                                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-5);
 847   8                                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-5);
 848   8                                                      
 849   8                                                                              if((ball_sit[1]-5)!=0){
 850   9                                                                                      clear_dot(ball_sit[0],ball_sit[1]-6);
 851   9                                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-6);
 852   9                                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-6);
 853   9                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-6);
 854   9                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-6);
 855   9                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-6);
 856   9                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-6);
 857   9                                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-6);
 858   9                                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-6);
 859   9                                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-6);
 860   9                                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-6);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 15  

 861   9                                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-6);
 862   9                                                                              }
 863   8                                                                      }
 864   7                                                              }
 865   6                                              //
 866   6                                              }
 867   5                                      }
 868   4                                      ball_direction_y=~ball_direction_y;
 869   4                              }       
 870   3                      }
 871   2              }else{
 872   2                      if(read_dot(ball_sit[0],ball_sit[1]+1) || read_dot(ball_sit[0]+1,ball_sit[1]+1)){
 873   3                              if(ball_sit[1]!=63){
 874   4                                      if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 875   5                                              prop_y=prop_y/8;
 876   5                                              for(i=0;i<8;i++){
 877   6                                                              if(prop_x+i<64){
 878   7                                                                      choose_screen(1);
 879   7                                                                      x_change=0;
 880   7                                                              }else{
 881   7                                                                      prop_x-=64;
 882   7                                                                      choose_screen(2);
 883   7                                                                      x_change=1;
 884   7                                                              }
 885   6                                                              lcd_write_command(0x40|(prop_x+i));
 886   6                                                              lcd_write_command(0xb8|prop_y);
 887   6                                                              lcd_write_data(0x00);
 888   6                                                              if(x_change){
 889   7                                                                      prop_x+=64;
 890   7                                                              }
 891   6                                              }
 892   5                                              prop_y=prop_y*8;
 893   5                                              prop_frame=0;
 894   5                                              switch(prop_exist){
 895   6                                                      case 1:longer=1;game_status=7;break;
 896   6                                                      case 2:game_status=8;break;
 897   6                                                      case 3:game_status=9;break;
 898   6                                                      case 4:game_status=10;break;
 899   6                                                      default:break;
 900   6                                              }
 901   5                                              prop_exist=0;
 902   5                                      }else{
 903   5                                              LS1=do_1;
 904   5                                              if(ball_sit[1]+1!=bar_sit[1]){
 905   6                                                      clear_dot(ball_sit[0],ball_sit[1]+1);
 906   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+1);
 907   6                                                      //
 908   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+1);
 909   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+1);
 910   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+1);
 911   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+1);
 912   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+1);
 913   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+1);
 914   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+1);
 915   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+1);
 916   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+1);
 917   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+1);
 918   6                                                      //
 919   6                                                      clear_dot(ball_sit[0],ball_sit[1]+2);
 920   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+2);
 921   6                                                      //
 922   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+2);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 16  

 923   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+2);
 924   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+2);
 925   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+2);
 926   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+2);
 927   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+2);
 928   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+2);
 929   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+2);
 930   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+2);
 931   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+2);
 932   6                                                      //
 933   6                                                      clear_dot(ball_sit[0],ball_sit[1]+3);
 934   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+3);
 935   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+3);
 936   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+3);
 937   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+3);
 938   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+3);
 939   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+3);
 940   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+3);
 941   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+3);
 942   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+3);
 943   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+3);
 944   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+3);
 945   6                                                      clear_dot(ball_sit[0],ball_sit[1]+4);
 946   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+4);
 947   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+4);
 948   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+4);
 949   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+4);
 950   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+4);
 951   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+4);
 952   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+4);
 953   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+4);
 954   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+4);
 955   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+4);
 956   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+4);
 957   6                                                      clear_dot(ball_sit[0],ball_sit[1]+5);
 958   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+5);
 959   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+5);
 960   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+5);
 961   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+5);
 962   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+5);
 963   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+5);
 964   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+5);
 965   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+5);
 966   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+5);
 967   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+5);
 968   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+5);
 969   6                                                      //
 970   6                                              }else{
 971   6                                                      LS1=do_2;
 972   6                                                      ball_speed[0]=bar_speed;
 973   6                                                      ball_direction_x=bar_direction;
 974   6                                              }
 975   5                                              ball_direction_y=~ball_direction_y;
 976   5                                      }
 977   4                              }else{
 978   4                                      game_status=0;
 979   4                              }
 980   3                      }
 981   2              }
 982   1              if(game_status==1){
 983   2              if(ball_direction_x){
 984   3                      if(read_dot(ball_sit[0]+2,ball_sit[1]) || read_dot(ball_sit[0]+2,ball_sit[1]-1) || (ball_sit[0]+1)==127)
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 17  

             -{
 985   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 986   5                                      prop_y=prop_y/8;
 987   5                                      for(i=0;i<8;i++){
 988   6                                                      if(prop_x+i<64){
 989   7                                                              choose_screen(1);
 990   7                                                              x_change=0;
 991   7                                                      }else{
 992   7                                                              prop_x-=64;
 993   7                                                              choose_screen(2);
 994   7                                                              x_change=1;
 995   7                                                      }
 996   6                                                      lcd_write_command(0x40|(prop_x+i));
 997   6                                                      lcd_write_command(0xb8|prop_y);
 998   6                                                      lcd_write_data(0x00);
 999   6                                                      if(x_change){
1000   7                                                              prop_x+=64;
1001   7                                                      }
1002   6                                      }
1003   5                                      prop_y=prop_y*8;
1004   5                                      prop_frame=0;
1005   5                                      switch(prop_exist){
1006   6                                              case 1:longer=1;game_status=7;break;
1007   6                                              case 2:game_status=8;break;
1008   6                                              case 3:game_status=9;break;
1009   6                                              case 4:game_status=10;break;
1010   6                                              default:break;
1011   6                                      }
1012   5                                      prop_exist=0;
1013   5                              }else{
1014   5                                      LS1=do_1;
1015   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]);
1016   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]-1);
1017   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]);
1018   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]-1);
1019   5                                      //
1020   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]);
1021   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]-1);
1022   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]);
1023   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]-1);
1024   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]);
1025   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]-1);
1026   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]);
1027   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]-1);
1028   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]);
1029   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]-1);
1030   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]);
1031   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]-1);
1032   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]);
1033   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]-1);
1034   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]);
1035   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]-1);
1036   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]);
1037   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]-1);
1038   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]);
1039   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]-1);
1040   5                                      if(ball_sit[1]-1!=0){
1041   6                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
1042   6                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
1043   6                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
1044   6                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
1045   6                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 18  

1046   6                                              clear_dot(ball_sit[0]+7,ball_sit[1]-2);
1047   6                                              clear_dot(ball_sit[0]+8,ball_sit[1]-2);
1048   6                                              clear_dot(ball_sit[0]+9,ball_sit[1]-2);
1049   6                                              clear_dot(ball_sit[0]+10,ball_sit[1]-2);
1050   6                                              clear_dot(ball_sit[0]+11,ball_sit[1]-2);
1051   6                                              clear_dot(ball_sit[0]+12,ball_sit[1]-2);
1052   6                                              clear_dot(ball_sit[0]+13,ball_sit[1]-2);
1053   6                                              if(ball_sit[1]-2!=0){
1054   7                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
1055   7                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
1056   7                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
1057   7                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
1058   7                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
1059   7                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-3);
1060   7                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-3);
1061   7                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-3);
1062   7                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-3);
1063   7                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-3);
1064   7                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-3);
1065   7                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-3);
1066   7                                                      if(ball_sit[1]-3!=0){
1067   8                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-4);
1068   8                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-4);
1069   8                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-4);
1070   8                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-4);
1071   8                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-4);
1072   8                                                              clear_dot(ball_sit[0]+7,ball_sit[1]-4);
1073   8                                                              clear_dot(ball_sit[0]+8,ball_sit[1]-4);
1074   8                                                              clear_dot(ball_sit[0]+9,ball_sit[1]-4);
1075   8                                                              clear_dot(ball_sit[0]+10,ball_sit[1]-4);
1076   8                                                              clear_dot(ball_sit[0]+11,ball_sit[1]-4);
1077   8                                                              clear_dot(ball_sit[0]+12,ball_sit[1]-4);
1078   8                                                              clear_dot(ball_sit[0]+13,ball_sit[1]-4);
1079   8                                                              if(ball_sit[1]-4!=0){
1080   9                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-5);
1081   9                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-5);
1082   9                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-5);
1083   9                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-5);
1084   9                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-5);
1085   9                                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-5);
1086   9                                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-5);
1087   9                                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-5);
1088   9                                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-5);
1089   9                                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-5);
1090   9                                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-5);
1091   9                                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-5);
1092   9      
1093   9                                                              }
1094   8                                                      }
1095   7                                              }
1096   6                                      }
1097   5                                      //
1098   5                                      ball_direction_x=~ball_direction_x;
1099   5                              }
1100   4                      }
1101   3              }else{
1102   3                      if(read_dot(ball_sit[0]-1,ball_sit[1]) || read_dot(ball_sit[0]-1,ball_sit[1]-1) || ball_sit[0]==0){
1103   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
1104   5                                      prop_y=prop_y/8;
1105   5                                      for(i=0;i<8;i++){
1106   6                                                      if(prop_x+i<64){
1107   7                                                              choose_screen(1);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 19  

1108   7                                                              x_change=0;
1109   7                                                      }else{
1110   7                                                              prop_x-=64;
1111   7                                                              choose_screen(2);
1112   7                                                              x_change=1;
1113   7                                                      }
1114   6                                                      lcd_write_command(0x40|(prop_x+i));
1115   6                                                      lcd_write_command(0xb8|prop_y);
1116   6                                                      lcd_write_data(0x00);
1117   6                                                      if(x_change){
1118   7                                                              prop_x+=64;
1119   7                                                      }
1120   6                                      }
1121   5                                      prop_y=prop_y*8;
1122   5                                      prop_frame=0;
1123   5                                      switch(prop_exist){
1124   6                                              case 1:longer=1;game_status=7;break;
1125   6                                              case 2:game_status=8;break;
1126   6                                              case 3:game_status=9;break;
1127   6                                              case 4:game_status=10;break;
1128   6                                              default:break;
1129   6                                      }
1130   5                                      prop_exist=0;
1131   5                              }else{
1132   5                                      LS1=do_1;
1133   5                                      if(ball_sit[0]!=0){
1134   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]);
1135   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]-1);
1136   6                                              //
1137   6                                              if((ball_sit[0]-1)!=0){
1138   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]);
1139   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-1);
1140   7                                                      if(ball_sit[1]-1!=0){
1141   8                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
1142   8                                                              if(ball_sit[1]-2!=0){
1143   9                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
1144   9                                                                      if(ball_sit[1]-3!=0){
1145  10                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-4);
1146  10                                                                              if(ball_sit[1]-4!=0){
1147  11                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-5);
1148  11      
1149  11                                                                              }
1150  10                                                                      }
1151   9                                                              }
1152   8                                                      }
1153   7                                              if((ball_sit[0]-2)!=0){
1154   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]);
1155   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-1);
1156   8                                                              if(ball_sit[1]-1!=0){
1157   9                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
1158   9                                                              if(ball_sit[1]-2!=0){
1159  10                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
1160  10                                                                      if(ball_sit[1]-3!=0){
1161  11                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-4);
1162  11                                                                              if(ball_sit[1]-4!=0){
1163  12                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-5);
1164  12      
1165  12                                                                              }
1166  11                                                                      }
1167  10                                                              }
1168   9                                                      }
1169   8                                              if((ball_sit[0]-3)!=0){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 20  

1170   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]);
1171   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-1);
1172   9                                                              if(ball_sit[1]-1!=0){
1173  10                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
1174  10                                                              if(ball_sit[1]-2!=0){
1175  11                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
1176  11                                                                      if(ball_sit[1]-3!=0){
1177  12                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-4);
1178  12                                                                              if(ball_sit[1]-4!=0){
1179  13                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-5);
1180  13      
1181  13                                                                              }
1182  12                                                                      }
1183  11                                                              }
1184  10                                                      }
1185   9                                              if((ball_sit[0]-4)!=0){
1186  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]);
1187  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-1);
1188  10                                                              if(ball_sit[1]-1!=0){
1189  11                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
1190  11                                                              if(ball_sit[1]-2!=0){
1191  12                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
1192  12                                                                      if(ball_sit[1]-3!=0){
1193  13                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-4);
1194  13                                                                              if(ball_sit[1]-4!=0){
1195  14                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-5);
1196  14      
1197  14                                                                              }
1198  13                                                                      }
1199  12                                                              }
1200  11                                                      }
1201  10                                              if((ball_sit[0]-5)!=0){
1202  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]);
1203  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-1);
1204  11                                                              if(ball_sit[1]-1!=0){
1205  12                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-2);
1206  12                                                              if(ball_sit[1]-2!=0){
1207  13                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-3);
1208  13                                                                      if(ball_sit[1]-3!=0){
1209  14                                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-4);
1210  14                                                                              if(ball_sit[1]-4!=0){
1211  15                                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-5);
1212  15      
1213  15                                                                              }
1214  14                                                                      }
1215  13                                                              }
1216  12                                                      }
1217  11                                              if((ball_sit[0]-6)!=0){
1218  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]);
1219  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-1);
1220  12                                                              if(ball_sit[1]-1!=0){
1221  13                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-2);
1222  13                                                              if(ball_sit[1]-2!=0){
1223  14                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-3);
1224  14                                                                      if(ball_sit[1]-3!=0){
1225  15                                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-4);
1226  15                                                                              if(ball_sit[1]-4!=0){
1227  16                                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-5);
1228  16      
1229  16                                                                              }
1230  15                                                                      }
1231  14                                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 21  

1232  13                                                      }
1233  12                                              if((ball_sit[0]-7)!=0){
1234  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]);
1235  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-1);
1236  13                                                              if(ball_sit[1]-1!=0){
1237  14                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-2);
1238  14                                                              if(ball_sit[1]-2!=0){
1239  15                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-3);
1240  15                                                                      if(ball_sit[1]-3!=0){
1241  16                                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-4);
1242  16                                                                              if(ball_sit[1]-4!=0){
1243  17                                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-5);
1244  17      
1245  17                                                                              }
1246  16                                                                      }
1247  15                                                              }
1248  14                                                      }
1249  13                                              if((ball_sit[0]-8)!=0){
1250  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]);
1251  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-1);
1252  14                                                              if(ball_sit[1]-1!=0){
1253  15                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-2);
1254  15                                                              if(ball_sit[1]-2!=0){
1255  16                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-3);
1256  16                                                                      if(ball_sit[1]-3!=0){
1257  17                                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-4);
1258  17                                                                              if(ball_sit[1]-4!=0){
1259  18                                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-5);
1260  18      
1261  18                                                                              }
1262  17                                                                      }
1263  16                                                              }
1264  15                                                      }
1265  14                                              if((ball_sit[0]-9)!=0){
1266  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]);
1267  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-1);
1268  15                                                              if(ball_sit[1]-1!=0){
1269  16                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-2);
1270  16                                                              if(ball_sit[1]-2!=0){
1271  17                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-3);
1272  17                                                                      if(ball_sit[1]-3!=0){
1273  18                                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-4);
1274  18                                                                              if(ball_sit[1]-4!=0){
1275  19                                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-5);
1276  19      
1277  19                                                                              }
1278  18                                                                      }
1279  17                                                              }
1280  16                                                      }
1281  15                                              if((ball_sit[0]-10)!=0){
1282  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]);
1283  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-1);
1284  16                                                              if(ball_sit[1]-1!=0){
1285  17                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-2);
1286  17                                                              if(ball_sit[1]-2!=0){
1287  18                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-3);
1288  18                                                                      if(ball_sit[1]-3!=0){
1289  19                                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-4);
1290  19                                                                              if(ball_sit[1]-4!=0){
1291  20                                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-5);
1292  20      
1293  20                                                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 22  

1294  19                                                                      }
1295  18                                                              }
1296  17                                                      }
1297  16                                              if((ball_sit[0]-11)!=0){
1298  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]);
1299  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-1);
1300  17                                                              if(ball_sit[1]-1!=0){
1301  18                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-2);
1302  18                                                              if(ball_sit[1]-2!=0){
1303  19                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-3);
1304  19                                                                      if(ball_sit[1]-3!=0){
1305  20                                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-4);
1306  20                                                                              if(ball_sit[1]-4!=0){
1307  21                                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-5);
1308  21      
1309  21                                                                              }
1310  20                                                                      }
1311  19                                                              }
1312  18                                                      }
1313  17                                              }
1314  16                                              }
1315  15                                              }
1316  14                                              }
1317  13                                              }
1318  12                                              }
1319  11                                              }
1320  10                                              }
1321   9                                              }
1322   8                                              }
1323   7                                              }
1324   6                                              //
1325   6                                      }
1326   5                                      ball_direction_x=~ball_direction_x;
1327   5                              }
1328   4                      }
1329   3              }
1330   2              //according to y direction to check next y dot status
1331   2              next_dot_y=0;
1332   2              if(ball_direction_y){
1333   3                      //go up
1334   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1335   4                              if(ball_sit[1]-1-i==0){
1336   5                                      next_dot_y=1;
1337   5                                      ball_sit[1]-=i;
1338   5                                      break;
1339   5                              }else if(read_dot(ball_sit[0],ball_sit[1]-1-i) || read_dot(ball_sit[0]+1,ball_sit[1]-1-i)){//if there i
             -s a dot
1340   5                                      next_dot_y=1;
1341   5                                      ball_sit[1]-=(i-1);
1342   5                                      break;
1343   5                              }
1344   4                      }
1345   3                      if(~next_dot_y){
1346   4                              ball_sit[1]-=ball_speed[1];
1347   4                      }
1348   3              }else{
1349   3                      //go down
1350   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1351   4                              if(read_dot(ball_sit[0],ball_sit[1]+i) || read_dot(ball_sit[0]+1,ball_sit[1]+i)){//if there is a dot
1352   5                                      next_dot_y=1;
1353   5                                      ball_sit[1]+=(i-1);
1354   5                                      break;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 23  

1355   5                              }
1356   4                      }
1357   3                      if(~next_dot_y){
1358   4                              ball_sit[1]+=ball_speed[1];
1359   4                      }
1360   3              }
1361   2              //according to x direction to check next x dot status
1362   2              next_dot_x=0;
1363   2              if(ball_direction_x){
1364   3                      //go right
1365   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1366   4                              if(ball_sit[0]+1+i==127){
1367   5                                      next_dot_x=1;
1368   5                                      ball_sit[0]+=i;
1369   5                                      break;
1370   5                              }else if(read_dot(ball_sit[0]+1+i,ball_sit[1]) || read_dot(ball_sit[0]+1+i,ball_sit[1]-1)){//if there i
             -s a dot
1371   5                                      next_dot_x=1;
1372   5                                      ball_sit[0]+=(i-1);
1373   5                                      break;
1374   5                              }
1375   4                      }
1376   3                      if(~next_dot_x){
1377   4                              ball_sit[0]+=ball_speed[0];
1378   4                      }
1379   3              }else{
1380   3                      //go left
1381   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1382   4                              if(ball_sit[0]-i==0){
1383   5                                      next_dot_x=1;
1384   5                                      ball_sit[0]-=i;
1385   5                                      break;
1386   5                              }else if(read_dot(ball_sit[0]-i,ball_sit[1]) || read_dot(ball_sit[0]-i,ball_sit[1]-1)){//if there is a 
             -dot
1387   5                                      next_dot_x=1;
1388   5                                      ball_sit[0]-=(i-1);
1389   5                                      break;
1390   5                              }
1391   4                      }
1392   3                      if(~next_dot_x){
1393   4                              ball_sit[0]-=ball_speed[0];
1394   4                      }
1395   3              }
1396   2              }
1397   1      
1398   1      }
1399          //draw now ball
1400          void draw_ball(){
1401   1              //clear previous ball
1402   1              clear_ball();
1403   1              //calculate now ball
1404   1              move_ball();
1405   1              //draw now ball
1406   1              set_dot(ball_sit[0],ball_sit[1]);
1407   1              set_dot(ball_sit[0],ball_sit[1]-1);
1408   1              set_dot(ball_sit[0]+1,ball_sit[1]);
1409   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);
1410   1      }
1411          
1412          //refresh screen
1413          void refresh_screen(){
1414   1              bit flag,x_change;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 24  

1415   1              unsigned char i;
1416   1              unsigned char x,y;
1417   1              //Add frame number
1418   1              if(game_status!=1){
1419   2                      number_frame++;
1420   2              }
1421   1              if(game_status==4){
1422   2                      //start music
1423   2                      LS1=title_music;
1424   2                      //show title
1425   2                      if(frame_begin==0){
1426   3                              number_frame=0;
1427   3                              frame_begin=1;
1428   3                      }else{
1429   3                              if(frame_finish==0){
1430   4                                      //main program for show title
1431   4                                      //show BREAKOUT
1432   4                                      if(number_frame<80){
1433   5                                              for(i=number_frame/10;i<number_frame/10+1;i++){
1434   6                                                      for(y=0;y<12;y++){
1435   7                                                              for(x=0;x<3;x++){
1436   8                                                                      flag=0;
1437   8                                                                      y+=5+15*i;
1438   8                                                                      x+=1;
1439   8                                                                      if(y<64){
1440   9                                                                              choose_screen(1);
1441   9                                                                      }else{
1442   9                                                                              choose_screen(2);
1443   9                                                                              y-=64;
1444   9                                                                              flag=1;
1445   9                                                                      }
1446   8                                                                      lcd_write_command(0xb8|x);
1447   8                                                                      lcd_write_command(0x40|y);
1448   8                                                                      if(flag){
1449   9                                                                              y+=64;
1450   9                                                                      }
1451   8                                                                      y-=5+15*i;
1452   8                                                                      x-=1;
1453   8                                                                      lcd_write_data(title[y+x*12+i*36]);
1454   8                                                              }       
1455   7                                                      }
1456   6                                              }
1457   5                                      }else if(number_frame>80 && number_frame<120){
1458   5                                              //show "clone"
1459   5                                              //clear previous fonts
1460   5                                              choose_screen(0);
1461   5                                              for(x=4;x<6;x++){
1462   6                                                      for(y=64-(number_frame-80);y<64;y++){
1463   7                                                              lcd_write_command(0xb8|x);
1464   7                                                              lcd_write_command(0x40|y);
1465   7                                                              lcd_write_data(0x00);
1466   7                                                      }
1467   6                                              }
1468   5                                              //show next fonts
1469   5                                              for(i=0;i<5;i++){
1470   6                                                      for(y=0;y<6;y++){
1471   7                                                              for(x=0;x<2;x++){
1472   8                                                                      flag=0;
1473   8                                                                      y+=127-(number_frame-80)+7*i;
1474   8                                                                      x+=4;
1475   8                                                                      if(y<64){
1476   9                                                                              choose_screen(1);
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 25  

1477   9                                                                      }else{
1478   9                                                                              choose_screen(2);
1479   9                                                                              y-=64;
1480   9                                                                              flag=1;
1481   9                                                                      }
1482   8                                                                      if(y<64){
1483   9                                                                              lcd_write_command(0xb8|x);
1484   9                                                                              lcd_write_command(0x40|y);
1485   9                                                                              if(flag){
1486  10                                                                                      y+=64;
1487  10                                                                              }
1488   9                                                                      y-=127-(number_frame-80)+7*i;
1489   9                                                                      x-=4;
1490   9                                                                      lcd_write_data(clone[y+x*6+i*12]);
1491   9                                                                      }
1492   8                                                              }       
1493   7                                                      }
1494   6                                              }
1495   5                                      }else if(number_frame>120){
1496   5                                              frame_finish=1; 
1497   5                                      }
1498   4                              }else{
1499   4                                      game_status=5;
1500   4                                      frame_finish=0;
1501   4                                      frame_begin=0;
1502   4                              }
1503   3                      }
1504   2              }else if(game_status==5){
1505   2                      if(frame_begin==0){
1506   3                      //prepare for flashing
1507   3                              frame_begin=1;
1508   3                              number_frame=0;
1509   3                      }else{
1510   3                              //check button
1511   3                              start=1;
1512   3                              if(start==0){
1513   4                                      LS1=change;
1514   4                                      first_page();
1515   4                                      draw_block();
1516   4                                      game_status=6;
1517   4                                      frame_begin=0;
1518   4                              }else{
1519   4                              //flashing
1520   4                              if(number_frame>20){
1521   5                                      number_frame=0;
1522   5                              }else if(number_frame>10 && number_frame<20){
1523   5                                      choose_screen(1);
1524   5                                      for(x=6;x<8;x++){
1525   6                                              for(y=20;y<64;y++){
1526   7                                                      lcd_write_command(0xb8|x);
1527   7                                                      lcd_write_command(0x40|y);
1528   7                                                      lcd_write_data(0x00);
1529   7                                              }
1530   6                                      }
1531   5                                      choose_screen(2);
1532   5                                      for(x=6;x<8;x++){
1533   6                                              for(y=0;y<43;y++){
1534   7                                                      lcd_write_command(0xb8|x);
1535   7                                                      lcd_write_command(0x40|y);
1536   7                                                      lcd_write_data(0x00);
1537   7                                              }
1538   6                                      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 26  

1539   5                              }else if(number_frame<30){
1540   5                                      for(i=0;i<11;i++){
1541   6                                              for(y=0;y<6;y++){
1542   7                                                      for(x=0;x<2;x++){
1543   8                                                              flag=0;
1544   8                                                              y+=20+7*i;
1545   8                                                              x+=6;
1546   8                                                              if(y<64){
1547   9                                                                      choose_screen(1);
1548   9                                                              }else{
1549   9                                                                      choose_screen(2);
1550   9                                                                      y-=64;
1551   9                                                                      flag=1;
1552   9                                                              }
1553   8                                                              if(y<64){
1554   9                                                              lcd_write_command(0xb8|x);
1555   9                                                              lcd_write_command(0x40|y);
1556   9                                                              if(flag){
1557  10                                                                      y+=64;
1558  10                                                              }
1559   9                                                              y-=20+7*i;
1560   9                                                              x-=6;
1561   9                                                              lcd_write_data(press_start[y+x*6+i*12]);
1562   9                                                              }
1563   8                                                      }       
1564   7                                              }
1565   6                                      }
1566   5                              }
1567   4                              }
1568   3                      }
1569   2              }else if(game_status==6){
1570   2                      //start music
1571   2                      LS1=level_music;
1572   2                      //show level
1573   2                      //show life
1574   2                      if(frame_finish==0){
1575   3                              number_frame=0;
1576   3                      }
1577   2                      max_number_frame=30;
1578   2                      if(number_frame<max_number_frame){
1579   3                              if(frame_finish==0){
1580   4                                      show_level(level);
1581   4                                      frame_finish=1;
1582   4                              }
1583   3                      }else{
1584   3                              clear_low_screen();
1585   3                              game_status=3;
1586   3                              frame_finish=0;
1587   3                      }
1588   2              }else if(game_status==3){
1589   2                      //show life
1590   2                      if(frame_finish==0){
1591   3                              number_frame=0;
1592   3                      }
1593   2                      max_number_frame=30;
1594   2                      if(number_frame<max_number_frame){
1595   3                              if(frame_finish==0){
1596   4                                      show_life(life);
1597   4                                      frame_finish=1;
1598   4                              }
1599   3                      }else{
1600   3                              TR0=1;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 27  

1601   3                              LS1=change;
1602   3                              clear_low_screen();
1603   3                              init_ball();
1604   3                              init_bar();
1605   3                              game_status=1;
1606   3                              frame_finish=0;
1607   3                      }
1608   2              }else if(game_status==7){
1609   2                      //become longer
1610   2                      if(frame_begin==0){
1611   3                              frame_begin=1;
1612   3                              number_frame=0;
1613   3                      }else{
1614   3                              if(number_frame<50){
1615   4                                      if(number_frame%10==0){
1616   5                                              for(i=0;i<bar_len;i++){
1617   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1618   6                                              }
1619   5                                      }else{
1620   5                                              for(i=0;i<bar_len;i++){
1621   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1622   6                                              }
1623   5                                      }
1624   4                              }else if(number_frame==50){
1625   4                                      bar_len=128;
1626   4                                      temp_bar_sit_x=bar_sit[0];
1627   4                                      bar_sit[0]=0;
1628   4                              }else if(number_frame<100){
1629   4                                      if(number_frame%10==0){
1630   5                                              for(i=0;i<bar_len;i++){
1631   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1632   6                                              }
1633   5                                      }else{
1634   5                                              for(i=0;i<bar_len;i++){
1635   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1636   6                                              }
1637   5                                      }
1638   4                              }else{
1639   4                                      for(i=0;i<bar_len;i++){
1640   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1641   5                                      }
1642   4                                      frame_begin=0;
1643   4                                      game_status=1;
1644   4                                      longer_time=0;
1645   4                                      longer=1;
1646   4                              }
1647   3                      }
1648   2              }else if(game_status==8){
1649   2                      //clear area
1650   2                      if(frame_begin==0){
1651   3                              if((255-TL0)<85){
1652   4                                      x=0;
1653   4                              }else{
1654   4                                      x=2;
1655   4                              }
1656   3                              frame_begin=1;
1657   3                              number_frame=0;
1658   3                      }else{
1659   3                              if(number_frame<50){
1660   4                                      if(number_frame%10==0){
1661   5                                              for(i=0;i<2;i++){
1662   6                                                      for(y=0;y<64;y++){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 28  

1663   7                                                              choose_screen(0);
1664   7                                                              lcd_write_command(0xb8|x+i);
1665   7                                                              lcd_write_command(0x40|y);
1666   7                                                              lcd_write_data(0x00);
1667   7                                                      }
1668   6                                              }
1669   5                                      }else{
1670   5                                              for(i=0;i<2;i++){
1671   6                                                      for(y=0;y<64;y++){
1672   7                                                              choose_screen(0);
1673   7                                                              lcd_write_command(0xb8|x+i);
1674   7                                                              lcd_write_command(0x40|y);
1675   7                                                              lcd_write_data(0xFF);
1676   7                                                      }
1677   6                                              }
1678   5                                      }
1679   4                              }else{
1680   4                                      for(i=0;i<2;i++){
1681   5                                                      for(y=0;y<64;y++){
1682   6                                                              choose_screen(0);
1683   6                                                              lcd_write_command(0xb8|x+i);
1684   6                                                              lcd_write_command(0x40|y);
1685   6                                                              lcd_write_data(0x00);
1686   6                                                      }
1687   5                                      }
1688   4                                      frame_begin=0;
1689   4                                      game_status=1;
1690   4                              }
1691   3                      }
1692   2              }else if(game_status==9){
1693   2                      //win
1694   2                      x=prop_x;
1695   2                      y=prop_y;
1696   2                      y=y/8;
1697   2                      if(frame_begin==0){
1698   3                              frame_begin=1;
1699   3                              number_frame=0;
1700   3                      }else{
1701   3                              if(number_frame<50){
1702   4                                      if(number_frame%10==0){
1703   5                                              for(i=0;i<8;i++){
1704   6                                                      if(x+i<64){
1705   7                                                              choose_screen(1);
1706   7                                                              x_change=0;
1707   7                                                      }else{
1708   7                                                              x-=64;
1709   7                                                              choose_screen(2);
1710   7                                                              x_change=1;
1711   7                                                      }
1712   6                                                      lcd_write_command(0x40|(x+i));
1713   6                                                      lcd_write_command(0xb8|y);
1714   6                                                      lcd_write_data(prop[0x00]);
1715   6                                                      if(x_change){
1716   7                                                              x+=64;
1717   7                                                      }
1718   6                                              }
1719   5                                      }else{
1720   5                                              for(i=0;i<8;i++){
1721   6                                                      if(x+i<64){
1722   7                                                              choose_screen(1);
1723   7                                                              x_change=0;
1724   7                                                      }else{
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 29  

1725   7                                                              x-=64;
1726   7                                                              choose_screen(2);
1727   7                                                              x_change=1;
1728   7                                                      }
1729   6                                                      lcd_write_command(0x40|(x+i));
1730   6                                                      lcd_write_command(0xb8|y);
1731   6                                                      lcd_write_data(prop[i+16]);
1732   6                                                      if(x_change){
1733   7                                                              x+=64;
1734   7                                                      }               
1735   6                                              }
1736   5                                      }
1737   4                              }else{
1738   4                                      for(i=0;i<8;i++){
1739   5                                              if(x+i<64){
1740   6                                                      choose_screen(1);
1741   6                                                      x_change=0;
1742   6                                              }else{
1743   6                                                      x-=64;
1744   6                                                      choose_screen(2);
1745   6                                                      x_change=1;
1746   6                                              }
1747   5                                              lcd_write_command(0x40|(x+i));
1748   5                                              lcd_write_command(0xb8|y);
1749   5                                              lcd_write_data(0x00);
1750   5                                              if(x_change){
1751   6                                                      x+=64;
1752   6                                              }
1753   5                                      }
1754   4                                      frame_begin=0;
1755   4                                      game_status=2;
1756   4                              }
1757   3                      }
1758   2              }else if(game_status==10){
1759   2                      //Die
1760   2                      x=prop_x;
1761   2                      y=prop_y;
1762   2                      y=y/8;
1763   2                      if(frame_begin==0){
1764   3                              frame_begin=1;
1765   3                              number_frame=0;
1766   3                      }else{
1767   3                              if(number_frame<50){
1768   4                                      if(number_frame%10==0){
1769   5                                              for(i=0;i<8;i++){
1770   6                                                      if(x+i<64){
1771   7                                                              choose_screen(1);
1772   7                                                              x_change=0;
1773   7                                                      }else{
1774   7                                                              x-=64;
1775   7                                                              choose_screen(2);
1776   7                                                              x_change=1;
1777   7                                                      }
1778   6                                                      lcd_write_command(0x40|(x+i));
1779   6                                                      lcd_write_command(0xb8|y);
1780   6                                                      lcd_write_data(prop[0x00]);
1781   6                                                      if(x_change){
1782   7                                                              x+=64;
1783   7                                                      }
1784   6                                              }
1785   5                                      }else{
1786   5                                              for(i=0;i<8;i++){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 30  

1787   6                                                      if(x+i<64){
1788   7                                                              choose_screen(1);
1789   7                                                              x_change=0;
1790   7                                                      }else{
1791   7                                                              x-=64;
1792   7                                                              choose_screen(2);
1793   7                                                              x_change=1;
1794   7                                                      }
1795   6                                                      lcd_write_command(0x40|(x+i));
1796   6                                                      lcd_write_command(0xb8|y);
1797   6                                                      lcd_write_data(prop[i+24]);
1798   6                                                      if(x_change){
1799   7                                                              x+=64;
1800   7                                                      }               
1801   6                                              }
1802   5                                      }
1803   4                              }else{
1804   4                                      for(i=0;i<8;i++){
1805   5                                              if(x+i<64){
1806   6                                                      choose_screen(1);
1807   6                                                      x_change=0;
1808   6                                              }else{
1809   6                                                      x-=64;
1810   6                                                      choose_screen(2);
1811   6                                                      x_change=1;
1812   6                                              }
1813   5                                              lcd_write_command(0x40|(x+i));
1814   5                                              lcd_write_command(0xb8|y);
1815   5                                              lcd_write_data(0x00);
1816   5                                              if(x_change){
1817   6                                                      x+=64;
1818   6                                              }
1819   5                                      }
1820   4                                      frame_begin=0;
1821   4                                      game_status=0;
1822   4                              }
1823   3                      }
1824   2              }else if(game_status==11){
1825   2                      //end longer
1826   2                      if(frame_begin==0){
1827   3                              frame_begin=1;
1828   3                              number_frame=0;
1829   3                              longer=0;
1830   3                      }else{
1831   3                              if(number_frame<50){
1832   4                                      if(number_frame%10==0){
1833   5                                              for(i=0;i<bar_len;i++){
1834   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1835   6                                              }
1836   5                                      }else{
1837   5                                              for(i=0;i<bar_len;i++){
1838   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1839   6                                              }
1840   5                                      }
1841   4                              }else if(number_frame==50){
1842   4                                      for(i=0;i<bar_len;i++){
1843   5                                              clear_dot(i+bar_sit[0],bar_sit[1]);
1844   5                                      }
1845   4                                      bar_len=o_bar_len;
1846   4                                      bar_sit[0]=temp_bar_sit_x;
1847   4                              }else if(number_frame<100){
1848   4                                      if(number_frame%10==0){
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 31  

1849   5                                              for(i=0;i<bar_len;i++){
1850   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1851   6                                              }
1852   5                                      }else{
1853   5                                              for(i=0;i<bar_len;i++){
1854   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1855   6                                              }
1856   5                                      }
1857   4                              }else{
1858   4                                      for(i=0;i<bar_len;i++){
1859   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1860   5                                      }
1861   4                                      frame_begin=0;
1862   4                                      game_status=1;
1863   4                              }
1864   3                      }
1865   2              }else{
1866   2              //check block
1867   2              check_block();
1868   2              //draw bar
1869   2              if(game_status==1){
1870   3                      //music
1871   3                      LS1=run_music;
1872   3                      //continuous status
1873   3                      random_prop();
1874   3                      draw_bar();
1875   3                      draw_ball();
1876   3              }else if(game_status==0){
1877   3                      LS1=die_music;
1878   3                      //end status
1879   3                      if(life==0){
1880   4                              //init level
1881   4                              level=1;
1882   4                              //die information
1883   4                               //show life
1884   4                              if(frame_finish==0){
1885   5                                      number_frame=0;
1886   5                              }
1887   4                              if(number_frame<30){
1888   5                                      if(frame_finish==0){
1889   6                                              show_life(life);
1890   6                                              frame_finish=1;
1891   6                                      }
1892   5                              }else if(number_frame==30){
1893   5                                      //show "DIE!"
1894   5                                      first_page();
1895   5                                      prop_exist=0;
1896   5                                      longer=0;
1897   5                                      longer_time=0;
1898   5                                      for(i=0;i<4;i++){
1899   6                                              for(y=0;y<12;y++){
1900   7                                                      for(x=0;x<3;x++){
1901   8                                                              flag=0;
1902   8                                                              y+=30+20*i;
1903   8                                                              x+=1;
1904   8                                                              if(y<64){
1905   9                                                                      choose_screen(1);
1906   9                                                              }else{
1907   9                                                                      choose_screen(2);
1908   9                                                                      y-=64;
1909   9                                                                      flag=1;
1910   9                                                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 32  

1911   8                                                              lcd_write_command(0xb8|x);
1912   8                                                              lcd_write_command(0x40|y);
1913   8                                                              if(flag){
1914   9                                                                      y+=64;
1915   9                                                              }
1916   8                                                              y-=30+20*i;
1917   8                                                              x-=1;
1918   8                                                              lcd_write_data(die[y+x*12+i*36]);
1919   8                                                      }       
1920   7                                              }       
1921   6                                      }
1922   5                              }else if(number_frame>30){
1923   5                                      //check button
1924   5                                      start=1;
1925   5                                      if(start==0){
1926   6                                              first_page();
1927   6                                              life=5;
1928   6                                              game_status=4;
1929   6                                              frame_finish=0;
1930   6                                      }else{
1931   6                                      //flashing
1932   6                                              if(number_frame>50){
1933   7                                                      number_frame=31;
1934   7                                              }else if(number_frame>40 && number_frame<50){
1935   7                                                      choose_screen(0);
1936   7                                                      for(x=6;x<8;x++){
1937   8                                                              for(y=0;y<64;y++){
1938   9                                                                      lcd_write_command(0xb8|x);
1939   9                                                                      lcd_write_command(0x40|y);
1940   9                                                                      lcd_write_data(0x00);
1941   9                                                              }
1942   8                                                      }
1943   7                                              }else if(number_frame<40){
1944   7                                                      for(i=0;i<11;i++){
1945   8                                                              for(y=0;y<6;y++){
1946   9                                                                      for(x=0;x<2;x++){
1947  10                                                                              flag=0;
1948  10                                                                              y+=20+7*i;
1949  10                                                                              x+=6;
1950  10                                                                              if(y<64){
1951  11                                                                                      choose_screen(1);
1952  11                                                                              }else{
1953  11                                                                                      choose_screen(2);
1954  11                                                                                      y-=64;
1955  11                                                                                      flag=1;
1956  11                                                                              }
1957  10                                                                              if(y<64){
1958  11                                                                                      lcd_write_command(0xb8|x);
1959  11                                                                                      lcd_write_command(0x40|y);
1960  11                                                                              if(flag){
1961  12                                                                                      y+=64;
1962  12                                                                              }
1963  11                                                                              y-=20+7*i;
1964  11                                                                              x-=6;
1965  11                                                                              lcd_write_data(press_start[y+x*6+i*12]);
1966  11                                                                              }
1967  10                                                                      }       
1968   9                                                              }
1969   8                                                      }
1970   7                                              }
1971   6                                      }
1972   5                              }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 33  

1973   4                      }else{
1974   4                              //show life
1975   4                              if(frame_finish==0){
1976   5                                      number_frame=0;
1977   5                                      life-=1;
1978   5                              }
1979   4                              max_number_frame=30;
1980   4                              if(number_frame<max_number_frame){
1981   5                                      if(frame_finish==0){
1982   6                                              show_life(life);
1983   6                                              frame_finish=1;
1984   6                                      }
1985   5                              }else{
1986   5                                      clear_low_screen();
1987   5                                      init_ball();
1988   5                                      init_bar();
1989   5                                      game_status=1;
1990   5                                      frame_finish=0;
1991   5                              }
1992   4                      }
1993   3              }else if(game_status==2){
1994   3                      //win status
1995   3                      //"WIN!"
1996   3                      LS1=win_music;
1997   3                      prop_exist=0;
1998   3                      longer=0;
1999   3                      longer_time=0;
2000   3                      if(frame_finish==0){
2001   4                              frame_finish=1;
2002   4                              number_frame=0;
2003   4                              first_page();
2004   4                              for(i=0;i<4;i++){
2005   5                                      for(y=0;y<12;y++){
2006   6                                              for(x=0;x<3;x++){
2007   7                                                      flag=0;
2008   7                                                      y+=30+20*i;
2009   7                                                      x+=1;
2010   7                                                      if(y<64){
2011   8                                                              choose_screen(1);
2012   8                                                      }else{
2013   8                                                              choose_screen(2);
2014   8                                                              y-=64;
2015   8                                                              flag=1;
2016   8                                                      }
2017   7                                                      lcd_write_command(0xb8|x);
2018   7                                                      lcd_write_command(0x40|y);
2019   7                                                      if(flag){
2020   8                                                              y+=64;
2021   8                                                      }
2022   7                                                      y-=30+20*i;
2023   7                                                      x-=1;
2024   7                                                      lcd_write_data(win[y+x*12+i*36]);
2025   7                                              }       
2026   6                                      }
2027   5                              }
2028   4                      }else{
2029   4                              //check button
2030   4                              start=1;
2031   4                              if(start==0){
2032   5                                      first_page();
2033   5                                      if(level<3){
2034   6                                              level++;
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 34  

2035   6                                              draw_block();
2036   6                                              game_status=6;
2037   6                                              
2038   6                                      }else{
2039   6                                              level=1;
2040   6                                              life=5;
2041   6                                              game_status=4;
2042   6                                      }
2043   5                                      frame_finish=0;
2044   5                              }else{
2045   5                              //flashing
2046   5                              if(number_frame>20){
2047   6                                      number_frame=0;
2048   6                              }else if(number_frame>10 && number_frame<20){
2049   6                                      choose_screen(0);
2050   6                                      for(x=6;x<8;x++){
2051   7                                              for(y=0;y<64;y++){
2052   8                                                      lcd_write_command(0xb8|x);
2053   8                                                      lcd_write_command(0x40|y);
2054   8                                                      lcd_write_data(0x00);
2055   8                                              }
2056   7                                      }
2057   6                              }else if(number_frame<30){
2058   6                                      for(i=0;i<11;i++){
2059   7                                              for(y=0;y<6;y++){
2060   8                                                      for(x=0;x<2;x++){
2061   9                                                              flag=0;
2062   9                                                              y+=20+7*i;
2063   9                                                              x+=6;
2064   9                                                              if(y<64){
2065  10                                                                      choose_screen(1);
2066  10                                                              }else{
2067  10                                                                      choose_screen(2);
2068  10                                                                      y-=64;
2069  10                                                                      flag=1;
2070  10                                                              }
2071   9                                                              if(y<64){
2072  10                                                              lcd_write_command(0xb8|x);
2073  10                                                              lcd_write_command(0x40|y);
2074  10                                                              if(flag){
2075  11                                                                      y+=64;
2076  11                                                              }
2077  10                                                              y-=20+7*i;
2078  10                                                              x-=6;
2079  10                                                              lcd_write_data(press_start[y+x*6+i*12]);
2080  10                                                              }
2081   9                                                      }       
2082   8                                              }
2083   7                                      }
2084   6                              }
2085   5                              }       
2086   4                      }
2087   3              }
2088   2              }
2089   1      }
2090          
2091          //initial fiunction
2092          //init the game
2093          void game_init(){
2094   1              lcd_init();
2095   1              first_page();
2096   1      }
C51 COMPILER V8.02   GAME                                                                  11/28/2013 13:36:50 PAGE 35  



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10203    ----
   CONSTANT SIZE    =   2187    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
