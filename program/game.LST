C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE GAME
OBJECT MODULE PLACED IN game.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE game.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "game.h"
   3          #include "lcd12864.h"
   4          
   5          //variables of game
   6          unsigned char game_status=4;//2: win  1: continue. 0: end  3: firest time show life 4: show title  5: wait
             -ing for start  6:show level
   7                                                                  //7: enter eat longer 8: eat clear 9: eat win  10:eat die
   8                                                                  //11: quit eat longer
   9          unsigned char life=5;
  10          unsigned char number_frame=0;
  11          unsigned char max_number_frame=0;
  12          bit frame_finish=0;
  13          bit frame_begin=0;
  14          unsigned char level=1;//total 3 level
  15          
  16          bit do_doing=0;
  17          
  18          //win character
  19          unsigned char code win[]={
  20                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -W-
  21                  0x04,0xFC,0xFC,0x04,0x00,0x03,0xFF,0x80,
  22                  0x00,0xFC,0xFC,0x00,0x80,0xFF,0x03,0x00,
  23                  0x00,0x00,0x03,0x3F,0x3C,0x03,0x03,0x3C,
  24                  0x3F,0x03,0x00,0x00,
  25                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  26                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  27                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  28                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  29                  0x20,0x20,0x20,0x00,
  30                  0x04,0xFC,0xFC,0xE0,0x00,0x00,0x00,0x04,  // -N-
  31                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x01,
  32                  0x07,0x1C,0x70,0xC0,0xFF,0xFF,0x00,0x00,
  33                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x03,
  34                  0x0F,0x3F,0x00,0x00,
  35                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  36                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  37                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  38                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  39                  0x00,0x00,0x00,0x00};
  40          unsigned char code die[]={
  41                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -D-
  42                  0x70,0xE0,0x80,0x00,0x00,0xFF,0xFF,0x00,
  43                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  44                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x30,0x18,
  45                  0x0E,0x07,0x01,0x00,
  46                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  47                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  48                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  49                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  50                  0x20,0x20,0x20,0x00,
  51                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  52                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  53                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  54                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 2   

  55                  0x30,0x38,0x3E,0x00,
  56                  0x00,0x00,0x00,0x00,0x00,0xFC,0xFE,0xFC,  // -!-
  57                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  58                  0x00,0x03,0xFF,0x03,0x00,0x00,0x00,0x00,
  59                  0x00,0x00,0x00,0x00,0x00,0x30,0x79,0x30,
  60                  0x00,0x00,0x00,0x00};
  61          unsigned char code lifefont[]={
  62                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  63                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  64                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  66                  0x30,0x38,0x3E,0x00,
  67                  0x00,0x00,0x00,0x04,0x04,0x04,0xFC,0xFC,  // -I-
  68                  0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x00,
  69                  0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,
  70                  0x00,0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,
  71                  0x20,0x20,0x20,0x00,
  72                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -F-
  73                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  74                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  75                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x00,0x00,
  76                  0x00,0x00,0x00,0x00,
  77                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  78                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  79                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  80                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  81                  0x30,0x38,0x3E,0x00,
  82                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
  83                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
  84                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
  85                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  86                  0x00,0x00,0x00,0x00};
  87          unsigned char code levelfont[]={
  88                  //level=
  89                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
  90                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
  91                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  92                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  93                  0x30,0x38,0x3E,0x00,
  94                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
  95                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
  96                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
  97                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
  98                  0x30,0x38,0x3E,0x00,
  99                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -V-
 100                  0xFC,0xFC,0x04,0x00,0x00,0x00,0x3F,0xFF,
 101                  0xC0,0x00,0xC0,0xFF,0x3F,0x00,0x00,0x00,
 102                  0x00,0x00,0x00,0x03,0x1F,0x3C,0x1F,0x03,
 103                  0x00,0x00,0x00,0x00,
 104                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 105                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 106                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 107                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 108                  0x30,0x38,0x3E,0x00,
 109                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x00,  // -L-
 110                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 111                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 112                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 113                  0x30,0x38,0x3E,0x00,
 114                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -=-
 115                  0x00,0x00,0x00,0x00,0x00,0xC3,0xC3,0xC3,
 116                  0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 3   

 117                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 118                  0x00,0x00,0x00,0x00};
 119          unsigned char code number[]={
 120                  0x00,0xC0,0xF0,0x38,0x0C,0x04,0x0C,0x38,  // -0-
 121                  0xF0,0xC0,0x00,0x00,0xFF,0xFF,0x00,0x00,
 122                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 123                  0x00,0x03,0x0F,0x1C,0x30,0x20,0x30,0x1C,
 124                  0x0F,0x03,0x00,0x00,
 125                  0x00,0x10,0x10,0x18,0x18,0xFC,0xFC,0x00,  // -1-
 126                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 127                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 128                  0x00,0x00,0x20,0x20,0x20,0x3F,0x3F,0x20,
 129                  0x20,0x20,0x00,0x00,
 130                  0x60,0xF0,0xF8,0x0C,0x04,0x04,0x04,0x0C,  // -2-
 131                  0x18,0xF0,0xE0,0x00,0x00,0x00,0x00,0x80,
 132                  0xC0,0x60,0x30,0x18,0x0E,0x07,0x01,0x00,
 133                  0x38,0x3E,0x3F,0x33,0x30,0x30,0x30,0x30,
 134                  0x30,0x30,0x3C,0x00,
 135                  0x00,0x30,0x78,0x78,0x0C,0x04,0x04,0x0C,  // -3-
 136                  0x18,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,
 137                  0x08,0x08,0x1C,0x16,0x33,0xE1,0xC0,0x00,
 138                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 139                  0x18,0x1F,0x0F,0x00,
 140                  0x00,0x00,0x00,0x00,0x80,0xE0,0x38,0xFC,  // -4-
 141                  0xFC,0x00,0x00,0x00,0x80,0xE0,0x38,0x0E,
 142                  0x03,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,
 143                  0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x3F,
 144                  0x3F,0x21,0x21,0x01,
 145                  0x00,0xFC,0xFC,0x0C,0x0C,0x0C,0x0C,0x0C,  // -5-
 146                  0x0C,0x0C,0x00,0x00,0x00,0x1F,0x0F,0x08,
 147                  0x04,0x02,0x02,0x06,0x1C,0xF8,0xE0,0x00,
 148                  0x0C,0x1E,0x3E,0x30,0x20,0x20,0x20,0x30,
 149                  0x1C,0x0F,0x03,0x00};
 150          
 151          unsigned char code title[]={
 152          //Breakout
 153                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -B-
 154                  0xF0,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 155                  0x08,0x08,0x1C,0x16,0x73,0xE1,0x80,0x00,
 156                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x30,
 157                  0x1C,0x0F,0x03,0x00,
 158                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x0C,0x18,  // -R-
 159                  0xF8,0xE0,0x00,0x00,0x00,0xFF,0xFF,0x08,
 160                  0x38,0xF8,0xCC,0x06,0x07,0x01,0x00,0x00,
 161                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x03,0x2F,
 162                  0x3C,0x30,0x20,0x00,
 163                  0x04,0xFC,0xFC,0x04,0x04,0x04,0x04,0x04,  // -E-
 164                  0x0C,0x1C,0x7C,0x00,0x00,0xFF,0xFF,0x08,
 165                  0x08,0x08,0x1C,0x7F,0x00,0x00,0x00,0x00,
 166                  0x20,0x3F,0x3F,0x20,0x20,0x20,0x20,0x20,
 167                  0x30,0x38,0x3E,0x00,
 168                  0x00,0x00,0x00,0x00,0xF0,0x0C,0x3C,0xF0,  // -A-
 169                  0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,
 170                  0x43,0x40,0x40,0x43,0xFF,0xF0,0x00,0x00,
 171                  0x20,0x3E,0x3F,0x20,0x00,0x00,0x00,0x00,
 172                  0x20,0x3F,0x3E,0x20,
 173                  0x04,0xFC,0xFC,0x04,0x00,0x80,0xE4,0x7C,  // -K-
 174                  0x1C,0x04,0x04,0x00,0x00,0xFF,0xFF,0x78,
 175                  0x1E,0x7F,0xE1,0x80,0x00,0x00,0x00,0x00,
 176                  0x20,0x3F,0x3F,0x20,0x00,0x00,0x01,0x27,
 177                  0x3E,0x38,0x20,0x20,
 178                  0xE0,0xF0,0x18,0x0C,0x04,0x04,0x04,0x0C,  // -O-
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 4   

 179                  0x18,0xF0,0xE0,0x00,0xFF,0xFF,0x00,0x00,
 180                  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,
 181                  0x07,0x0F,0x18,0x30,0x20,0x20,0x20,0x30,
 182                  0x18,0x0F,0x07,0x00,
 183                  0x04,0xFC,0xFC,0x04,0x00,0x00,0x00,0x04,  // -U-
 184                  0xFC,0xFC,0x04,0x00,0x00,0xFF,0xFF,0x00,
 185                  0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 186                  0x00,0x0F,0x1F,0x30,0x20,0x20,0x20,0x30,
 187                  0x1F,0x0F,0x00,0x00,
 188                  0x7C,0x1C,0x0C,0x04,0x04,0xFC,0xFC,0x04,  // -T-
 189                  0x04,0x0C,0x1C,0x7C,0x00,0x00,0x00,0x00,
 190                  0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
 191                  0x00,0x00,0x00,0x20,0x20,0x3F,0x3F,0x20,
 192                  0x20,0x00,0x00,0x00,};
 193          unsigned char code clone[]={
 194                  0x00,0xFC,0x02,0x02,0x02,0x86,0x00,0x00,  // -C-
 195                  0x01,0x01,0x01,0x00,
 196                  0x00,0x02,0xFE,0x02,0x00,0xC0,0x00,0x01,  // -L-
 197                  0x01,0x01,0x01,0x01,
 198                  0x00,0xFC,0x02,0x02,0x02,0xFC,0x00,0x00,  // -O-
 199                  0x01,0x01,0x01,0x00,
 200                  0x02,0xFE,0x0E,0x70,0x82,0xFE,0x01,0x01,  // -N-
 201                  0x01,0x00,0x01,0x01,
 202                  0x02,0xFE,0x12,0x3A,0x02,0x86,0x01,0x01,  // -E-
 203                  0x01,0x01,0x01,0x01};
 204          unsigned char code press_start[]={
 205                  //press_start
 206                  0x00,0x02,0xFE,0x22,0x22,0x1C,0x00,0x01,  // -P-
 207                  0x01,0x01,0x00,0x00,
 208                  0x00,0x08,0xF8,0x10,0x08,0x08,0x00,0x01,  // -r-
 209                  0x01,0x01,0x01,0x01,
 210                  0x00,0xF0,0x28,0x28,0x28,0x30,0x00,0x00,  // -e-
 211                  0x01,0x01,0x01,0x01,
 212                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 213                  0x01,0x01,0x01,0x00,
 214                  0x00,0x90,0x28,0x28,0x28,0xD8,0x00,0x01,  // -s-
 215                  0x01,0x01,0x01,0x00,
 216                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
 217                  0x00,0x00,0x00,0x00,
 218                  0x00,0x8C,0x92,0x12,0x14,0xE6,0x00,0x01,  // -S-
 219                  0x00,0x01,0x01,0x00,
 220                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 221                  0x01,0x01,0x01,0x00,
 222                  0x00,0xC0,0x7A,0x46,0x78,0xC0,0x01,0x01,  // -A-
 223                  0x01,0x00,0x01,0x01,
 224                  0x02,0xFE,0x22,0x22,0x62,0x9C,0x01,0x01,  // -R-
 225                  0x01,0x00,0x00,0x00,
 226                  0x00,0x06,0x02,0xFE,0x02,0x06,0x00,0x00,  // -T-
 227                  0x01,0x01,0x01,0x00};
 228          
 229          unsigned char code prop[]={
 230          //make bar longer (L): 1
 231          0xFF,0x81,0x81,0xBF,0xBF,0xBF,0xBF,0xFF,
 232          //clear one area (C): 2
 233          0xFF,0xC3,0xBD,0xBD,0xBD,0xBD,0xDB,0xFF,
 234          //Win (W): 3
 235          0xFF,0xC1,0xBF,0xC3,0xC3,0xBF,0xC1,0xFF,
 236          //Die (D): 4
 237          0xFF,0x81,0x81,0xBD,0xBD,0xDB,0xE7,0xFF
 238          };
 239          
 240          unsigned char prop_exist=0;
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 5   

 241          bit longer=0;
 242          unsigned char longer_time=0;
 243          unsigned char prop_x=0;
 244          unsigned char prop_y=0;
 245          
 246          unsigned char prop_frame=0;
 247          
 248          void random_prop(){
 249   1              unsigned char prop_num,x,y,i;
 250   1              bit x_change;
 251   1              if(longer){
 252   2                      if(longer_time<255){
 253   3                              longer_time++;
 254   3                      }else{
 255   3                              longer=0;
 256   3                              longer_time=0;
 257   3                              game_status=11;
 258   3                      }
 259   2              }
 260   1              if(prop_exist==0){
 261   2                      prop_num=255-TL0;
 262   2                      switch(prop_num){
 263   3                              case 1:
 264   3                                      prop_exist=1;
 265   3                                      y=TL0;
 266   3                                      x=255-y;
 267   3                                      y=(255-y)/5+33;
 268   3                                      prop_x=x;
 269   3                                      prop_y=y;
 270   3                                      y=y/8;
 271   3                                      for(i=0;i<8;i++){
 272   4                                              if(x+i<64){
 273   5                                                      choose_screen(1);
 274   5                                                      x_change=0;
 275   5                                              }else{
 276   5                                                      x-=64;
 277   5                                                      choose_screen(2);
 278   5                                                      x_change=1;
 279   5                                              }
 280   4                                              lcd_write_command(0x40|(x+i));
 281   4                                              lcd_write_command(0xb8|y);
 282   4                                              lcd_write_data(prop[i]);
 283   4                                              if(x_change){
 284   5                                                      x+=64;
 285   5                                              }
 286   4                                      }
 287   3                                      break;
 288   3                              case 50:
 289   3                                      prop_exist=2;
 290   3                                      y=TL0;
 291   3                                      x=255-y;
 292   3                                      y=(255-y)/5+33;
 293   3                                      prop_x=x;
 294   3                                      prop_y=y;
 295   3                                      y=y/8;
 296   3                                      for(i=0;i<8;i++){
 297   4                                              if(x+i<64){
 298   5                                                      choose_screen(1);
 299   5                                                      x_change=0;
 300   5                                              }else{
 301   5                                                      x-=64;
 302   5                                                      choose_screen(2);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 6   

 303   5                                                      x_change=1;
 304   5                                              }
 305   4                                              lcd_write_command(0x40|(x+i));
 306   4                                              lcd_write_command(0xb8|y);
 307   4                                              lcd_write_data(prop[i+8]);
 308   4                                              if(x_change){
 309   5                                                      x+=64;
 310   5                                              }
 311   4                                      }
 312   3                                      break;
 313   3                              case 100:
 314   3                                      prop_exist=3;
 315   3                                      y=TL0;
 316   3                                      x=255-y;
 317   3                                      y=(255-y)/5+33;
 318   3                                      prop_x=x;
 319   3                                      prop_y=y;
 320   3                                      y=y/8;
 321   3                                      for(i=0;i<8;i++){
 322   4                                              if(x+i<64){
 323   5                                                      choose_screen(1);
 324   5                                                      x_change=0;
 325   5                                              }else{
 326   5                                                      x-=64;
 327   5                                                      choose_screen(2);
 328   5                                                      x_change=1;
 329   5                                              }
 330   4                                              lcd_write_command(0x40|(x+i));
 331   4                                              lcd_write_command(0xb8|y);
 332   4                                              lcd_write_data(prop[i+16]);
 333   4                                              if(x_change){
 334   5                                                      x+=64;
 335   5                                              }
 336   4                                      }
 337   3                                      break;
 338   3                              case 20:
 339   3                                      prop_exist=4;
 340   3                                      y=TL0;
 341   3                                      x=255-y;
 342   3                                      y=(255-y)/5+33;
 343   3                                      prop_x=x;
 344   3                                      prop_y=y;
 345   3                                      y=y/8;
 346   3                                      for(i=0;i<8;i++){
 347   4                                              if(x+i<64){
 348   5                                                      choose_screen(1);
 349   5                                                      x_change=0;
 350   5                                              }else{
 351   5                                                      x-=64;
 352   5                                                      choose_screen(2);
 353   5                                                      x_change=1;
 354   5                                              }
 355   4                                              lcd_write_command(0x40|(x+i));
 356   4                                              lcd_write_command(0xb8|y);
 357   4                                              lcd_write_data(prop[i+24]);
 358   4                                              if(x_change){
 359   5                                                      x+=64;
 360   5                                              }
 361   4                                      }
 362   3                                      break;
 363   3                              default:break;
 364   3                      }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 7   

 365   2              }else{
 366   2                      if(prop_frame>100){
 367   3                              x=prop_x;
 368   3                              y=prop_y;
 369   3                              y=y/8;
 370   3                              for(i=0;i<8;i++){
 371   4                                              if(x+i<64){
 372   5                                                      choose_screen(1);
 373   5                                                      x_change=0;
 374   5                                              }else{
 375   5                                                      x-=64;
 376   5                                                      choose_screen(2);
 377   5                                                      x_change=1;
 378   5                                              }
 379   4                                              lcd_write_command(0x40|(x+i));
 380   4                                              lcd_write_command(0xb8|y);
 381   4                                              lcd_write_data(0x00);
 382   4                                              if(x_change){
 383   5                                                      x+=64;
 384   5                                              }
 385   4                              }
 386   3                              prop_frame=0;
 387   3                              prop_exist=0;
 388   3                      }else{
 389   3                              prop_frame++;
 390   3                      }
 391   2              }
 392   1      }
 393          
 394          void clear_low_screen(){
 395   1              unsigned char x,y;
 396   1              choose_screen(0);
 397   1              for(x=4;x<8;x++){
 398   2                      for(y=0;y<64;y++){
 399   3                              lcd_write_command(0xb8|x);
 400   3                              lcd_write_command(0x40|y);
 401   3                              lcd_write_data(0x00);
 402   3                      }
 403   2              }
 404   1      }
 405          void show_life(unsigned char life){
 406   1              unsigned char x,y,i;
 407   1              bit flag;
 408   1              clear_low_screen();
 409   1                      for(i=0;i<6;i++){
 410   2                              for(y=0;y<12;y++){
 411   3                                      for(x=0;x<3;x++){
 412   4                                              flag=0;
 413   4                                              y+=20+15*i;
 414   4                                              x+=4;
 415   4                                              if(y<64){
 416   5                                                      choose_screen(1);
 417   5                                              }else{
 418   5                                                      choose_screen(2);
 419   5                                                      y-=64;
 420   5                                                      flag=1;
 421   5                                              }
 422   4                                              lcd_write_command(0xb8|x);
 423   4                                              lcd_write_command(0x40|y);
 424   4                                              if(flag){
 425   5                                                      y+=64;
 426   5                                              }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 8   

 427   4                                              y-=20+15*i;
 428   4                                              x-=4;
 429   4                                              if(i<5){
 430   5                                                      lcd_write_data(lifefont[y+x*12+i*36]);
 431   5                                              }else{
 432   5                                                      lcd_write_data(number[y+12*x+life*36]);
 433   5                                              }
 434   4                                      }       
 435   3                              }
 436   2                      }       
 437   1      }
 438          void show_level(unsigned char level){
 439   1              unsigned char x,y,i;
 440   1              bit flag;
 441   1              clear_low_screen();
 442   1                      for(i=0;i<7;i++){
 443   2                              for(y=0;y<12;y++){
 444   3                                      for(x=0;x<3;x++){
 445   4                                              flag=0;
 446   4                                              y+=20+15*i;
 447   4                                              x+=4;
 448   4                                              if(y<64){
 449   5                                                      choose_screen(1);
 450   5                                              }else{
 451   5                                                      choose_screen(2);
 452   5                                                      y-=64;
 453   5                                                      flag=1;
 454   5                                              }
 455   4                                              lcd_write_command(0xb8|x);
 456   4                                              lcd_write_command(0x40|y);
 457   4                                              if(flag){
 458   5                                                      y+=64;
 459   5                                              }
 460   4                                              y-=20+15*i;
 461   4                                              x-=4;
 462   4                                              if(i<6){
 463   5                                                      lcd_write_data(levelfont[y+x*12+i*36]);
 464   5                                              }else{
 465   5                                                      lcd_write_data(number[y+12*x+level*36]);
 466   5                                              }
 467   4                                      }       
 468   3                              }
 469   2                      }       
 470   1      }
 471          
 472          
 473          //variables of block
 474          //block1 for level 1
 475          /*   for test of win 
 476          unsigned char code block1[]={
 477          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 478          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 479          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 480          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 481          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 482          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 483          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 484          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 485          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 486          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 487          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 488          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 9   

 489          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 490          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 491          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 492          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 493          };
 494          */
 495          ///*
 496          unsigned char code block1[]={
 497          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 498          0xFF,0xF7,0xEF,0xEF,0xDF,0xDF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 499          0xFF,0xFF,0xFF,0x7F,0x9F,0xE7,0xFB,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 500          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 501          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFD,0xFD,
 502          0x0D,0xED,0xED,0xED,0xED,0xED,0x6D,0x6D,0x2C,0x2D,0xED,0xED,0xED,0xED,0xED,0xED,
 503          0xED,0xED,0x2D,0x2C,0x6D,0x6D,0x6D,0xED,0xED,0xED,0xED,0xED,0x0D,0xFD,0xFD,0x01,
 504          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 505          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,
 506          0x80,0xBF,0xBF,0xBF,0xBC,0xBC,0xBE,0xBE,0xB3,0xAD,0xAF,0xB7,0xBB,0xB9,0xB7,0xAF,
 507          0xAF,0xB5,0xBB,0xBF,0xBE,0xBE,0xBE,0xBF,0xBF,0xBF,0xBF,0xBF,0x80,0xFF,0xFF,0x00,
 508          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 509          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFD,0xFD,
 510          0xFD,0xFD,0xCD,0xC1,0xF1,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
 511          0xFD,0xFD,0xFD,0xFD,0xF1,0xC1,0xCD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFC,
 512          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 513          };
 514          //*/
 515          //block2 for level 2
 516          /*   for test of win 
 517          unsigned char code block2[]={
 518          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 519          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 520          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 521          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 522          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 523          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 524          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 525          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 526          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 527          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 528          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 529          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 530          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 531          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 532          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 533          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 534          };
 535          */
 536          ///*
 537          unsigned char code block2[]={
 538          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 539          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,
 540          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 541          0xFF,0xFF,0xFF,0x7F,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 542          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 543          0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,0x07,0x01,0x06,0x03,0x01,0x01,0x01,0x01,
 544          0x03,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x03,0x01,0x01,0x01,0x01,0x03,
 545          0x07,0x01,0x06,0x03,0x01,0x01,0x71,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 546          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 547          0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,
 548          0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xE0,0xC0,0x80,0x80,0x80,0x80,
 549          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xC0,0xE0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 550          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 10  

 551          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 552          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 553          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 554          };
 555          //*/
 556          //block3 for level 3
 557          /*   for test of win 
 558          unsigned char code block3[]={
 559          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 560          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 561          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 562          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 563          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 564          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 565          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 566          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 567          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 568          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 569          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 570          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 571          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 572          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 573          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 574          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 575          };
 576          */
 577          ///*
 578          unsigned char code block3[]={
 579          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 580          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 581          0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 582          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 583          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x1F,
 584          0x4F,0xE7,0xF3,0xFB,0xF9,0xFD,0xFD,0xFC,0xFE,0xBE,0x1E,0x0F,0x07,0x03,0x01,0x01,
 585          0x40,0xE0,0xF0,0xE0,0x41,0x01,0x03,0x07,0x0E,0x1E,0xBE,0xFC,0xFD,0xFD,0xF9,0xFB,
 586          0xF3,0xE7,0x4F,0x1F,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 587          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 588          0xFE,0xFC,0xF9,0xFB,0xF3,0xF7,0xF7,0xE7,0xEF,0xEF,0xCF,0xDE,0xDC,0xD8,0xD0,0xD0,
 589          0xC0,0xC0,0xC1,0xC0,0xD0,0xD0,0xD8,0xDC,0xCE,0xEF,0xEF,0xE7,0xF7,0xF7,0xF3,0xFB,
 590          0xF9,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 591          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 592          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 593          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
 594          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
 595          };
 596          //*/
 597          
 598          
 599          //functions of block
 600          //draw block at the begining
 601          void draw_block(){
 602   1              unsigned char x,y;
 603   1              choose_screen(0);
 604   1              for(x=0;x<4;x++){
 605   2                      for(y=0;y<64;y++){
 606   3                              lcd_write_command(0xb8|x);
 607   3                              lcd_write_command(0x40|y);
 608   3                              switch(level){
 609   4                                      case 1: lcd_write_data(block1[x*64+y]);break;
 610   4                                      case 2: lcd_write_data(block2[x*64+y]);break;
 611   4                                      case 3: lcd_write_data(block3[x*64+y]);break;
 612   4                                      default: lcd_write_data(block1[x*64+y]);break;
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 11  

 613   4                              }
 614   3                      }       
 615   2              }
 616   1      }
 617          //check block
 618          void check_block(){
 619   1              unsigned char i,x,y,rdata;
 620   1              unsigned char now_game_status=game_status;
 621   1              game_status=2;
 622   1              for(i=1;i<3;i++){
 623   2                      choose_screen(i);
 624   2                      for(x=0;x<4;x++){
 625   3                              for(y=0;y<64;y++){
 626   4                                      lcd_write_command(0xb8|x);
 627   4                                      lcd_write_command(0x40|y);
 628   4                                      rdata=lcd_read_data();
 629   4                                      if(rdata!=0x00){
 630   5                                              game_status=now_game_status;
 631   5                                              break;
 632   5                                      }
 633   4                              }
 634   3                              if(game_status==now_game_status){
 635   4                                      break;
 636   4                              }
 637   3                      }
 638   2                      if(game_status==now_game_status){
 639   3                              break;
 640   3                      }
 641   2              }
 642   1      }
 643          
 644          //variables of bar
 645          //location of the most left point of bar
 646          unsigned char code o_bar_sit[]={0,63};
 647          unsigned char bar_sit[2];//(x,y)
 648          unsigned char temp_bar_sit_x;
 649          //bar speed
 650          unsigned char o_bar_speed;
 651          unsigned char bar_speed;
 652          //bar length
 653          unsigned char o_bar_len;
 654          unsigned char bar_len;
 655          //bar direction
 656          unsigned char code o_bar_direction=1;
 657          unsigned char bar_direction;//0:left, 1:right
 658          
 659          //functions for bar
 660          //button
 661          void handle_button(){
 662   1              if(leftB==0){
 663   2                      bar_direction=0;
 664   2              }
 665   1              if(rightB==0){
 666   2                      bar_direction=1;
 667   2              }
 668   1              if(leftB==1 && rightB==1){
 669   2                      bar_direction=2;
 670   2              }
 671   1      }
 672          //init bar
 673          void init_bar(){
 674   1              unsigned char i;
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 12  

 675   1              switch(level){
 676   2                      case 1: o_bar_speed=1;o_bar_len=24;break;
 677   2                      case 2: o_bar_speed=2;o_bar_len=20;break;
 678   2                      case 3: o_bar_speed=3;o_bar_len=12;break;
 679   2                      default:o_bar_speed=1;o_bar_len=24;break;
 680   2              }
 681   1              bar_sit[0]=o_bar_sit[0];
 682   1              bar_sit[1]=o_bar_sit[1];
 683   1              bar_speed=o_bar_speed;
 684   1              bar_len=o_bar_len;
 685   1              bar_direction=o_bar_direction;
 686   1              for(i=0;i<bar_len;i++){
 687   2                      set_dot(bar_sit[0]+i,bar_sit[1]);
 688   2              }
 689   1      }
 690          //draw bar
 691          void draw_bar(){
 692   1              unsigned char i;
 693   1              if(bar_direction==1){
 694   2                      //go right
 695   2                      if(bar_sit[0]<=128-bar_len-bar_speed && bar_len+bar_speed<=128){
 696   3                              for(i=1;i<bar_speed+1;i++){
 697   4                                      //clear preivous bar
 698   4                                      clear_dot(bar_sit[0]+i-1,bar_sit[1]);
 699   4                                      //draw new bar
 700   4                                      set_dot(bar_sit[0]+bar_len-1+i,bar_sit[1]);
 701   4                              }
 702   3                              //recalculate bar location
 703   3                              bar_sit[0]+=bar_speed;
 704   3                      }
 705   2              }else if(bar_direction==0){
 706   2                      //go left
 707   2                      if(bar_sit[0]>=0+bar_speed){
 708   3                              for(i=1;i<bar_speed+1;i++){
 709   4                                      //clear preivous bar
 710   4                                      clear_dot(bar_sit[0]+bar_len-i,bar_sit[1]);
 711   4                                      //draw new bar
 712   4                                      set_dot(bar_sit[0]-i,bar_sit[1]);
 713   4                              }
 714   3                              //recalculate bar location
 715   3                              bar_sit[0]-=bar_speed;
 716   3                      }
 717   2              }
 718   1      }
 719          
 720          //variables of ball
 721          //location of ball
 722          unsigned char code o_ball_sit[]={7,62};//(x,y)
 723          unsigned char ball_sit[2];//(x,y)
 724          //ball speed
 725          unsigned char code o_ball_speed[]={0,1};
 726          unsigned char ball_speed[2];//(x,y)
 727          //ball direction
 728          bit o_ball_direction_x=0;
 729          bit ball_direction_x;//x: 0->left, 1->right.
 730          bit o_ball_direction_y=0;  
 731          bit ball_direction_y;//y: 0->down, 1->up.
 732          
 733          //functions for ball
 734          //init ball
 735          void init_ball(){
 736   1              ball_sit[0]=o_ball_sit[0];
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 13  

 737   1              ball_sit[1]=o_ball_sit[1];
 738   1              ball_speed[0]=o_ball_speed[0];
 739   1              ball_speed[1]=o_ball_speed[1];
 740   1              ball_direction_x=o_ball_direction_x;
 741   1              ball_direction_y=o_ball_direction_y;
 742   1              set_dot(ball_sit[0],ball_sit[1]);
 743   1              set_dot(ball_sit[0],ball_sit[1]-1);
 744   1              set_dot(ball_sit[0]+1,ball_sit[1]);
 745   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);   
 746   1      }
 747          //clear preview ball
 748          void clear_ball(){
 749   1              clear_dot(ball_sit[0],ball_sit[1]);
 750   1              clear_dot(ball_sit[0]+1,ball_sit[1]);
 751   1              clear_dot(ball_sit[0],ball_sit[1]-1);
 752   1              clear_dot(ball_sit[0]+1,ball_sit[1]-1);
 753   1      }
 754          //calculate now ball
 755          void move_ball(){
 756   1              bit next_dot_y,next_dot_x;
 757   1              unsigned char i;
 758   1              bit x_change;
 759   1              //check whether the direction should be changed
 760   1              LS1=change;
 761   1              if(ball_direction_y){
 762   2                      if(read_dot(ball_sit[0],ball_sit[1]-2) || read_dot(ball_sit[0]+1,ball_sit[1]-2) || (ball_sit[1]-1)==0){
 763   3                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 764   4                                      prop_y=prop_y/8;
 765   4                                      for(i=0;i<8;i++){
 766   5                                                      if(prop_x+i<64){
 767   6                                                              choose_screen(1);
 768   6                                                              x_change=0;
 769   6                                                      }else{
 770   6                                                              prop_x-=64;
 771   6                                                              choose_screen(2);
 772   6                                                              x_change=1;
 773   6                                                      }
 774   5                                                      lcd_write_command(0x40|(prop_x+i));
 775   5                                                      lcd_write_command(0xb8|prop_y);
 776   5                                                      lcd_write_data(0x00);
 777   5                                                      if(x_change){
 778   6                                                              prop_x+=64;
 779   6                                                      }
 780   5                                      }
 781   4                                      prop_y=prop_y*8;
 782   4                                      prop_frame=0;
 783   4                                      switch(prop_exist){
 784   5                                              case 1:longer=1;game_status=7;break;
 785   5                                              case 2:game_status=8;break;
 786   5                                              case 3:game_status=9;break;
 787   5                                              case 4:game_status=10;break;
 788   5                                              default:break;
 789   5                                      }
 790   4                                      prop_exist=0;
 791   4                              }else{
 792   4                                      LS1=do_1;
 793   4                                      do_doing=1;
 794   4                                      if((ball_sit[1]-1)!=0){
 795   5                                              clear_dot(ball_sit[0],ball_sit[1]-2);
 796   5                                              clear_dot(ball_sit[0]+1,ball_sit[1]-2);
 797   5                                              //
 798   5                                              clear_dot(ball_sit[0]-1,ball_sit[1]-2);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 14  

 799   5                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
 800   5                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
 801   5                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
 802   5                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
 803   5                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
 804   5                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
 805   5                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
 806   5                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
 807   5                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
 808   5                                              //
 809   5                                              if((ball_sit[1]-2)!=0){
 810   6                                                      clear_dot(ball_sit[0],ball_sit[1]-3);
 811   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-3);
 812   6                                                      //
 813   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-3);
 814   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
 815   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
 816   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
 817   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
 818   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
 819   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
 820   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
 821   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
 822   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
 823   6                                                      
 824   6                                                              if((ball_sit[1]-3)!=0){
 825   7                                                                      clear_dot(ball_sit[0],ball_sit[1]-4);
 826   7                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-4);
 827   7                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-4);
 828   7                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-4);
 829   7                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-4);
 830   7                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-4);
 831   7                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-4);
 832   7                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-4);
 833   7                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-4);
 834   7                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-4);
 835   7                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-4);
 836   7                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-4);
 837   7                                                              
 838   7                                                                      if((ball_sit[1]-4)!=0){
 839   8                                                                              clear_dot(ball_sit[0],ball_sit[1]-5);
 840   8                                                                              clear_dot(ball_sit[0]+1,ball_sit[1]-5);
 841   8                                                                              clear_dot(ball_sit[0]-1,ball_sit[1]-5);
 842   8                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-5);
 843   8                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-5);
 844   8                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-5);
 845   8                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-5);
 846   8                                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-5);
 847   8                                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-5);
 848   8                                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-5);
 849   8                                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-5);
 850   8                                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-5);
 851   8                                                      
 852   8                                                                              if((ball_sit[1]-5)!=0){
 853   9                                                                                      clear_dot(ball_sit[0],ball_sit[1]-6);
 854   9                                                                                      clear_dot(ball_sit[0]+1,ball_sit[1]-6);
 855   9                                                                                      clear_dot(ball_sit[0]-1,ball_sit[1]-6);
 856   9                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-6);
 857   9                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-6);
 858   9                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-6);
 859   9                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-6);
 860   9                                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-6);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 15  

 861   9                                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-6);
 862   9                                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-6);
 863   9                                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-6);
 864   9                                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-6);
 865   9                                                                              }
 866   8                                                                      }
 867   7                                                              }
 868   6                                              //
 869   6                                              }
 870   5                                      }
 871   4                                      ball_direction_y=~ball_direction_y;
 872   4                              }       
 873   3                      }
 874   2              }else{
 875   2                      if(read_dot(ball_sit[0],ball_sit[1]+1) || read_dot(ball_sit[0]+1,ball_sit[1]+1)){
 876   3                              if(ball_sit[1]!=63){
 877   4                                      if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 878   5                                              prop_y=prop_y/8;
 879   5                                              for(i=0;i<8;i++){
 880   6                                                              if(prop_x+i<64){
 881   7                                                                      choose_screen(1);
 882   7                                                                      x_change=0;
 883   7                                                              }else{
 884   7                                                                      prop_x-=64;
 885   7                                                                      choose_screen(2);
 886   7                                                                      x_change=1;
 887   7                                                              }
 888   6                                                              lcd_write_command(0x40|(prop_x+i));
 889   6                                                              lcd_write_command(0xb8|prop_y);
 890   6                                                              lcd_write_data(0x00);
 891   6                                                              if(x_change){
 892   7                                                                      prop_x+=64;
 893   7                                                              }
 894   6                                              }
 895   5                                              prop_y=prop_y*8;
 896   5                                              prop_frame=0;
 897   5                                              switch(prop_exist){
 898   6                                                      case 1:longer=1;game_status=7;break;
 899   6                                                      case 2:game_status=8;break;
 900   6                                                      case 3:game_status=9;break;
 901   6                                                      case 4:game_status=10;break;
 902   6                                                      default:break;
 903   6                                              }
 904   5                                              prop_exist=0;
 905   5                                      }else{
 906   5                                              LS1=do_1;
 907   5                                              do_doing=1;
 908   5                                              if(ball_sit[1]+1!=bar_sit[1]){
 909   6                                                      clear_dot(ball_sit[0],ball_sit[1]+1);
 910   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+1);
 911   6                                                      //
 912   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+1);
 913   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+1);
 914   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+1);
 915   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+1);
 916   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+1);
 917   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+1);
 918   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+1);
 919   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+1);
 920   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+1);
 921   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+1);
 922   6                                                      //
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 16  

 923   6                                                      clear_dot(ball_sit[0],ball_sit[1]+2);
 924   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+2);
 925   6                                                      //
 926   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+2);
 927   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+2);
 928   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+2);
 929   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+2);
 930   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+2);
 931   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+2);
 932   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+2);
 933   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+2);
 934   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+2);
 935   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+2);
 936   6                                                      //
 937   6                                                      clear_dot(ball_sit[0],ball_sit[1]+3);
 938   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+3);
 939   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+3);
 940   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+3);
 941   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+3);
 942   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+3);
 943   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+3);
 944   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+3);
 945   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+3);
 946   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+3);
 947   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+3);
 948   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+3);
 949   6                                                      clear_dot(ball_sit[0],ball_sit[1]+4);
 950   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+4);
 951   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+4);
 952   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+4);
 953   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+4);
 954   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+4);
 955   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+4);
 956   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+4);
 957   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+4);
 958   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+4);
 959   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+4);
 960   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+4);
 961   6                                                      clear_dot(ball_sit[0],ball_sit[1]+5);
 962   6                                                      clear_dot(ball_sit[0]+1,ball_sit[1]+5);
 963   6                                                      clear_dot(ball_sit[0]-1,ball_sit[1]+5);
 964   6                                                      clear_dot(ball_sit[0]-2,ball_sit[1]+5);
 965   6                                                      clear_dot(ball_sit[0]-3,ball_sit[1]+5);
 966   6                                                      clear_dot(ball_sit[0]-4,ball_sit[1]+5);
 967   6                                                      clear_dot(ball_sit[0]-5,ball_sit[1]+5);
 968   6                                                      clear_dot(ball_sit[0]+2,ball_sit[1]+5);
 969   6                                                      clear_dot(ball_sit[0]+3,ball_sit[1]+5);
 970   6                                                      clear_dot(ball_sit[0]+4,ball_sit[1]+5);
 971   6                                                      clear_dot(ball_sit[0]+5,ball_sit[1]+5);
 972   6                                                      clear_dot(ball_sit[0]+6,ball_sit[1]+5);
 973   6                                                      //
 974   6                                              }else{
 975   6                                                      LS1=do_2;
 976   6                                                      do_doing=1;
 977   6                                                      ball_speed[0]=bar_speed;
 978   6                                                      ball_direction_x=bar_direction;
 979   6                                              }
 980   5                                              ball_direction_y=~ball_direction_y;
 981   5                                      }
 982   4                              }else{
 983   4                                      game_status=0;
 984   4                              }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 17  

 985   3                      }
 986   2              }
 987   1              if(game_status==1){
 988   2              if(ball_direction_x){
 989   3                      if(read_dot(ball_sit[0]+2,ball_sit[1]) || read_dot(ball_sit[0]+2,ball_sit[1]-1) || (ball_sit[0]+1)==127)
             -{
 990   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
 991   5                                      prop_y=prop_y/8;
 992   5                                      for(i=0;i<8;i++){
 993   6                                                      if(prop_x+i<64){
 994   7                                                              choose_screen(1);
 995   7                                                              x_change=0;
 996   7                                                      }else{
 997   7                                                              prop_x-=64;
 998   7                                                              choose_screen(2);
 999   7                                                              x_change=1;
1000   7                                                      }
1001   6                                                      lcd_write_command(0x40|(prop_x+i));
1002   6                                                      lcd_write_command(0xb8|prop_y);
1003   6                                                      lcd_write_data(0x00);
1004   6                                                      if(x_change){
1005   7                                                              prop_x+=64;
1006   7                                                      }
1007   6                                      }
1008   5                                      prop_y=prop_y*8;
1009   5                                      prop_frame=0;
1010   5                                      switch(prop_exist){
1011   6                                              case 1:longer=1;game_status=7;break;
1012   6                                              case 2:game_status=8;break;
1013   6                                              case 3:game_status=9;break;
1014   6                                              case 4:game_status=10;break;
1015   6                                              default:break;
1016   6                                      }
1017   5                                      prop_exist=0;
1018   5                              }else{
1019   5                                      LS1=do_1;
1020   5                                      do_doing=1;
1021   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]);
1022   5                                      clear_dot(ball_sit[0]+2,ball_sit[1]-1);
1023   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]);
1024   5                                      clear_dot(ball_sit[0]+3,ball_sit[1]-1);
1025   5                                      //
1026   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]);
1027   5                                      clear_dot(ball_sit[0]+4,ball_sit[1]-1);
1028   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]);
1029   5                                      clear_dot(ball_sit[0]+5,ball_sit[1]-1);
1030   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]);
1031   5                                      clear_dot(ball_sit[0]+6,ball_sit[1]-1);
1032   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]);
1033   5                                      clear_dot(ball_sit[0]+7,ball_sit[1]-1);
1034   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]);
1035   5                                      clear_dot(ball_sit[0]+8,ball_sit[1]-1);
1036   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]);
1037   5                                      clear_dot(ball_sit[0]+9,ball_sit[1]-1);
1038   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]);
1039   5                                      clear_dot(ball_sit[0]+10,ball_sit[1]-1);
1040   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]);
1041   5                                      clear_dot(ball_sit[0]+11,ball_sit[1]-1);
1042   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]);
1043   5                                      clear_dot(ball_sit[0]+12,ball_sit[1]-1);
1044   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]);
1045   5                                      clear_dot(ball_sit[0]+13,ball_sit[1]-1);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 18  

1046   5                                      if(ball_sit[1]-1!=0){
1047   6                                              clear_dot(ball_sit[0]+2,ball_sit[1]-2);
1048   6                                              clear_dot(ball_sit[0]+3,ball_sit[1]-2);
1049   6                                              clear_dot(ball_sit[0]+4,ball_sit[1]-2);
1050   6                                              clear_dot(ball_sit[0]+5,ball_sit[1]-2);
1051   6                                              clear_dot(ball_sit[0]+6,ball_sit[1]-2);
1052   6                                              clear_dot(ball_sit[0]+7,ball_sit[1]-2);
1053   6                                              clear_dot(ball_sit[0]+8,ball_sit[1]-2);
1054   6                                              clear_dot(ball_sit[0]+9,ball_sit[1]-2);
1055   6                                              clear_dot(ball_sit[0]+10,ball_sit[1]-2);
1056   6                                              clear_dot(ball_sit[0]+11,ball_sit[1]-2);
1057   6                                              clear_dot(ball_sit[0]+12,ball_sit[1]-2);
1058   6                                              clear_dot(ball_sit[0]+13,ball_sit[1]-2);
1059   6                                              if(ball_sit[1]-2!=0){
1060   7                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-3);
1061   7                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-3);
1062   7                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-3);
1063   7                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-3);
1064   7                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-3);
1065   7                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-3);
1066   7                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-3);
1067   7                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-3);
1068   7                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-3);
1069   7                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-3);
1070   7                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-3);
1071   7                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-3);
1072   7                                                      if(ball_sit[1]-3!=0){
1073   8                                                              clear_dot(ball_sit[0]+2,ball_sit[1]-4);
1074   8                                                              clear_dot(ball_sit[0]+3,ball_sit[1]-4);
1075   8                                                              clear_dot(ball_sit[0]+4,ball_sit[1]-4);
1076   8                                                              clear_dot(ball_sit[0]+5,ball_sit[1]-4);
1077   8                                                              clear_dot(ball_sit[0]+6,ball_sit[1]-4);
1078   8                                                              clear_dot(ball_sit[0]+7,ball_sit[1]-4);
1079   8                                                              clear_dot(ball_sit[0]+8,ball_sit[1]-4);
1080   8                                                              clear_dot(ball_sit[0]+9,ball_sit[1]-4);
1081   8                                                              clear_dot(ball_sit[0]+10,ball_sit[1]-4);
1082   8                                                              clear_dot(ball_sit[0]+11,ball_sit[1]-4);
1083   8                                                              clear_dot(ball_sit[0]+12,ball_sit[1]-4);
1084   8                                                              clear_dot(ball_sit[0]+13,ball_sit[1]-4);
1085   8                                                              if(ball_sit[1]-4!=0){
1086   9                                                                      clear_dot(ball_sit[0]+2,ball_sit[1]-5);
1087   9                                                                      clear_dot(ball_sit[0]+3,ball_sit[1]-5);
1088   9                                                                      clear_dot(ball_sit[0]+4,ball_sit[1]-5);
1089   9                                                                      clear_dot(ball_sit[0]+5,ball_sit[1]-5);
1090   9                                                                      clear_dot(ball_sit[0]+6,ball_sit[1]-5);
1091   9                                                                      clear_dot(ball_sit[0]+7,ball_sit[1]-5);
1092   9                                                                      clear_dot(ball_sit[0]+8,ball_sit[1]-5);
1093   9                                                                      clear_dot(ball_sit[0]+9,ball_sit[1]-5);
1094   9                                                                      clear_dot(ball_sit[0]+10,ball_sit[1]-5);
1095   9                                                                      clear_dot(ball_sit[0]+11,ball_sit[1]-5);
1096   9                                                                      clear_dot(ball_sit[0]+12,ball_sit[1]-5);
1097   9                                                                      clear_dot(ball_sit[0]+13,ball_sit[1]-5);
1098   9      
1099   9                                                              }
1100   8                                                      }
1101   7                                              }
1102   6                                      }
1103   5                                      //
1104   5                                      ball_direction_x=~ball_direction_x;
1105   5                              }
1106   4                      }
1107   3              }else{
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 19  

1108   3                      if(read_dot(ball_sit[0]-1,ball_sit[1]) || read_dot(ball_sit[0]-1,ball_sit[1]-1) || ball_sit[0]==0){
1109   4                              if(ball_sit[1]>34 && ball_sit[1]<62 && ball_sit[0]<126 && ball_sit[0]>0){
1110   5                                      prop_y=prop_y/8;
1111   5                                      for(i=0;i<8;i++){
1112   6                                                      if(prop_x+i<64){
1113   7                                                              choose_screen(1);
1114   7                                                              x_change=0;
1115   7                                                      }else{
1116   7                                                              prop_x-=64;
1117   7                                                              choose_screen(2);
1118   7                                                              x_change=1;
1119   7                                                      }
1120   6                                                      lcd_write_command(0x40|(prop_x+i));
1121   6                                                      lcd_write_command(0xb8|prop_y);
1122   6                                                      lcd_write_data(0x00);
1123   6                                                      if(x_change){
1124   7                                                              prop_x+=64;
1125   7                                                      }
1126   6                                      }
1127   5                                      prop_y=prop_y*8;
1128   5                                      prop_frame=0;
1129   5                                      switch(prop_exist){
1130   6                                              case 1:longer=1;game_status=7;break;
1131   6                                              case 2:game_status=8;break;
1132   6                                              case 3:game_status=9;break;
1133   6                                              case 4:game_status=10;break;
1134   6                                              default:break;
1135   6                                      }
1136   5                                      prop_exist=0;
1137   5                              }else{
1138   5                                      LS1=do_1;
1139   5                                      do_doing=1;
1140   5                                      if(ball_sit[0]!=0){
1141   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]);
1142   6                                              clear_dot(ball_sit[0]-1,ball_sit[1]-1);
1143   6                                              //
1144   6                                              if((ball_sit[0]-1)!=0){
1145   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]);
1146   7                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-1);
1147   7                                                      if(ball_sit[1]-1!=0){
1148   8                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-2);
1149   8                                                              if(ball_sit[1]-2!=0){
1150   9                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-3);
1151   9                                                                      if(ball_sit[1]-3!=0){
1152  10                                                                              clear_dot(ball_sit[0]-2,ball_sit[1]-4);
1153  10                                                                              if(ball_sit[1]-4!=0){
1154  11                                                                                      clear_dot(ball_sit[0]-2,ball_sit[1]-5);
1155  11      
1156  11                                                                              }
1157  10                                                                      }
1158   9                                                              }
1159   8                                                      }
1160   7                                              if((ball_sit[0]-2)!=0){
1161   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]);
1162   8                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-1);
1163   8                                                              if(ball_sit[1]-1!=0){
1164   9                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-2);
1165   9                                                              if(ball_sit[1]-2!=0){
1166  10                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-3);
1167  10                                                                      if(ball_sit[1]-3!=0){
1168  11                                                                              clear_dot(ball_sit[0]-3,ball_sit[1]-4);
1169  11                                                                              if(ball_sit[1]-4!=0){
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 20  

1170  12                                                                                      clear_dot(ball_sit[0]-3,ball_sit[1]-5);
1171  12      
1172  12                                                                              }
1173  11                                                                      }
1174  10                                                              }
1175   9                                                      }
1176   8                                              if((ball_sit[0]-3)!=0){
1177   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]);
1178   9                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-1);
1179   9                                                              if(ball_sit[1]-1!=0){
1180  10                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-2);
1181  10                                                              if(ball_sit[1]-2!=0){
1182  11                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-3);
1183  11                                                                      if(ball_sit[1]-3!=0){
1184  12                                                                              clear_dot(ball_sit[0]-4,ball_sit[1]-4);
1185  12                                                                              if(ball_sit[1]-4!=0){
1186  13                                                                                      clear_dot(ball_sit[0]-4,ball_sit[1]-5);
1187  13      
1188  13                                                                              }
1189  12                                                                      }
1190  11                                                              }
1191  10                                                      }
1192   9                                              if((ball_sit[0]-4)!=0){
1193  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]);
1194  10                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-1);
1195  10                                                              if(ball_sit[1]-1!=0){
1196  11                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-2);
1197  11                                                              if(ball_sit[1]-2!=0){
1198  12                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-3);
1199  12                                                                      if(ball_sit[1]-3!=0){
1200  13                                                                              clear_dot(ball_sit[0]-5,ball_sit[1]-4);
1201  13                                                                              if(ball_sit[1]-4!=0){
1202  14                                                                                      clear_dot(ball_sit[0]-5,ball_sit[1]-5);
1203  14      
1204  14                                                                              }
1205  13                                                                      }
1206  12                                                              }
1207  11                                                      }
1208  10                                              if((ball_sit[0]-5)!=0){
1209  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]);
1210  11                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-1);
1211  11                                                              if(ball_sit[1]-1!=0){
1212  12                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-2);
1213  12                                                              if(ball_sit[1]-2!=0){
1214  13                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-3);
1215  13                                                                      if(ball_sit[1]-3!=0){
1216  14                                                                              clear_dot(ball_sit[0]-6,ball_sit[1]-4);
1217  14                                                                              if(ball_sit[1]-4!=0){
1218  15                                                                                      clear_dot(ball_sit[0]-6,ball_sit[1]-5);
1219  15      
1220  15                                                                              }
1221  14                                                                      }
1222  13                                                              }
1223  12                                                      }
1224  11                                              if((ball_sit[0]-6)!=0){
1225  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]);
1226  12                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-1);
1227  12                                                              if(ball_sit[1]-1!=0){
1228  13                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-2);
1229  13                                                              if(ball_sit[1]-2!=0){
1230  14                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-3);
1231  14                                                                      if(ball_sit[1]-3!=0){
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 21  

1232  15                                                                              clear_dot(ball_sit[0]-7,ball_sit[1]-4);
1233  15                                                                              if(ball_sit[1]-4!=0){
1234  16                                                                                      clear_dot(ball_sit[0]-7,ball_sit[1]-5);
1235  16      
1236  16                                                                              }
1237  15                                                                      }
1238  14                                                              }
1239  13                                                      }
1240  12                                              if((ball_sit[0]-7)!=0){
1241  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]);
1242  13                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-1);
1243  13                                                              if(ball_sit[1]-1!=0){
1244  14                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-2);
1245  14                                                              if(ball_sit[1]-2!=0){
1246  15                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-3);
1247  15                                                                      if(ball_sit[1]-3!=0){
1248  16                                                                              clear_dot(ball_sit[0]-8,ball_sit[1]-4);
1249  16                                                                              if(ball_sit[1]-4!=0){
1250  17                                                                                      clear_dot(ball_sit[0]-8,ball_sit[1]-5);
1251  17      
1252  17                                                                              }
1253  16                                                                      }
1254  15                                                              }
1255  14                                                      }
1256  13                                              if((ball_sit[0]-8)!=0){
1257  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]);
1258  14                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-1);
1259  14                                                              if(ball_sit[1]-1!=0){
1260  15                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-2);
1261  15                                                              if(ball_sit[1]-2!=0){
1262  16                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-3);
1263  16                                                                      if(ball_sit[1]-3!=0){
1264  17                                                                              clear_dot(ball_sit[0]-9,ball_sit[1]-4);
1265  17                                                                              if(ball_sit[1]-4!=0){
1266  18                                                                                      clear_dot(ball_sit[0]-9,ball_sit[1]-5);
1267  18      
1268  18                                                                              }
1269  17                                                                      }
1270  16                                                              }
1271  15                                                      }
1272  14                                              if((ball_sit[0]-9)!=0){
1273  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]);
1274  15                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-1);
1275  15                                                              if(ball_sit[1]-1!=0){
1276  16                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-2);
1277  16                                                              if(ball_sit[1]-2!=0){
1278  17                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-3);
1279  17                                                                      if(ball_sit[1]-3!=0){
1280  18                                                                              clear_dot(ball_sit[0]-10,ball_sit[1]-4);
1281  18                                                                              if(ball_sit[1]-4!=0){
1282  19                                                                                      clear_dot(ball_sit[0]-10,ball_sit[1]-5);
1283  19      
1284  19                                                                              }
1285  18                                                                      }
1286  17                                                              }
1287  16                                                      }
1288  15                                              if((ball_sit[0]-10)!=0){
1289  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]);
1290  16                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-1);
1291  16                                                              if(ball_sit[1]-1!=0){
1292  17                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-2);
1293  17                                                              if(ball_sit[1]-2!=0){
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 22  

1294  18                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-3);
1295  18                                                                      if(ball_sit[1]-3!=0){
1296  19                                                                              clear_dot(ball_sit[0]-11,ball_sit[1]-4);
1297  19                                                                              if(ball_sit[1]-4!=0){
1298  20                                                                                      clear_dot(ball_sit[0]-11,ball_sit[1]-5);
1299  20      
1300  20                                                                              }
1301  19                                                                      }
1302  18                                                              }
1303  17                                                      }
1304  16                                              if((ball_sit[0]-11)!=0){
1305  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]);
1306  17                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-1);
1307  17                                                              if(ball_sit[1]-1!=0){
1308  18                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-2);
1309  18                                                              if(ball_sit[1]-2!=0){
1310  19                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-3);
1311  19                                                                      if(ball_sit[1]-3!=0){
1312  20                                                                              clear_dot(ball_sit[0]-12,ball_sit[1]-4);
1313  20                                                                              if(ball_sit[1]-4!=0){
1314  21                                                                                      clear_dot(ball_sit[0]-12,ball_sit[1]-5);
1315  21      
1316  21                                                                              }
1317  20                                                                      }
1318  19                                                              }
1319  18                                                      }
1320  17                                              }
1321  16                                              }
1322  15                                              }
1323  14                                              }
1324  13                                              }
1325  12                                              }
1326  11                                              }
1327  10                                              }
1328   9                                              }
1329   8                                              }
1330   7                                              }
1331   6                                              //
1332   6                                      }
1333   5                                      ball_direction_x=~ball_direction_x;
1334   5                              }
1335   4                      }
1336   3              }
1337   2              //according to y direction to check next y dot status
1338   2              next_dot_y=0;
1339   2              if(ball_direction_y){
1340   3                      //go up
1341   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1342   4                              if(ball_sit[1]-1-i==0){
1343   5                                      next_dot_y=1;
1344   5                                      ball_sit[1]-=i;
1345   5                                      break;
1346   5                              }else if(read_dot(ball_sit[0],ball_sit[1]-1-i) || read_dot(ball_sit[0]+1,ball_sit[1]-1-i)){//if there i
             -s a dot
1347   5                                      next_dot_y=1;
1348   5                                      ball_sit[1]-=(i-1);
1349   5                                      break;
1350   5                              }
1351   4                      }
1352   3                      if(~next_dot_y){
1353   4                              ball_sit[1]-=ball_speed[1];
1354   4                      }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 23  

1355   3              }else{
1356   3                      //go down
1357   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1358   4                              if(read_dot(ball_sit[0],ball_sit[1]+i) || read_dot(ball_sit[0]+1,ball_sit[1]+i)){//if there is a dot
1359   5                                      next_dot_y=1;
1360   5                                      ball_sit[1]+=(i-1);
1361   5                                      break;
1362   5                              }
1363   4                      }
1364   3                      if(~next_dot_y){
1365   4                              ball_sit[1]+=ball_speed[1];
1366   4                      }
1367   3              }
1368   2              //according to x direction to check next x dot status
1369   2              next_dot_x=0;
1370   2              if(ball_direction_x){
1371   3                      //go right
1372   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1373   4                              if(ball_sit[0]+1+i==127){
1374   5                                      next_dot_x=1;
1375   5                                      ball_sit[0]+=i;
1376   5                                      break;
1377   5                              }else if(read_dot(ball_sit[0]+1+i,ball_sit[1]) || read_dot(ball_sit[0]+1+i,ball_sit[1]-1)){//if there i
             -s a dot
1378   5                                      next_dot_x=1;
1379   5                                      ball_sit[0]+=(i-1);
1380   5                                      break;
1381   5                              }
1382   4                      }
1383   3                      if(~next_dot_x){
1384   4                              ball_sit[0]+=ball_speed[0];
1385   4                      }
1386   3              }else{
1387   3                      //go left
1388   3                      for(i=1;i<1+ball_speed[1];i++){//check if there a dot in speed range
1389   4                              if(ball_sit[0]-i==0){
1390   5                                      next_dot_x=1;
1391   5                                      ball_sit[0]-=i;
1392   5                                      break;
1393   5                              }else if(read_dot(ball_sit[0]-i,ball_sit[1]) || read_dot(ball_sit[0]-i,ball_sit[1]-1)){//if there is a 
             -dot
1394   5                                      next_dot_x=1;
1395   5                                      ball_sit[0]-=(i-1);
1396   5                                      break;
1397   5                              }
1398   4                      }
1399   3                      if(~next_dot_x){
1400   4                              ball_sit[0]-=ball_speed[0];
1401   4                      }
1402   3              }
1403   2              }
1404   1      
1405   1      }
1406          //draw now ball
1407          void draw_ball(){
1408   1              //clear previous ball
1409   1              clear_ball();
1410   1              //calculate now ball
1411   1              move_ball();
1412   1              //draw now ball
1413   1              set_dot(ball_sit[0],ball_sit[1]);
1414   1              set_dot(ball_sit[0],ball_sit[1]-1);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 24  

1415   1              set_dot(ball_sit[0]+1,ball_sit[1]);
1416   1              set_dot(ball_sit[0]+1,ball_sit[1]-1);
1417   1      }
1418          
1419          //refresh screen
1420          void refresh_screen(){
1421   1              bit flag,x_change;
1422   1              unsigned char i;
1423   1              unsigned char x,y;
1424   1              //Add frame number
1425   1              if(game_status!=1){
1426   2                      number_frame++;
1427   2              }
1428   1              if(game_status==4){
1429   2                      //start music
1430   2                      LS1=title_music;
1431   2                      //show title
1432   2                      if(frame_begin==0){
1433   3                              number_frame=0;
1434   3                              frame_begin=1;
1435   3                      }else{
1436   3                              if(frame_finish==0){
1437   4                                      //main program for show title
1438   4                                      //show BREAKOUT
1439   4                                      if(number_frame<80){
1440   5                                              if(number_frame==0){
1441   6                                                      while(begin_bit==0);
1442   6                                              }
1443   5                                              for(i=number_frame/10;i<number_frame/10+1;i++){
1444   6                                                      for(y=0;y<12;y++){
1445   7                                                              for(x=0;x<3;x++){
1446   8                                                                      flag=0;
1447   8                                                                      y+=5+15*i;
1448   8                                                                      x+=1;
1449   8                                                                      if(y<64){
1450   9                                                                              choose_screen(1);
1451   9                                                                      }else{
1452   9                                                                              choose_screen(2);
1453   9                                                                              y-=64;
1454   9                                                                              flag=1;
1455   9                                                                      }
1456   8                                                                      lcd_write_command(0xb8|x);
1457   8                                                                      lcd_write_command(0x40|y);
1458   8                                                                      if(flag){
1459   9                                                                              y+=64;
1460   9                                                                      }
1461   8                                                                      y-=5+15*i;
1462   8                                                                      x-=1;
1463   8                                                                      lcd_write_data(title[y+x*12+i*36]);
1464   8                                                              }       
1465   7                                                      }
1466   6                                              }
1467   5                                      }else if(number_frame>80 && number_frame<120){
1468   5                                              //show "clone"
1469   5                                              //clear previous fonts
1470   5                                              choose_screen(0);
1471   5                                              for(x=4;x<6;x++){
1472   6                                                      for(y=64-(number_frame-80);y<64;y++){
1473   7                                                              lcd_write_command(0xb8|x);
1474   7                                                              lcd_write_command(0x40|y);
1475   7                                                              lcd_write_data(0x00);
1476   7                                                      }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 25  

1477   6                                              }
1478   5                                              //show next fonts
1479   5                                              for(i=0;i<5;i++){
1480   6                                                      for(y=0;y<6;y++){
1481   7                                                              for(x=0;x<2;x++){
1482   8                                                                      flag=0;
1483   8                                                                      y+=127-(number_frame-80)+7*i;
1484   8                                                                      x+=4;
1485   8                                                                      if(y<64){
1486   9                                                                              choose_screen(1);
1487   9                                                                      }else{
1488   9                                                                              choose_screen(2);
1489   9                                                                              y-=64;
1490   9                                                                              flag=1;
1491   9                                                                      }
1492   8                                                                      if(y<64){
1493   9                                                                              lcd_write_command(0xb8|x);
1494   9                                                                              lcd_write_command(0x40|y);
1495   9                                                                              if(flag){
1496  10                                                                                      y+=64;
1497  10                                                                              }
1498   9                                                                      y-=127-(number_frame-80)+7*i;
1499   9                                                                      x-=4;
1500   9                                                                      lcd_write_data(clone[y+x*6+i*12]);
1501   9                                                                      }
1502   8                                                              }       
1503   7                                                      }
1504   6                                              }
1505   5                                      }else if(number_frame>120){
1506   5                                              frame_finish=1; 
1507   5                                      }
1508   4                              }else{
1509   4                                      game_status=5;
1510   4                                      frame_finish=0;
1511   4                                      frame_begin=0;
1512   4                              }
1513   3                      }
1514   2              }else if(game_status==5){
1515   2                      if(frame_begin==0){
1516   3                      //prepare for flashing
1517   3                              frame_begin=1;
1518   3                              number_frame=0;
1519   3                      }else{
1520   3                              //check button
1521   3                              start=1;
1522   3                              if(start==0){
1523   4                                      LS1=change;
1524   4                                      first_page();
1525   4                                      draw_block();
1526   4                                      game_status=6;
1527   4                                      frame_begin=0;
1528   4                              }else{
1529   4                              //flashing
1530   4                              if(number_frame>20){
1531   5                                      number_frame=0;
1532   5                              }else if(number_frame>10 && number_frame<20){
1533   5                                      choose_screen(1);
1534   5                                      for(x=6;x<8;x++){
1535   6                                              for(y=20;y<64;y++){
1536   7                                                      lcd_write_command(0xb8|x);
1537   7                                                      lcd_write_command(0x40|y);
1538   7                                                      lcd_write_data(0x00);
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 26  

1539   7                                              }
1540   6                                      }
1541   5                                      choose_screen(2);
1542   5                                      for(x=6;x<8;x++){
1543   6                                              for(y=0;y<43;y++){
1544   7                                                      lcd_write_command(0xb8|x);
1545   7                                                      lcd_write_command(0x40|y);
1546   7                                                      lcd_write_data(0x00);
1547   7                                              }
1548   6                                      }
1549   5                              }else if(number_frame<30){
1550   5                                      for(i=0;i<11;i++){
1551   6                                              for(y=0;y<6;y++){
1552   7                                                      for(x=0;x<2;x++){
1553   8                                                              flag=0;
1554   8                                                              y+=20+7*i;
1555   8                                                              x+=6;
1556   8                                                              if(y<64){
1557   9                                                                      choose_screen(1);
1558   9                                                              }else{
1559   9                                                                      choose_screen(2);
1560   9                                                                      y-=64;
1561   9                                                                      flag=1;
1562   9                                                              }
1563   8                                                              if(y<64){
1564   9                                                              lcd_write_command(0xb8|x);
1565   9                                                              lcd_write_command(0x40|y);
1566   9                                                              if(flag){
1567  10                                                                      y+=64;
1568  10                                                              }
1569   9                                                              y-=20+7*i;
1570   9                                                              x-=6;
1571   9                                                              lcd_write_data(press_start[y+x*6+i*12]);
1572   9                                                              }
1573   8                                                      }       
1574   7                                              }
1575   6                                      }
1576   5                              }
1577   4                              }
1578   3                      }
1579   2              }else if(game_status==6){
1580   2                      //start music
1581   2                      LS1=level_music;
1582   2                      //show level
1583   2                      //show life
1584   2                      if(frame_finish==0){
1585   3                              number_frame=0;
1586   3                      }
1587   2                      max_number_frame=30;
1588   2                      if(number_frame<max_number_frame){
1589   3                              if(number_frame==0){
1590   4                                      while(begin_bit==0);
1591   4                              }
1592   3                              if(frame_finish==0){
1593   4                                      show_level(level);
1594   4                                      frame_finish=1;
1595   4                              }
1596   3                      }else{
1597   3                              clear_low_screen();
1598   3                              game_status=3;
1599   3                              frame_finish=0;
1600   3                      }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 27  

1601   2              }else if(game_status==3){
1602   2                      //show life
1603   2                      if(frame_finish==0){
1604   3                              number_frame=0;
1605   3                      }
1606   2                      max_number_frame=30;
1607   2                      if(number_frame<max_number_frame){
1608   3                              if(frame_finish==0){
1609   4                                      show_life(life);
1610   4                                      frame_finish=1;
1611   4                              }
1612   3                      }else{
1613   3                              TR0=1;
1614   3                              LS1=change;
1615   3                              clear_low_screen();
1616   3                              init_ball();
1617   3                              init_bar();
1618   3                              game_status=1;
1619   3                              frame_finish=0;
1620   3                      }
1621   2              }else if(game_status==7){
1622   2                      //become longer
1623   2                      if(frame_begin==0){
1624   3                              frame_begin=1;
1625   3                              number_frame=0;
1626   3                      }else{
1627   3                              if(number_frame<50){
1628   4                                      if(number_frame%10==0){
1629   5                                              for(i=0;i<bar_len;i++){
1630   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1631   6                                              }
1632   5                                      }else{
1633   5                                              for(i=0;i<bar_len;i++){
1634   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1635   6                                              }
1636   5                                      }
1637   4                              }else if(number_frame==50){
1638   4                                      bar_len=128;
1639   4                                      temp_bar_sit_x=bar_sit[0];
1640   4                                      bar_sit[0]=0;
1641   4                              }else if(number_frame<100){
1642   4                                      if(number_frame%10==0){
1643   5                                              for(i=0;i<bar_len;i++){
1644   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1645   6                                              }
1646   5                                      }else{
1647   5                                              for(i=0;i<bar_len;i++){
1648   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1649   6                                              }
1650   5                                      }
1651   4                              }else{
1652   4                                      for(i=0;i<bar_len;i++){
1653   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1654   5                                      }
1655   4                                      frame_begin=0;
1656   4                                      game_status=1;
1657   4                                      longer_time=0;
1658   4                                      longer=1;
1659   4                              }
1660   3                      }
1661   2              }else if(game_status==8){
1662   2                      //clear area
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 28  

1663   2                      if(frame_begin==0){
1664   3                              if((255-TL0)<85){
1665   4                                      x=0;
1666   4                              }else{
1667   4                                      x=2;
1668   4                              }
1669   3                              frame_begin=1;
1670   3                              number_frame=0;
1671   3                      }else{
1672   3                              if(number_frame<50){
1673   4                                      if(number_frame%10==0){
1674   5                                              for(i=0;i<2;i++){
1675   6                                                      for(y=0;y<64;y++){
1676   7                                                              choose_screen(0);
1677   7                                                              lcd_write_command(0xb8|x+i);
1678   7                                                              lcd_write_command(0x40|y);
1679   7                                                              lcd_write_data(0x00);
1680   7                                                      }
1681   6                                              }
1682   5                                      }else{
1683   5                                              for(i=0;i<2;i++){
1684   6                                                      for(y=0;y<64;y++){
1685   7                                                              choose_screen(0);
1686   7                                                              lcd_write_command(0xb8|x+i);
1687   7                                                              lcd_write_command(0x40|y);
1688   7                                                              lcd_write_data(0xFF);
1689   7                                                      }
1690   6                                              }
1691   5                                      }
1692   4                              }else{
1693   4                                      for(i=0;i<2;i++){
1694   5                                                      for(y=0;y<64;y++){
1695   6                                                              choose_screen(0);
1696   6                                                              lcd_write_command(0xb8|x+i);
1697   6                                                              lcd_write_command(0x40|y);
1698   6                                                              lcd_write_data(0x00);
1699   6                                                      }
1700   5                                      }
1701   4                                      frame_begin=0;
1702   4                                      game_status=1;
1703   4                              }
1704   3                      }
1705   2              }else if(game_status==9){
1706   2                      //win
1707   2                      x=prop_x;
1708   2                      y=prop_y;
1709   2                      y=y/8;
1710   2                      if(frame_begin==0){
1711   3                              frame_begin=1;
1712   3                              number_frame=0;
1713   3                      }else{
1714   3                              if(number_frame<50){
1715   4                                      if(number_frame%10==0){
1716   5                                              for(i=0;i<8;i++){
1717   6                                                      if(x+i<64){
1718   7                                                              choose_screen(1);
1719   7                                                              x_change=0;
1720   7                                                      }else{
1721   7                                                              x-=64;
1722   7                                                              choose_screen(2);
1723   7                                                              x_change=1;
1724   7                                                      }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 29  

1725   6                                                      lcd_write_command(0x40|(x+i));
1726   6                                                      lcd_write_command(0xb8|y);
1727   6                                                      lcd_write_data(prop[0x00]);
1728   6                                                      if(x_change){
1729   7                                                              x+=64;
1730   7                                                      }
1731   6                                              }
1732   5                                      }else{
1733   5                                              for(i=0;i<8;i++){
1734   6                                                      if(x+i<64){
1735   7                                                              choose_screen(1);
1736   7                                                              x_change=0;
1737   7                                                      }else{
1738   7                                                              x-=64;
1739   7                                                              choose_screen(2);
1740   7                                                              x_change=1;
1741   7                                                      }
1742   6                                                      lcd_write_command(0x40|(x+i));
1743   6                                                      lcd_write_command(0xb8|y);
1744   6                                                      lcd_write_data(prop[i+16]);
1745   6                                                      if(x_change){
1746   7                                                              x+=64;
1747   7                                                      }               
1748   6                                              }
1749   5                                      }
1750   4                              }else{
1751   4                                      for(i=0;i<8;i++){
1752   5                                              if(x+i<64){
1753   6                                                      choose_screen(1);
1754   6                                                      x_change=0;
1755   6                                              }else{
1756   6                                                      x-=64;
1757   6                                                      choose_screen(2);
1758   6                                                      x_change=1;
1759   6                                              }
1760   5                                              lcd_write_command(0x40|(x+i));
1761   5                                              lcd_write_command(0xb8|y);
1762   5                                              lcd_write_data(0x00);
1763   5                                              if(x_change){
1764   6                                                      x+=64;
1765   6                                              }
1766   5                                      }
1767   4                                      frame_begin=0;
1768   4                                      game_status=2;
1769   4                              }
1770   3                      }
1771   2              }else if(game_status==10){
1772   2                      //Die
1773   2                      x=prop_x;
1774   2                      y=prop_y;
1775   2                      y=y/8;
1776   2                      if(frame_begin==0){
1777   3                              frame_begin=1;
1778   3                              number_frame=0;
1779   3                      }else{
1780   3                              if(number_frame<50){
1781   4                                      if(number_frame%10==0){
1782   5                                              for(i=0;i<8;i++){
1783   6                                                      if(x+i<64){
1784   7                                                              choose_screen(1);
1785   7                                                              x_change=0;
1786   7                                                      }else{
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 30  

1787   7                                                              x-=64;
1788   7                                                              choose_screen(2);
1789   7                                                              x_change=1;
1790   7                                                      }
1791   6                                                      lcd_write_command(0x40|(x+i));
1792   6                                                      lcd_write_command(0xb8|y);
1793   6                                                      lcd_write_data(prop[0x00]);
1794   6                                                      if(x_change){
1795   7                                                              x+=64;
1796   7                                                      }
1797   6                                              }
1798   5                                      }else{
1799   5                                              for(i=0;i<8;i++){
1800   6                                                      if(x+i<64){
1801   7                                                              choose_screen(1);
1802   7                                                              x_change=0;
1803   7                                                      }else{
1804   7                                                              x-=64;
1805   7                                                              choose_screen(2);
1806   7                                                              x_change=1;
1807   7                                                      }
1808   6                                                      lcd_write_command(0x40|(x+i));
1809   6                                                      lcd_write_command(0xb8|y);
1810   6                                                      lcd_write_data(prop[i+24]);
1811   6                                                      if(x_change){
1812   7                                                              x+=64;
1813   7                                                      }               
1814   6                                              }
1815   5                                      }
1816   4                              }else{
1817   4                                      for(i=0;i<8;i++){
1818   5                                              if(x+i<64){
1819   6                                                      choose_screen(1);
1820   6                                                      x_change=0;
1821   6                                              }else{
1822   6                                                      x-=64;
1823   6                                                      choose_screen(2);
1824   6                                                      x_change=1;
1825   6                                              }
1826   5                                              lcd_write_command(0x40|(x+i));
1827   5                                              lcd_write_command(0xb8|y);
1828   5                                              lcd_write_data(0x00);
1829   5                                              if(x_change){
1830   6                                                      x+=64;
1831   6                                              }
1832   5                                      }
1833   4                                      frame_begin=0;
1834   4                                      game_status=0;
1835   4                              }
1836   3                      }
1837   2              }else if(game_status==11){
1838   2                      //end longer
1839   2                      if(frame_begin==0){
1840   3                              frame_begin=1;
1841   3                              number_frame=0;
1842   3                              longer=0;
1843   3                      }else{
1844   3                              if(number_frame<50){
1845   4                                      if(number_frame%10==0){
1846   5                                              for(i=0;i<bar_len;i++){
1847   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1848   6                                              }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 31  

1849   5                                      }else{
1850   5                                              for(i=0;i<bar_len;i++){
1851   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1852   6                                              }
1853   5                                      }
1854   4                              }else if(number_frame==50){
1855   4                                      for(i=0;i<bar_len;i++){
1856   5                                              clear_dot(i+bar_sit[0],bar_sit[1]);
1857   5                                      }
1858   4                                      bar_len=o_bar_len;
1859   4                                      bar_sit[0]=temp_bar_sit_x;
1860   4                              }else if(number_frame<100){
1861   4                                      if(number_frame%10==0){
1862   5                                              for(i=0;i<bar_len;i++){
1863   6                                                      clear_dot(i+bar_sit[0],bar_sit[1]);
1864   6                                              }
1865   5                                      }else{
1866   5                                              for(i=0;i<bar_len;i++){
1867   6                                                      set_dot(i+bar_sit[0],bar_sit[1]);
1868   6                                              }
1869   5                                      }
1870   4                              }else{
1871   4                                      for(i=0;i<bar_len;i++){
1872   5                                              set_dot(i+bar_sit[0],bar_sit[1]);
1873   5                                      }
1874   4                                      frame_begin=0;
1875   4                                      game_status=1;
1876   4                              }
1877   3                      }
1878   2              }else{
1879   2              //check block
1880   2              check_block();
1881   2              //draw bar
1882   2              if(game_status==1){
1883   3                      if(do_doing){
1884   4                              while(finish_bit==0);
1885   4                              do_doing=0;
1886   4                      }
1887   3                      //music
1888   3                      LS1=run_music;
1889   3                      //continuous status
1890   3                      random_prop();
1891   3                      draw_bar();
1892   3                      draw_ball();
1893   3              }else if(game_status==0){
1894   3                      LS1=die_music;
1895   3                      //end status
1896   3                      if(life==0){
1897   4                              //init level
1898   4                              level=1;
1899   4                              //die information
1900   4                               //show life
1901   4                              if(frame_finish==0){
1902   5                                      number_frame=0;
1903   5                              }
1904   4                              if(number_frame<30){
1905   5                                      if(number_frame==0){
1906   6                                              while(begin_bit==0);
1907   6                                      }
1908   5                                      if(frame_finish==0){
1909   6                                              show_life(life);
1910   6                                              frame_finish=1;
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 32  

1911   6                                      }
1912   5                              }else if(number_frame==30){
1913   5                                      //show "DIE!"
1914   5                                      first_page();
1915   5                                      prop_exist=0;
1916   5                                      longer=0;
1917   5                                      longer_time=0;
1918   5                                      for(i=0;i<4;i++){
1919   6                                              for(y=0;y<12;y++){
1920   7                                                      for(x=0;x<3;x++){
1921   8                                                              flag=0;
1922   8                                                              y+=30+20*i;
1923   8                                                              x+=1;
1924   8                                                              if(y<64){
1925   9                                                                      choose_screen(1);
1926   9                                                              }else{
1927   9                                                                      choose_screen(2);
1928   9                                                                      y-=64;
1929   9                                                                      flag=1;
1930   9                                                              }
1931   8                                                              lcd_write_command(0xb8|x);
1932   8                                                              lcd_write_command(0x40|y);
1933   8                                                              if(flag){
1934   9                                                                      y+=64;
1935   9                                                              }
1936   8                                                              y-=30+20*i;
1937   8                                                              x-=1;
1938   8                                                              lcd_write_data(die[y+x*12+i*36]);
1939   8                                                      }       
1940   7                                              }       
1941   6                                      }
1942   5                              }else if(number_frame>30){
1943   5                                      //check button
1944   5                                      start=1;
1945   5                                      if(start==0){
1946   6                                              first_page();
1947   6                                              life=5;
1948   6                                              game_status=4;
1949   6                                              frame_finish=0;
1950   6                                      }else{
1951   6                                      //flashing
1952   6                                              if(number_frame>50){
1953   7                                                      number_frame=31;
1954   7                                              }else if(number_frame>40 && number_frame<50){
1955   7                                                      choose_screen(0);
1956   7                                                      for(x=6;x<8;x++){
1957   8                                                              for(y=0;y<64;y++){
1958   9                                                                      lcd_write_command(0xb8|x);
1959   9                                                                      lcd_write_command(0x40|y);
1960   9                                                                      lcd_write_data(0x00);
1961   9                                                              }
1962   8                                                      }
1963   7                                              }else if(number_frame<40){
1964   7                                                      for(i=0;i<11;i++){
1965   8                                                              for(y=0;y<6;y++){
1966   9                                                                      for(x=0;x<2;x++){
1967  10                                                                              flag=0;
1968  10                                                                              y+=20+7*i;
1969  10                                                                              x+=6;
1970  10                                                                              if(y<64){
1971  11                                                                                      choose_screen(1);
1972  11                                                                              }else{
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 33  

1973  11                                                                                      choose_screen(2);
1974  11                                                                                      y-=64;
1975  11                                                                                      flag=1;
1976  11                                                                              }
1977  10                                                                              if(y<64){
1978  11                                                                                      lcd_write_command(0xb8|x);
1979  11                                                                                      lcd_write_command(0x40|y);
1980  11                                                                              if(flag){
1981  12                                                                                      y+=64;
1982  12                                                                              }
1983  11                                                                              y-=20+7*i;
1984  11                                                                              x-=6;
1985  11                                                                              lcd_write_data(press_start[y+x*6+i*12]);
1986  11                                                                              }
1987  10                                                                      }       
1988   9                                                              }
1989   8                                                      }
1990   7                                              }
1991   6                                      }
1992   5                              }
1993   4                      }else{
1994   4                              //show life
1995   4                              if(frame_finish==0){
1996   5                                      number_frame=0;
1997   5                                      life-=1;
1998   5                              }
1999   4                              max_number_frame=30;
2000   4                              if(number_frame<max_number_frame){
2001   5                                      if(frame_finish==0){
2002   6                                              number_frame=0;
2003   6                                      }
2004   5                                      if(frame_finish==0){
2005   6                                              show_life(life);
2006   6                                              frame_finish=1;
2007   6                                      }
2008   5                              }else{
2009   5                                      clear_low_screen();
2010   5                                      init_ball();
2011   5                                      init_bar();
2012   5                                      game_status=1;
2013   5                                      frame_finish=0;
2014   5                              }
2015   4                      }
2016   3              }else if(game_status==2){
2017   3                      //win status
2018   3                      //"WIN!"
2019   3                      LS1=win_music;
2020   3                      prop_exist=0;
2021   3                      longer=0;
2022   3                      longer_time=0;
2023   3                      if(frame_finish==0){
2024   4                              if(number_frame==0){
2025   5                                      while(begin_bit==0);
2026   5                              }
2027   4                              frame_finish=1;
2028   4                              number_frame=0;
2029   4                              first_page();
2030   4                              for(i=0;i<4;i++){
2031   5                                      for(y=0;y<12;y++){
2032   6                                              for(x=0;x<3;x++){
2033   7                                                      flag=0;
2034   7                                                      y+=30+20*i;
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 34  

2035   7                                                      x+=1;
2036   7                                                      if(y<64){
2037   8                                                              choose_screen(1);
2038   8                                                      }else{
2039   8                                                              choose_screen(2);
2040   8                                                              y-=64;
2041   8                                                              flag=1;
2042   8                                                      }
2043   7                                                      lcd_write_command(0xb8|x);
2044   7                                                      lcd_write_command(0x40|y);
2045   7                                                      if(flag){
2046   8                                                              y+=64;
2047   8                                                      }
2048   7                                                      y-=30+20*i;
2049   7                                                      x-=1;
2050   7                                                      lcd_write_data(win[y+x*12+i*36]);
2051   7                                              }       
2052   6                                      }
2053   5                              }
2054   4                      }else{
2055   4                              //check button
2056   4                              start=1;
2057   4                              if(start==0){
2058   5                                      first_page();
2059   5                                      if(level<3){
2060   6                                              level++;
2061   6                                              draw_block();
2062   6                                              game_status=6;
2063   6                                              
2064   6                                      }else{
2065   6                                              level=1;
2066   6                                              life=5;
2067   6                                              game_status=4;
2068   6                                      }
2069   5                                      frame_finish=0;
2070   5                              }else{
2071   5                              //flashing
2072   5                              if(number_frame>20){
2073   6                                      number_frame=0;
2074   6                              }else if(number_frame>10 && number_frame<20){
2075   6                                      choose_screen(0);
2076   6                                      for(x=6;x<8;x++){
2077   7                                              for(y=0;y<64;y++){
2078   8                                                      lcd_write_command(0xb8|x);
2079   8                                                      lcd_write_command(0x40|y);
2080   8                                                      lcd_write_data(0x00);
2081   8                                              }
2082   7                                      }
2083   6                              }else if(number_frame<30){
2084   6                                      for(i=0;i<11;i++){
2085   7                                              for(y=0;y<6;y++){
2086   8                                                      for(x=0;x<2;x++){
2087   9                                                              flag=0;
2088   9                                                              y+=20+7*i;
2089   9                                                              x+=6;
2090   9                                                              if(y<64){
2091  10                                                                      choose_screen(1);
2092  10                                                              }else{
2093  10                                                                      choose_screen(2);
2094  10                                                                      y-=64;
2095  10                                                                      flag=1;
2096  10                                                              }
C51 COMPILER V8.02   GAME                                                                  12/05/2013 12:51:35 PAGE 35  

2097   9                                                              if(y<64){
2098  10                                                              lcd_write_command(0xb8|x);
2099  10                                                              lcd_write_command(0x40|y);
2100  10                                                              if(flag){
2101  11                                                                      y+=64;
2102  11                                                              }
2103  10                                                              y-=20+7*i;
2104  10                                                              x-=6;
2105  10                                                              lcd_write_data(press_start[y+x*6+i*12]);
2106  10                                                              }
2107   9                                                      }       
2108   8                                              }
2109   7                                      }
2110   6                              }
2111   5                              }       
2112   4                      }
2113   3              }
2114   2              }
2115   1      }
2116          
2117          //initial fiunction
2118          //init the game
2119          void game_init(){
2120   1              lcd_init();
2121   1              first_page();
2122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10256    ----
   CONSTANT SIZE    =   2187    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
